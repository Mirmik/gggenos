Created by PLY version 3.7 (http://www.dabeaz.com/ply)

Unused terminals:

    APLICATION
    DOUBLECOLON
    WRONGSTRING
    IN
    MPROD
    HEXNUMBER
    OR
    BINNUMBER
    SEMI
    SUPERWORD

Grammar

Rule 0     S' -> inblock
Rule 1     dblock -> block
Rule 2     dblock -> divider block
Rule 3     block -> LBRACE inblock RBRACE
Rule 4     inblock -> metaexpr
Rule 5     inblock -> inblock divider metaexpr
Rule 6     inblock -> divider inblock
Rule 7     inblock -> inblock divider
Rule 8     print -> PRINT expr
Rule 9     module -> MODULE WORD COLON dblock
Rule 10    deffunc -> DEFFUNC func COLON dblock
Rule 11    define -> DEFINE WORD expr
Rule 12    define -> WORD DEFOP expr
Rule 13    dict -> LBRACE declares RBRACE
Rule 14    dict -> LBRACE RBRACE
Rule 15    declares -> declare
Rule 16    declares -> declares COMMA declare
Rule 17    declare -> expr COLON expr
Rule 18    if -> IF expr QUESTION expr COLON expr
Rule 19    divider -> DIVIDER
Rule 20    input -> INPUT
Rule 21    modules -> MODULES
Rule 22    append -> var APPEND expr
Rule 23    func -> WORD LPAREN args RPAREN
Rule 24    func -> WORD LPAREN args RPAREN block
Rule 25    metaexpr -> expr
Rule 26    metaexpr -> deffunc
Rule 27    metaexpr -> module
Rule 28    metaexpr -> declare
Rule 29    metaexpr -> append
Rule 30    metaexpr -> define
Rule 31    metaexpr -> execscan
Rule 32    metaexpr -> application
Rule 33    metaexpr -> compile
Rule 34    metaexpr -> downlevel
Rule 35    metaexpr -> if
Rule 36    list -> LBRACKET comms RBRACKET
Rule 37    list -> LBRACKET RBRACKET
Rule 38    break -> BREAK
Rule 39    parttree -> AMPERSAND metaexpr
Rule 40    args -> <empty>
Rule 41    args -> comms
Rule 42    comms -> expr
Rule 43    comms -> comms COMMA expr
Rule 44    equal -> WORD EQUALS expr
Rule 45    dequal -> element EQUALS expr
Rule 46    application -> APPLICATION var
Rule 47    expr -> expralg
Rule 48    expr -> parttree
Rule 49    expr -> alg0
Rule 50    expr -> print
Rule 51    expr -> varvar
Rule 52    expr -> variables
Rule 53    expr -> python
Rule 54    expr -> execfile
Rule 55    expr -> break
Rule 56    expr -> curfile
Rule 57    expr -> exectext
Rule 58    expr -> equal
Rule 59    expr -> dequal
Rule 60    expr -> element
Rule 61    expr -> mlist
Rule 62    expr -> yield
Rule 63    expr -> repeat
Rule 64    expr -> pass
Rule 65    expr -> dict
Rule 66    expr -> return
Rule 67    expr -> modules
Rule 68    expr -> exfiles
Rule 69    expr -> input
Rule 70    expralg -> term
Rule 71    expralg -> abspath
Rule 72    expralg -> invrelpath
Rule 73    expralg -> relpath
Rule 74    expralg -> relpathbase
Rule 75    expralg -> func
Rule 76    expralg -> block
Rule 77    expralg -> list
Rule 78    return -> RETURN expr
Rule 79    term -> str
Rule 80    term -> float
Rule 81    term -> int
Rule 82    term -> var
Rule 83    int -> NUMBER
Rule 84    python -> PYTHON str
Rule 85    execfile -> EXECFILE expr
Rule 86    execscan -> EXECSCAN expr
Rule 87    exectext -> EXECTEXT expr
Rule 88    downlevel -> DOWNLEVEL expr
Rule 89    float -> FLOAT
Rule 90    yield -> YIELD
Rule 91    str -> STRING
Rule 92    repeat -> REPEAT
Rule 93    element -> expr LBRACKET expr RBRACKET
Rule 94    var -> WORD
Rule 95    variables -> VARIABLES expr
Rule 96    mlist -> MLIST COLON dblock
Rule 97    varvar -> var
Rule 98    varvar -> varvar POINT var
Rule 99    curfile -> CURFILE
Rule 100   relpath -> RELPATH
Rule 101   exfiles -> EXFILES
Rule 102   relpathbase -> RELPATHBASE
Rule 103   compile -> COMPILE
Rule 104   pass -> PASS
Rule 105   invrelpath -> INVRELPATH
Rule 106   abspath -> ABSPATH
Rule 107   alg0 -> alg1
Rule 108   alg0 -> alg0 PLUSMINUS alg1
Rule 109   alg0 -> PLUSMINUS alg1
Rule 110   alg1 -> alg2
Rule 111   alg1 -> alg1 DIVMUL alg2
Rule 112   alg2 -> alg3
Rule 113   alg2 -> alg2 DPROD alg3
Rule 114   alg3 -> expralg

Terminals, with rules where they appear

ABSPATH              : 106
AMPERSAND            : 39
APLICATION           : 
APPEND               : 22
APPLICATION          : 46
BINNUMBER            : 
BREAK                : 38
COLON                : 9 10 17 18 96
COMMA                : 16 43
COMPILE              : 103
CURFILE              : 99
DEFFUNC              : 10
DEFINE               : 11
DEFOP                : 12
DIVIDER              : 19
DIVMUL               : 111
DOUBLECOLON          : 
DOWNLEVEL            : 88
DPROD                : 113
EQUALS               : 44 45
EXECFILE             : 85
EXECSCAN             : 86
EXECTEXT             : 87
EXFILES              : 101
FLOAT                : 89
HEXNUMBER            : 
IF                   : 18
IN                   : 
INPUT                : 20
INVRELPATH           : 105
LBRACE               : 3 13 14
LBRACKET             : 36 37 93
LPAREN               : 23 24
MLIST                : 96
MODULE               : 9
MODULES              : 21
MPROD                : 
NUMBER               : 83
OR                   : 
PASS                 : 104
PLUSMINUS            : 108 109
POINT                : 98
PRINT                : 8
PYTHON               : 84
QUESTION             : 18
RBRACE               : 3 13 14
RBRACKET             : 36 37 93
RELPATH              : 100
RELPATHBASE          : 102
REPEAT               : 92
RETURN               : 78
RPAREN               : 23 24
SEMI                 : 
STRING               : 91
SUPERWORD            : 
VARIABLES            : 95
WORD                 : 9 11 12 23 24 44 94
WRONGSTRING          : 
YIELD                : 90
error                : 

Nonterminals, with rules where they appear

abspath              : 71
alg0                 : 49 108
alg1                 : 107 108 109 111
alg2                 : 110 111 113
alg3                 : 112 113
append               : 29
application          : 32
args                 : 23 24
block                : 1 2 24 76
break                : 55
comms                : 36 41 43
compile              : 33
curfile              : 56
dblock               : 9 10 96
declare              : 15 16 28
declares             : 13 16
deffunc              : 26
define               : 30
dequal               : 59
dict                 : 65
divider              : 2 5 6 7
downlevel            : 34
element              : 45 60
equal                : 58
execfile             : 54
execscan             : 31
exectext             : 57
exfiles              : 68
expr                 : 8 11 12 17 17 18 18 18 22 25 42 43 44 45 78 85 86 87 88 93 93 95
expralg              : 47 114
float                : 80
func                 : 10 75
if                   : 35
inblock              : 3 5 6 7 0
input                : 69
int                  : 81
invrelpath           : 72
list                 : 77
metaexpr             : 4 5 39
mlist                : 61
module               : 27
modules              : 67
parttree             : 48
pass                 : 64
print                : 50
python               : 53
relpath              : 73
relpathbase          : 74
repeat               : 63
return               : 66
str                  : 79 84
term                 : 70
var                  : 22 46 82 97 98
variables            : 52
varvar               : 51 98
yield                : 62

Parsing method: LALR

state 0

    (0) S' -> . inblock
    (4) inblock -> . metaexpr
    (5) inblock -> . inblock divider metaexpr
    (6) inblock -> . divider inblock
    (7) inblock -> . inblock divider
    (25) metaexpr -> . expr
    (26) metaexpr -> . deffunc
    (27) metaexpr -> . module
    (28) metaexpr -> . declare
    (29) metaexpr -> . append
    (30) metaexpr -> . define
    (31) metaexpr -> . execscan
    (32) metaexpr -> . application
    (33) metaexpr -> . compile
    (34) metaexpr -> . downlevel
    (35) metaexpr -> . if
    (19) divider -> . DIVIDER
    (47) expr -> . expralg
    (48) expr -> . parttree
    (49) expr -> . alg0
    (50) expr -> . print
    (51) expr -> . varvar
    (52) expr -> . variables
    (53) expr -> . python
    (54) expr -> . execfile
    (55) expr -> . break
    (56) expr -> . curfile
    (57) expr -> . exectext
    (58) expr -> . equal
    (59) expr -> . dequal
    (60) expr -> . element
    (61) expr -> . mlist
    (62) expr -> . yield
    (63) expr -> . repeat
    (64) expr -> . pass
    (65) expr -> . dict
    (66) expr -> . return
    (67) expr -> . modules
    (68) expr -> . exfiles
    (69) expr -> . input
    (10) deffunc -> . DEFFUNC func COLON dblock
    (9) module -> . MODULE WORD COLON dblock
    (17) declare -> . expr COLON expr
    (22) append -> . var APPEND expr
    (11) define -> . DEFINE WORD expr
    (12) define -> . WORD DEFOP expr
    (86) execscan -> . EXECSCAN expr
    (46) application -> . APPLICATION var
    (103) compile -> . COMPILE
    (88) downlevel -> . DOWNLEVEL expr
    (18) if -> . IF expr QUESTION expr COLON expr
    (70) expralg -> . term
    (71) expralg -> . abspath
    (72) expralg -> . invrelpath
    (73) expralg -> . relpath
    (74) expralg -> . relpathbase
    (75) expralg -> . func
    (76) expralg -> . block
    (77) expralg -> . list
    (39) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (8) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (84) python -> . PYTHON str
    (85) execfile -> . EXECFILE expr
    (38) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (44) equal -> . WORD EQUALS expr
    (45) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON dblock
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (13) dict -> . LBRACE declares RBRACE
    (14) dict -> . LBRACE RBRACE
    (78) return -> . RETURN expr
    (21) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (20) input -> . INPUT
    (94) var -> . WORD
    (79) term -> . str
    (80) term -> . float
    (81) term -> . int
    (82) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN
    (24) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (91) str -> . STRING
    (89) float -> . FLOAT
    (83) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    DIVIDER         shift and go to state 35
    DEFFUNC         shift and go to state 21
    MODULE          shift and go to state 52
    DEFINE          shift and go to state 72
    WORD            shift and go to state 63
    EXECSCAN        shift and go to state 11
    APPLICATION     shift and go to state 1
    COMPILE         shift and go to state 86
    DOWNLEVEL       shift and go to state 59
    IF              shift and go to state 4
    AMPERSAND       shift and go to state 36
    PLUSMINUS       shift and go to state 13
    PRINT           shift and go to state 46
    VARIABLES       shift and go to state 22
    PYTHON          shift and go to state 73
    EXECFILE        shift and go to state 28
    BREAK           shift and go to state 88
    CURFILE         shift and go to state 17
    EXECTEXT        shift and go to state 71
    MLIST           shift and go to state 9
    YIELD           shift and go to state 5
    REPEAT          shift and go to state 48
    PASS            shift and go to state 19
    LBRACE          shift and go to state 74
    RETURN          shift and go to state 45
    MODULES         shift and go to state 8
    EXFILES         shift and go to state 51
    INPUT           shift and go to state 58
    ABSPATH         shift and go to state 84
    INVRELPATH      shift and go to state 78
    RELPATH         shift and go to state 2
    RELPATHBASE     shift and go to state 43
    LBRACKET        shift and go to state 33
    STRING          shift and go to state 65
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 14

    yield                          shift and go to state 3
    application                    shift and go to state 44
    declare                        shift and go to state 6
    element                        shift and go to state 7
    execscan                       shift and go to state 40
    python                         shift and go to state 50
    parttree                       shift and go to state 10
    term                           shift and go to state 53
    abspath                        shift and go to state 69
    append                         shift and go to state 12
    block                          shift and go to state 77
    alg0                           shift and go to state 54
    module                         shift and go to state 55
    int                            shift and go to state 66
    if                             shift and go to state 15
    repeat                         shift and go to state 56
    alg1                           shift and go to state 16
    var                            shift and go to state 57
    divider                        shift and go to state 18
    break                          shift and go to state 47
    pass                           shift and go to state 20
    mlist                          shift and go to state 60
    execfile                       shift and go to state 61
    invrelpath                     shift and go to state 62
    modules                        shift and go to state 49
    deffunc                        shift and go to state 64
    variables                      shift and go to state 23
    relpath                        shift and go to state 70
    curfile                        shift and go to state 24
    alg3                           shift and go to state 67
    relpathbase                    shift and go to state 68
    alg2                           shift and go to state 25
    exectext                       shift and go to state 26
    metaexpr                       shift and go to state 27
    varvar                         shift and go to state 31
    downlevel                      shift and go to state 29
    equal                          shift and go to state 30
    input                          shift and go to state 82
    print                          shift and go to state 76
    exfiles                        shift and go to state 79
    return                         shift and go to state 34
    float                          shift and go to state 80
    func                           shift and go to state 37
    str                            shift and go to state 38
    expr                           shift and go to state 81
    expralg                        shift and go to state 42
    inblock                        shift and go to state 39
    dequal                         shift and go to state 75
    define                         shift and go to state 85
    compile                        shift and go to state 41
    list                           shift and go to state 87
    dict                           shift and go to state 83

state 1

    (46) application -> APPLICATION . var
    (94) var -> . WORD

    WORD            shift and go to state 89

    var                            shift and go to state 90

state 2

    (100) relpath -> RELPATH .

    COLON           reduce using rule 100 (relpath -> RELPATH .)
    LBRACKET        reduce using rule 100 (relpath -> RELPATH .)
    DIVIDER         reduce using rule 100 (relpath -> RELPATH .)
    $end            reduce using rule 100 (relpath -> RELPATH .)
    QUESTION        reduce using rule 100 (relpath -> RELPATH .)
    RBRACE          reduce using rule 100 (relpath -> RELPATH .)
    RBRACKET        reduce using rule 100 (relpath -> RELPATH .)
    COMMA           reduce using rule 100 (relpath -> RELPATH .)
    RPAREN          reduce using rule 100 (relpath -> RELPATH .)
    DPROD           reduce using rule 100 (relpath -> RELPATH .)
    DIVMUL          reduce using rule 100 (relpath -> RELPATH .)
    PLUSMINUS       reduce using rule 100 (relpath -> RELPATH .)


state 3

    (62) expr -> yield .

    COLON           reduce using rule 62 (expr -> yield .)
    LBRACKET        reduce using rule 62 (expr -> yield .)
    DIVIDER         reduce using rule 62 (expr -> yield .)
    $end            reduce using rule 62 (expr -> yield .)
    QUESTION        reduce using rule 62 (expr -> yield .)
    RBRACE          reduce using rule 62 (expr -> yield .)
    RBRACKET        reduce using rule 62 (expr -> yield .)
    COMMA           reduce using rule 62 (expr -> yield .)
    RPAREN          reduce using rule 62 (expr -> yield .)


state 4

    (18) if -> IF . expr QUESTION expr COLON expr
    (47) expr -> . expralg
    (48) expr -> . parttree
    (49) expr -> . alg0
    (50) expr -> . print
    (51) expr -> . varvar
    (52) expr -> . variables
    (53) expr -> . python
    (54) expr -> . execfile
    (55) expr -> . break
    (56) expr -> . curfile
    (57) expr -> . exectext
    (58) expr -> . equal
    (59) expr -> . dequal
    (60) expr -> . element
    (61) expr -> . mlist
    (62) expr -> . yield
    (63) expr -> . repeat
    (64) expr -> . pass
    (65) expr -> . dict
    (66) expr -> . return
    (67) expr -> . modules
    (68) expr -> . exfiles
    (69) expr -> . input
    (70) expralg -> . term
    (71) expralg -> . abspath
    (72) expralg -> . invrelpath
    (73) expralg -> . relpath
    (74) expralg -> . relpathbase
    (75) expralg -> . func
    (76) expralg -> . block
    (77) expralg -> . list
    (39) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (8) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (84) python -> . PYTHON str
    (85) execfile -> . EXECFILE expr
    (38) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (44) equal -> . WORD EQUALS expr
    (45) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON dblock
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (13) dict -> . LBRACE declares RBRACE
    (14) dict -> . LBRACE RBRACE
    (78) return -> . RETURN expr
    (21) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (20) input -> . INPUT
    (79) term -> . str
    (80) term -> . float
    (81) term -> . int
    (82) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN
    (24) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (94) var -> . WORD
    (91) str -> . STRING
    (89) float -> . FLOAT
    (83) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    AMPERSAND       shift and go to state 36
    PLUSMINUS       shift and go to state 13
    PRINT           shift and go to state 46
    VARIABLES       shift and go to state 22
    PYTHON          shift and go to state 73
    EXECFILE        shift and go to state 28
    BREAK           shift and go to state 88
    CURFILE         shift and go to state 17
    EXECTEXT        shift and go to state 71
    WORD            shift and go to state 92
    MLIST           shift and go to state 9
    YIELD           shift and go to state 5
    REPEAT          shift and go to state 48
    PASS            shift and go to state 19
    LBRACE          shift and go to state 74
    RETURN          shift and go to state 45
    MODULES         shift and go to state 8
    EXFILES         shift and go to state 51
    INPUT           shift and go to state 58
    ABSPATH         shift and go to state 84
    INVRELPATH      shift and go to state 78
    RELPATH         shift and go to state 2
    RELPATHBASE     shift and go to state 43
    LBRACKET        shift and go to state 33
    STRING          shift and go to state 65
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 14

    yield                          shift and go to state 3
    alg1                           shift and go to state 16
    var                            shift and go to state 91
    element                        shift and go to state 7
    dequal                         shift and go to state 75
    parttree                       shift and go to state 10
    python                         shift and go to state 50
    block                          shift and go to state 77
    alg0                           shift and go to state 54
    repeat                         shift and go to state 56
    return                         shift and go to state 34
    break                          shift and go to state 47
    equal                          shift and go to state 30
    mlist                          shift and go to state 60
    execfile                       shift and go to state 61
    invrelpath                     shift and go to state 62
    modules                        shift and go to state 49
    variables                      shift and go to state 23
    int                            shift and go to state 66
    curfile                        shift and go to state 24
    alg3                           shift and go to state 67
    relpathbase                    shift and go to state 68
    alg2                           shift and go to state 25
    exectext                       shift and go to state 26
    abspath                        shift and go to state 69
    relpath                        shift and go to state 70
    input                          shift and go to state 82
    print                          shift and go to state 76
    exfiles                        shift and go to state 79
    varvar                         shift and go to state 31
    float                          shift and go to state 80
    func                           shift and go to state 37
    term                           shift and go to state 53
    str                            shift and go to state 38
    expr                           shift and go to state 93
    pass                           shift and go to state 20
    expralg                        shift and go to state 42
    list                           shift and go to state 87
    dict                           shift and go to state 83

state 5

    (90) yield -> YIELD .

    COLON           reduce using rule 90 (yield -> YIELD .)
    LBRACKET        reduce using rule 90 (yield -> YIELD .)
    DIVIDER         reduce using rule 90 (yield -> YIELD .)
    $end            reduce using rule 90 (yield -> YIELD .)
    RBRACE          reduce using rule 90 (yield -> YIELD .)
    QUESTION        reduce using rule 90 (yield -> YIELD .)
    RBRACKET        reduce using rule 90 (yield -> YIELD .)
    COMMA           reduce using rule 90 (yield -> YIELD .)
    RPAREN          reduce using rule 90 (yield -> YIELD .)


state 6

    (28) metaexpr -> declare .

    RBRACE          reduce using rule 28 (metaexpr -> declare .)
    DIVIDER         reduce using rule 28 (metaexpr -> declare .)
    $end            reduce using rule 28 (metaexpr -> declare .)
    COLON           reduce using rule 28 (metaexpr -> declare .)
    LBRACKET        reduce using rule 28 (metaexpr -> declare .)
    QUESTION        reduce using rule 28 (metaexpr -> declare .)
    RBRACKET        reduce using rule 28 (metaexpr -> declare .)
    COMMA           reduce using rule 28 (metaexpr -> declare .)
    RPAREN          reduce using rule 28 (metaexpr -> declare .)


state 7

    (60) expr -> element .
    (45) dequal -> element . EQUALS expr

    COLON           reduce using rule 60 (expr -> element .)
    LBRACKET        reduce using rule 60 (expr -> element .)
    DIVIDER         reduce using rule 60 (expr -> element .)
    $end            reduce using rule 60 (expr -> element .)
    QUESTION        reduce using rule 60 (expr -> element .)
    RBRACE          reduce using rule 60 (expr -> element .)
    RBRACKET        reduce using rule 60 (expr -> element .)
    COMMA           reduce using rule 60 (expr -> element .)
    RPAREN          reduce using rule 60 (expr -> element .)
    EQUALS          shift and go to state 94


state 8

    (21) modules -> MODULES .

    COLON           reduce using rule 21 (modules -> MODULES .)
    LBRACKET        reduce using rule 21 (modules -> MODULES .)
    DIVIDER         reduce using rule 21 (modules -> MODULES .)
    $end            reduce using rule 21 (modules -> MODULES .)
    QUESTION        reduce using rule 21 (modules -> MODULES .)
    RBRACE          reduce using rule 21 (modules -> MODULES .)
    RBRACKET        reduce using rule 21 (modules -> MODULES .)
    COMMA           reduce using rule 21 (modules -> MODULES .)
    RPAREN          reduce using rule 21 (modules -> MODULES .)


state 9

    (96) mlist -> MLIST . COLON dblock

    COLON           shift and go to state 95


state 10

    (48) expr -> parttree .

    COLON           reduce using rule 48 (expr -> parttree .)
    LBRACKET        reduce using rule 48 (expr -> parttree .)
    DIVIDER         reduce using rule 48 (expr -> parttree .)
    $end            reduce using rule 48 (expr -> parttree .)
    QUESTION        reduce using rule 48 (expr -> parttree .)
    RBRACE          reduce using rule 48 (expr -> parttree .)
    RBRACKET        reduce using rule 48 (expr -> parttree .)
    COMMA           reduce using rule 48 (expr -> parttree .)
    RPAREN          reduce using rule 48 (expr -> parttree .)


state 11

    (86) execscan -> EXECSCAN . expr
    (47) expr -> . expralg
    (48) expr -> . parttree
    (49) expr -> . alg0
    (50) expr -> . print
    (51) expr -> . varvar
    (52) expr -> . variables
    (53) expr -> . python
    (54) expr -> . execfile
    (55) expr -> . break
    (56) expr -> . curfile
    (57) expr -> . exectext
    (58) expr -> . equal
    (59) expr -> . dequal
    (60) expr -> . element
    (61) expr -> . mlist
    (62) expr -> . yield
    (63) expr -> . repeat
    (64) expr -> . pass
    (65) expr -> . dict
    (66) expr -> . return
    (67) expr -> . modules
    (68) expr -> . exfiles
    (69) expr -> . input
    (70) expralg -> . term
    (71) expralg -> . abspath
    (72) expralg -> . invrelpath
    (73) expralg -> . relpath
    (74) expralg -> . relpathbase
    (75) expralg -> . func
    (76) expralg -> . block
    (77) expralg -> . list
    (39) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (8) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (84) python -> . PYTHON str
    (85) execfile -> . EXECFILE expr
    (38) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (44) equal -> . WORD EQUALS expr
    (45) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON dblock
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (13) dict -> . LBRACE declares RBRACE
    (14) dict -> . LBRACE RBRACE
    (78) return -> . RETURN expr
    (21) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (20) input -> . INPUT
    (79) term -> . str
    (80) term -> . float
    (81) term -> . int
    (82) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN
    (24) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (94) var -> . WORD
    (91) str -> . STRING
    (89) float -> . FLOAT
    (83) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    AMPERSAND       shift and go to state 36
    PLUSMINUS       shift and go to state 13
    PRINT           shift and go to state 46
    VARIABLES       shift and go to state 22
    PYTHON          shift and go to state 73
    EXECFILE        shift and go to state 28
    BREAK           shift and go to state 88
    CURFILE         shift and go to state 17
    EXECTEXT        shift and go to state 71
    WORD            shift and go to state 92
    MLIST           shift and go to state 9
    YIELD           shift and go to state 5
    REPEAT          shift and go to state 48
    PASS            shift and go to state 19
    LBRACE          shift and go to state 74
    RETURN          shift and go to state 45
    MODULES         shift and go to state 8
    EXFILES         shift and go to state 51
    INPUT           shift and go to state 58
    ABSPATH         shift and go to state 84
    INVRELPATH      shift and go to state 78
    RELPATH         shift and go to state 2
    RELPATHBASE     shift and go to state 43
    LBRACKET        shift and go to state 33
    STRING          shift and go to state 65
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 14

    yield                          shift and go to state 3
    alg1                           shift and go to state 16
    var                            shift and go to state 91
    element                        shift and go to state 7
    dequal                         shift and go to state 75
    parttree                       shift and go to state 10
    python                         shift and go to state 50
    block                          shift and go to state 77
    alg0                           shift and go to state 54
    repeat                         shift and go to state 56
    return                         shift and go to state 34
    break                          shift and go to state 47
    equal                          shift and go to state 30
    mlist                          shift and go to state 60
    execfile                       shift and go to state 61
    invrelpath                     shift and go to state 62
    modules                        shift and go to state 49
    variables                      shift and go to state 23
    int                            shift and go to state 66
    curfile                        shift and go to state 24
    alg3                           shift and go to state 67
    relpathbase                    shift and go to state 68
    alg2                           shift and go to state 25
    exectext                       shift and go to state 26
    abspath                        shift and go to state 69
    relpath                        shift and go to state 70
    input                          shift and go to state 82
    print                          shift and go to state 76
    exfiles                        shift and go to state 79
    varvar                         shift and go to state 31
    float                          shift and go to state 80
    func                           shift and go to state 37
    term                           shift and go to state 53
    str                            shift and go to state 38
    expr                           shift and go to state 96
    pass                           shift and go to state 20
    expralg                        shift and go to state 42
    list                           shift and go to state 87
    dict                           shift and go to state 83

state 12

    (29) metaexpr -> append .

    RBRACE          reduce using rule 29 (metaexpr -> append .)
    DIVIDER         reduce using rule 29 (metaexpr -> append .)
    $end            reduce using rule 29 (metaexpr -> append .)
    COLON           reduce using rule 29 (metaexpr -> append .)
    LBRACKET        reduce using rule 29 (metaexpr -> append .)
    QUESTION        reduce using rule 29 (metaexpr -> append .)
    RBRACKET        reduce using rule 29 (metaexpr -> append .)
    COMMA           reduce using rule 29 (metaexpr -> append .)
    RPAREN          reduce using rule 29 (metaexpr -> append .)


state 13

    (109) alg0 -> PLUSMINUS . alg1
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg
    (70) expralg -> . term
    (71) expralg -> . abspath
    (72) expralg -> . invrelpath
    (73) expralg -> . relpath
    (74) expralg -> . relpathbase
    (75) expralg -> . func
    (76) expralg -> . block
    (77) expralg -> . list
    (79) term -> . str
    (80) term -> . float
    (81) term -> . int
    (82) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN
    (24) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (91) str -> . STRING
    (89) float -> . FLOAT
    (83) int -> . NUMBER
    (94) var -> . WORD

    ABSPATH         shift and go to state 84
    INVRELPATH      shift and go to state 78
    RELPATH         shift and go to state 2
    RELPATHBASE     shift and go to state 43
    WORD            shift and go to state 98
    LBRACE          shift and go to state 99
    LBRACKET        shift and go to state 33
    STRING          shift and go to state 65
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 14

    relpathbase                    shift and go to state 68
    alg2                           shift and go to state 25
    block                          shift and go to state 77
    abspath                        shift and go to state 69
    func                           shift and go to state 37
    alg1                           shift and go to state 97
    str                            shift and go to state 38
    relpath                        shift and go to state 70
    float                          shift and go to state 80
    var                            shift and go to state 100
    int                            shift and go to state 66
    invrelpath                     shift and go to state 62
    term                           shift and go to state 53
    list                           shift and go to state 87
    expralg                        shift and go to state 101
    alg3                           shift and go to state 67

state 14

    (83) int -> NUMBER .

    DPROD           reduce using rule 83 (int -> NUMBER .)
    DIVMUL          reduce using rule 83 (int -> NUMBER .)
    PLUSMINUS       reduce using rule 83 (int -> NUMBER .)
    COLON           reduce using rule 83 (int -> NUMBER .)
    LBRACKET        reduce using rule 83 (int -> NUMBER .)
    DIVIDER         reduce using rule 83 (int -> NUMBER .)
    $end            reduce using rule 83 (int -> NUMBER .)
    QUESTION        reduce using rule 83 (int -> NUMBER .)
    RBRACE          reduce using rule 83 (int -> NUMBER .)
    RBRACKET        reduce using rule 83 (int -> NUMBER .)
    COMMA           reduce using rule 83 (int -> NUMBER .)
    RPAREN          reduce using rule 83 (int -> NUMBER .)


state 15

    (35) metaexpr -> if .

    RBRACE          reduce using rule 35 (metaexpr -> if .)
    DIVIDER         reduce using rule 35 (metaexpr -> if .)
    $end            reduce using rule 35 (metaexpr -> if .)
    COLON           reduce using rule 35 (metaexpr -> if .)
    LBRACKET        reduce using rule 35 (metaexpr -> if .)
    QUESTION        reduce using rule 35 (metaexpr -> if .)
    RBRACKET        reduce using rule 35 (metaexpr -> if .)
    COMMA           reduce using rule 35 (metaexpr -> if .)
    RPAREN          reduce using rule 35 (metaexpr -> if .)


state 16

    (107) alg0 -> alg1 .
    (111) alg1 -> alg1 . DIVMUL alg2

    PLUSMINUS       reduce using rule 107 (alg0 -> alg1 .)
    COLON           reduce using rule 107 (alg0 -> alg1 .)
    LBRACKET        reduce using rule 107 (alg0 -> alg1 .)
    DIVIDER         reduce using rule 107 (alg0 -> alg1 .)
    $end            reduce using rule 107 (alg0 -> alg1 .)
    RBRACKET        reduce using rule 107 (alg0 -> alg1 .)
    COMMA           reduce using rule 107 (alg0 -> alg1 .)
    RPAREN          reduce using rule 107 (alg0 -> alg1 .)
    QUESTION        reduce using rule 107 (alg0 -> alg1 .)
    RBRACE          reduce using rule 107 (alg0 -> alg1 .)
    DIVMUL          shift and go to state 102


state 17

    (99) curfile -> CURFILE .

    COLON           reduce using rule 99 (curfile -> CURFILE .)
    LBRACKET        reduce using rule 99 (curfile -> CURFILE .)
    DIVIDER         reduce using rule 99 (curfile -> CURFILE .)
    $end            reduce using rule 99 (curfile -> CURFILE .)
    QUESTION        reduce using rule 99 (curfile -> CURFILE .)
    RBRACE          reduce using rule 99 (curfile -> CURFILE .)
    RBRACKET        reduce using rule 99 (curfile -> CURFILE .)
    COMMA           reduce using rule 99 (curfile -> CURFILE .)
    RPAREN          reduce using rule 99 (curfile -> CURFILE .)


state 18

    (6) inblock -> divider . inblock
    (4) inblock -> . metaexpr
    (5) inblock -> . inblock divider metaexpr
    (6) inblock -> . divider inblock
    (7) inblock -> . inblock divider
    (25) metaexpr -> . expr
    (26) metaexpr -> . deffunc
    (27) metaexpr -> . module
    (28) metaexpr -> . declare
    (29) metaexpr -> . append
    (30) metaexpr -> . define
    (31) metaexpr -> . execscan
    (32) metaexpr -> . application
    (33) metaexpr -> . compile
    (34) metaexpr -> . downlevel
    (35) metaexpr -> . if
    (19) divider -> . DIVIDER
    (47) expr -> . expralg
    (48) expr -> . parttree
    (49) expr -> . alg0
    (50) expr -> . print
    (51) expr -> . varvar
    (52) expr -> . variables
    (53) expr -> . python
    (54) expr -> . execfile
    (55) expr -> . break
    (56) expr -> . curfile
    (57) expr -> . exectext
    (58) expr -> . equal
    (59) expr -> . dequal
    (60) expr -> . element
    (61) expr -> . mlist
    (62) expr -> . yield
    (63) expr -> . repeat
    (64) expr -> . pass
    (65) expr -> . dict
    (66) expr -> . return
    (67) expr -> . modules
    (68) expr -> . exfiles
    (69) expr -> . input
    (10) deffunc -> . DEFFUNC func COLON dblock
    (9) module -> . MODULE WORD COLON dblock
    (17) declare -> . expr COLON expr
    (22) append -> . var APPEND expr
    (11) define -> . DEFINE WORD expr
    (12) define -> . WORD DEFOP expr
    (86) execscan -> . EXECSCAN expr
    (46) application -> . APPLICATION var
    (103) compile -> . COMPILE
    (88) downlevel -> . DOWNLEVEL expr
    (18) if -> . IF expr QUESTION expr COLON expr
    (70) expralg -> . term
    (71) expralg -> . abspath
    (72) expralg -> . invrelpath
    (73) expralg -> . relpath
    (74) expralg -> . relpathbase
    (75) expralg -> . func
    (76) expralg -> . block
    (77) expralg -> . list
    (39) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (8) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (84) python -> . PYTHON str
    (85) execfile -> . EXECFILE expr
    (38) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (44) equal -> . WORD EQUALS expr
    (45) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON dblock
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (13) dict -> . LBRACE declares RBRACE
    (14) dict -> . LBRACE RBRACE
    (78) return -> . RETURN expr
    (21) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (20) input -> . INPUT
    (94) var -> . WORD
    (79) term -> . str
    (80) term -> . float
    (81) term -> . int
    (82) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN
    (24) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (91) str -> . STRING
    (89) float -> . FLOAT
    (83) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    DIVIDER         shift and go to state 35
    DEFFUNC         shift and go to state 21
    MODULE          shift and go to state 52
    DEFINE          shift and go to state 72
    WORD            shift and go to state 63
    EXECSCAN        shift and go to state 11
    APPLICATION     shift and go to state 1
    COMPILE         shift and go to state 86
    DOWNLEVEL       shift and go to state 59
    IF              shift and go to state 4
    AMPERSAND       shift and go to state 36
    PLUSMINUS       shift and go to state 13
    PRINT           shift and go to state 46
    VARIABLES       shift and go to state 22
    PYTHON          shift and go to state 73
    EXECFILE        shift and go to state 28
    BREAK           shift and go to state 88
    CURFILE         shift and go to state 17
    EXECTEXT        shift and go to state 71
    MLIST           shift and go to state 9
    YIELD           shift and go to state 5
    REPEAT          shift and go to state 48
    PASS            shift and go to state 19
    LBRACE          shift and go to state 74
    RETURN          shift and go to state 45
    MODULES         shift and go to state 8
    EXFILES         shift and go to state 51
    INPUT           shift and go to state 58
    ABSPATH         shift and go to state 84
    INVRELPATH      shift and go to state 78
    RELPATH         shift and go to state 2
    RELPATHBASE     shift and go to state 43
    LBRACKET        shift and go to state 33
    STRING          shift and go to state 65
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 14

    yield                          shift and go to state 3
    application                    shift and go to state 44
    declare                        shift and go to state 6
    element                        shift and go to state 7
    execscan                       shift and go to state 40
    python                         shift and go to state 50
    parttree                       shift and go to state 10
    term                           shift and go to state 53
    abspath                        shift and go to state 69
    append                         shift and go to state 12
    block                          shift and go to state 77
    alg0                           shift and go to state 54
    module                         shift and go to state 55
    int                            shift and go to state 66
    if                             shift and go to state 15
    repeat                         shift and go to state 56
    alg1                           shift and go to state 16
    var                            shift and go to state 57
    divider                        shift and go to state 18
    break                          shift and go to state 47
    pass                           shift and go to state 20
    mlist                          shift and go to state 60
    execfile                       shift and go to state 61
    invrelpath                     shift and go to state 62
    modules                        shift and go to state 49
    deffunc                        shift and go to state 64
    variables                      shift and go to state 23
    relpath                        shift and go to state 70
    curfile                        shift and go to state 24
    alg3                           shift and go to state 67
    relpathbase                    shift and go to state 68
    alg2                           shift and go to state 25
    exectext                       shift and go to state 26
    metaexpr                       shift and go to state 27
    varvar                         shift and go to state 31
    downlevel                      shift and go to state 29
    equal                          shift and go to state 30
    input                          shift and go to state 82
    print                          shift and go to state 76
    exfiles                        shift and go to state 79
    return                         shift and go to state 34
    float                          shift and go to state 80
    func                           shift and go to state 37
    str                            shift and go to state 38
    expr                           shift and go to state 81
    expralg                        shift and go to state 42
    inblock                        shift and go to state 103
    dequal                         shift and go to state 75
    define                         shift and go to state 85
    compile                        shift and go to state 41
    list                           shift and go to state 87
    dict                           shift and go to state 83

state 19

    (104) pass -> PASS .

    COLON           reduce using rule 104 (pass -> PASS .)
    LBRACKET        reduce using rule 104 (pass -> PASS .)
    DIVIDER         reduce using rule 104 (pass -> PASS .)
    $end            reduce using rule 104 (pass -> PASS .)
    QUESTION        reduce using rule 104 (pass -> PASS .)
    RBRACE          reduce using rule 104 (pass -> PASS .)
    RBRACKET        reduce using rule 104 (pass -> PASS .)
    COMMA           reduce using rule 104 (pass -> PASS .)
    RPAREN          reduce using rule 104 (pass -> PASS .)


state 20

    (64) expr -> pass .

    COLON           reduce using rule 64 (expr -> pass .)
    LBRACKET        reduce using rule 64 (expr -> pass .)
    DIVIDER         reduce using rule 64 (expr -> pass .)
    $end            reduce using rule 64 (expr -> pass .)
    QUESTION        reduce using rule 64 (expr -> pass .)
    RBRACE          reduce using rule 64 (expr -> pass .)
    RBRACKET        reduce using rule 64 (expr -> pass .)
    COMMA           reduce using rule 64 (expr -> pass .)
    RPAREN          reduce using rule 64 (expr -> pass .)


state 21

    (10) deffunc -> DEFFUNC . func COLON dblock
    (23) func -> . WORD LPAREN args RPAREN
    (24) func -> . WORD LPAREN args RPAREN block

    WORD            shift and go to state 105

    func                           shift and go to state 104

state 22

    (95) variables -> VARIABLES . expr
    (47) expr -> . expralg
    (48) expr -> . parttree
    (49) expr -> . alg0
    (50) expr -> . print
    (51) expr -> . varvar
    (52) expr -> . variables
    (53) expr -> . python
    (54) expr -> . execfile
    (55) expr -> . break
    (56) expr -> . curfile
    (57) expr -> . exectext
    (58) expr -> . equal
    (59) expr -> . dequal
    (60) expr -> . element
    (61) expr -> . mlist
    (62) expr -> . yield
    (63) expr -> . repeat
    (64) expr -> . pass
    (65) expr -> . dict
    (66) expr -> . return
    (67) expr -> . modules
    (68) expr -> . exfiles
    (69) expr -> . input
    (70) expralg -> . term
    (71) expralg -> . abspath
    (72) expralg -> . invrelpath
    (73) expralg -> . relpath
    (74) expralg -> . relpathbase
    (75) expralg -> . func
    (76) expralg -> . block
    (77) expralg -> . list
    (39) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (8) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (84) python -> . PYTHON str
    (85) execfile -> . EXECFILE expr
    (38) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (44) equal -> . WORD EQUALS expr
    (45) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON dblock
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (13) dict -> . LBRACE declares RBRACE
    (14) dict -> . LBRACE RBRACE
    (78) return -> . RETURN expr
    (21) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (20) input -> . INPUT
    (79) term -> . str
    (80) term -> . float
    (81) term -> . int
    (82) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN
    (24) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (94) var -> . WORD
    (91) str -> . STRING
    (89) float -> . FLOAT
    (83) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    AMPERSAND       shift and go to state 36
    PLUSMINUS       shift and go to state 13
    PRINT           shift and go to state 46
    VARIABLES       shift and go to state 22
    PYTHON          shift and go to state 73
    EXECFILE        shift and go to state 28
    BREAK           shift and go to state 88
    CURFILE         shift and go to state 17
    EXECTEXT        shift and go to state 71
    WORD            shift and go to state 92
    MLIST           shift and go to state 9
    YIELD           shift and go to state 5
    REPEAT          shift and go to state 48
    PASS            shift and go to state 19
    LBRACE          shift and go to state 74
    RETURN          shift and go to state 45
    MODULES         shift and go to state 8
    EXFILES         shift and go to state 51
    INPUT           shift and go to state 58
    ABSPATH         shift and go to state 84
    INVRELPATH      shift and go to state 78
    RELPATH         shift and go to state 2
    RELPATHBASE     shift and go to state 43
    LBRACKET        shift and go to state 33
    STRING          shift and go to state 65
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 14

    yield                          shift and go to state 3
    alg1                           shift and go to state 16
    var                            shift and go to state 91
    element                        shift and go to state 7
    dequal                         shift and go to state 75
    parttree                       shift and go to state 10
    python                         shift and go to state 50
    block                          shift and go to state 77
    alg0                           shift and go to state 54
    repeat                         shift and go to state 56
    return                         shift and go to state 34
    break                          shift and go to state 47
    equal                          shift and go to state 30
    mlist                          shift and go to state 60
    execfile                       shift and go to state 61
    invrelpath                     shift and go to state 62
    modules                        shift and go to state 49
    variables                      shift and go to state 23
    int                            shift and go to state 66
    curfile                        shift and go to state 24
    alg3                           shift and go to state 67
    relpathbase                    shift and go to state 68
    alg2                           shift and go to state 25
    exectext                       shift and go to state 26
    abspath                        shift and go to state 69
    relpath                        shift and go to state 70
    input                          shift and go to state 82
    print                          shift and go to state 76
    exfiles                        shift and go to state 79
    varvar                         shift and go to state 31
    float                          shift and go to state 80
    func                           shift and go to state 37
    term                           shift and go to state 53
    str                            shift and go to state 38
    expr                           shift and go to state 106
    pass                           shift and go to state 20
    expralg                        shift and go to state 42
    list                           shift and go to state 87
    dict                           shift and go to state 83

state 23

    (52) expr -> variables .

    COLON           reduce using rule 52 (expr -> variables .)
    LBRACKET        reduce using rule 52 (expr -> variables .)
    DIVIDER         reduce using rule 52 (expr -> variables .)
    $end            reduce using rule 52 (expr -> variables .)
    QUESTION        reduce using rule 52 (expr -> variables .)
    RBRACE          reduce using rule 52 (expr -> variables .)
    RBRACKET        reduce using rule 52 (expr -> variables .)
    COMMA           reduce using rule 52 (expr -> variables .)
    RPAREN          reduce using rule 52 (expr -> variables .)


state 24

    (56) expr -> curfile .

    COLON           reduce using rule 56 (expr -> curfile .)
    LBRACKET        reduce using rule 56 (expr -> curfile .)
    DIVIDER         reduce using rule 56 (expr -> curfile .)
    $end            reduce using rule 56 (expr -> curfile .)
    QUESTION        reduce using rule 56 (expr -> curfile .)
    RBRACE          reduce using rule 56 (expr -> curfile .)
    RBRACKET        reduce using rule 56 (expr -> curfile .)
    COMMA           reduce using rule 56 (expr -> curfile .)
    RPAREN          reduce using rule 56 (expr -> curfile .)


state 25

    (110) alg1 -> alg2 .
    (113) alg2 -> alg2 . DPROD alg3

    DIVMUL          reduce using rule 110 (alg1 -> alg2 .)
    PLUSMINUS       reduce using rule 110 (alg1 -> alg2 .)
    QUESTION        reduce using rule 110 (alg1 -> alg2 .)
    LBRACKET        reduce using rule 110 (alg1 -> alg2 .)
    COLON           reduce using rule 110 (alg1 -> alg2 .)
    DIVIDER         reduce using rule 110 (alg1 -> alg2 .)
    $end            reduce using rule 110 (alg1 -> alg2 .)
    RBRACE          reduce using rule 110 (alg1 -> alg2 .)
    RBRACKET        reduce using rule 110 (alg1 -> alg2 .)
    COMMA           reduce using rule 110 (alg1 -> alg2 .)
    RPAREN          reduce using rule 110 (alg1 -> alg2 .)
    DPROD           shift and go to state 107


state 26

    (57) expr -> exectext .

    COLON           reduce using rule 57 (expr -> exectext .)
    LBRACKET        reduce using rule 57 (expr -> exectext .)
    DIVIDER         reduce using rule 57 (expr -> exectext .)
    $end            reduce using rule 57 (expr -> exectext .)
    QUESTION        reduce using rule 57 (expr -> exectext .)
    RBRACE          reduce using rule 57 (expr -> exectext .)
    RBRACKET        reduce using rule 57 (expr -> exectext .)
    COMMA           reduce using rule 57 (expr -> exectext .)
    RPAREN          reduce using rule 57 (expr -> exectext .)


state 27

    (4) inblock -> metaexpr .

    RBRACE          reduce using rule 4 (inblock -> metaexpr .)
    DIVIDER         reduce using rule 4 (inblock -> metaexpr .)
    $end            reduce using rule 4 (inblock -> metaexpr .)


state 28

    (85) execfile -> EXECFILE . expr
    (47) expr -> . expralg
    (48) expr -> . parttree
    (49) expr -> . alg0
    (50) expr -> . print
    (51) expr -> . varvar
    (52) expr -> . variables
    (53) expr -> . python
    (54) expr -> . execfile
    (55) expr -> . break
    (56) expr -> . curfile
    (57) expr -> . exectext
    (58) expr -> . equal
    (59) expr -> . dequal
    (60) expr -> . element
    (61) expr -> . mlist
    (62) expr -> . yield
    (63) expr -> . repeat
    (64) expr -> . pass
    (65) expr -> . dict
    (66) expr -> . return
    (67) expr -> . modules
    (68) expr -> . exfiles
    (69) expr -> . input
    (70) expralg -> . term
    (71) expralg -> . abspath
    (72) expralg -> . invrelpath
    (73) expralg -> . relpath
    (74) expralg -> . relpathbase
    (75) expralg -> . func
    (76) expralg -> . block
    (77) expralg -> . list
    (39) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (8) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (84) python -> . PYTHON str
    (85) execfile -> . EXECFILE expr
    (38) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (44) equal -> . WORD EQUALS expr
    (45) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON dblock
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (13) dict -> . LBRACE declares RBRACE
    (14) dict -> . LBRACE RBRACE
    (78) return -> . RETURN expr
    (21) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (20) input -> . INPUT
    (79) term -> . str
    (80) term -> . float
    (81) term -> . int
    (82) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN
    (24) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (94) var -> . WORD
    (91) str -> . STRING
    (89) float -> . FLOAT
    (83) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    AMPERSAND       shift and go to state 36
    PLUSMINUS       shift and go to state 13
    PRINT           shift and go to state 46
    VARIABLES       shift and go to state 22
    PYTHON          shift and go to state 73
    EXECFILE        shift and go to state 28
    BREAK           shift and go to state 88
    CURFILE         shift and go to state 17
    EXECTEXT        shift and go to state 71
    WORD            shift and go to state 92
    MLIST           shift and go to state 9
    YIELD           shift and go to state 5
    REPEAT          shift and go to state 48
    PASS            shift and go to state 19
    LBRACE          shift and go to state 74
    RETURN          shift and go to state 45
    MODULES         shift and go to state 8
    EXFILES         shift and go to state 51
    INPUT           shift and go to state 58
    ABSPATH         shift and go to state 84
    INVRELPATH      shift and go to state 78
    RELPATH         shift and go to state 2
    RELPATHBASE     shift and go to state 43
    LBRACKET        shift and go to state 33
    STRING          shift and go to state 65
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 14

    yield                          shift and go to state 3
    alg1                           shift and go to state 16
    var                            shift and go to state 91
    element                        shift and go to state 7
    dequal                         shift and go to state 75
    parttree                       shift and go to state 10
    python                         shift and go to state 50
    block                          shift and go to state 77
    alg0                           shift and go to state 54
    repeat                         shift and go to state 56
    return                         shift and go to state 34
    break                          shift and go to state 47
    equal                          shift and go to state 30
    mlist                          shift and go to state 60
    execfile                       shift and go to state 61
    invrelpath                     shift and go to state 62
    modules                        shift and go to state 49
    variables                      shift and go to state 23
    int                            shift and go to state 66
    curfile                        shift and go to state 24
    alg3                           shift and go to state 67
    relpathbase                    shift and go to state 68
    alg2                           shift and go to state 25
    exectext                       shift and go to state 26
    abspath                        shift and go to state 69
    relpath                        shift and go to state 70
    input                          shift and go to state 82
    print                          shift and go to state 76
    exfiles                        shift and go to state 79
    varvar                         shift and go to state 31
    float                          shift and go to state 80
    func                           shift and go to state 37
    term                           shift and go to state 53
    str                            shift and go to state 38
    expr                           shift and go to state 108
    pass                           shift and go to state 20
    expralg                        shift and go to state 42
    list                           shift and go to state 87
    dict                           shift and go to state 83

state 29

    (34) metaexpr -> downlevel .

    RBRACE          reduce using rule 34 (metaexpr -> downlevel .)
    DIVIDER         reduce using rule 34 (metaexpr -> downlevel .)
    $end            reduce using rule 34 (metaexpr -> downlevel .)
    COLON           reduce using rule 34 (metaexpr -> downlevel .)
    LBRACKET        reduce using rule 34 (metaexpr -> downlevel .)
    QUESTION        reduce using rule 34 (metaexpr -> downlevel .)
    RBRACKET        reduce using rule 34 (metaexpr -> downlevel .)
    COMMA           reduce using rule 34 (metaexpr -> downlevel .)
    RPAREN          reduce using rule 34 (metaexpr -> downlevel .)


state 30

    (58) expr -> equal .

    COLON           reduce using rule 58 (expr -> equal .)
    LBRACKET        reduce using rule 58 (expr -> equal .)
    DIVIDER         reduce using rule 58 (expr -> equal .)
    $end            reduce using rule 58 (expr -> equal .)
    QUESTION        reduce using rule 58 (expr -> equal .)
    RBRACE          reduce using rule 58 (expr -> equal .)
    RBRACKET        reduce using rule 58 (expr -> equal .)
    COMMA           reduce using rule 58 (expr -> equal .)
    RPAREN          reduce using rule 58 (expr -> equal .)


state 31

    (51) expr -> varvar .
    (98) varvar -> varvar . POINT var

    COLON           reduce using rule 51 (expr -> varvar .)
    LBRACKET        reduce using rule 51 (expr -> varvar .)
    DIVIDER         reduce using rule 51 (expr -> varvar .)
    $end            reduce using rule 51 (expr -> varvar .)
    QUESTION        reduce using rule 51 (expr -> varvar .)
    RBRACE          reduce using rule 51 (expr -> varvar .)
    RBRACKET        reduce using rule 51 (expr -> varvar .)
    COMMA           reduce using rule 51 (expr -> varvar .)
    RPAREN          reduce using rule 51 (expr -> varvar .)
    POINT           shift and go to state 109


state 32

    (89) float -> FLOAT .

    DPROD           reduce using rule 89 (float -> FLOAT .)
    DIVMUL          reduce using rule 89 (float -> FLOAT .)
    PLUSMINUS       reduce using rule 89 (float -> FLOAT .)
    COLON           reduce using rule 89 (float -> FLOAT .)
    LBRACKET        reduce using rule 89 (float -> FLOAT .)
    DIVIDER         reduce using rule 89 (float -> FLOAT .)
    $end            reduce using rule 89 (float -> FLOAT .)
    QUESTION        reduce using rule 89 (float -> FLOAT .)
    RBRACE          reduce using rule 89 (float -> FLOAT .)
    RBRACKET        reduce using rule 89 (float -> FLOAT .)
    COMMA           reduce using rule 89 (float -> FLOAT .)
    RPAREN          reduce using rule 89 (float -> FLOAT .)


state 33

    (36) list -> LBRACKET . comms RBRACKET
    (37) list -> LBRACKET . RBRACKET
    (42) comms -> . expr
    (43) comms -> . comms COMMA expr
    (47) expr -> . expralg
    (48) expr -> . parttree
    (49) expr -> . alg0
    (50) expr -> . print
    (51) expr -> . varvar
    (52) expr -> . variables
    (53) expr -> . python
    (54) expr -> . execfile
    (55) expr -> . break
    (56) expr -> . curfile
    (57) expr -> . exectext
    (58) expr -> . equal
    (59) expr -> . dequal
    (60) expr -> . element
    (61) expr -> . mlist
    (62) expr -> . yield
    (63) expr -> . repeat
    (64) expr -> . pass
    (65) expr -> . dict
    (66) expr -> . return
    (67) expr -> . modules
    (68) expr -> . exfiles
    (69) expr -> . input
    (70) expralg -> . term
    (71) expralg -> . abspath
    (72) expralg -> . invrelpath
    (73) expralg -> . relpath
    (74) expralg -> . relpathbase
    (75) expralg -> . func
    (76) expralg -> . block
    (77) expralg -> . list
    (39) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (8) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (84) python -> . PYTHON str
    (85) execfile -> . EXECFILE expr
    (38) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (44) equal -> . WORD EQUALS expr
    (45) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON dblock
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (13) dict -> . LBRACE declares RBRACE
    (14) dict -> . LBRACE RBRACE
    (78) return -> . RETURN expr
    (21) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (20) input -> . INPUT
    (79) term -> . str
    (80) term -> . float
    (81) term -> . int
    (82) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN
    (24) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (94) var -> . WORD
    (91) str -> . STRING
    (89) float -> . FLOAT
    (83) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    RBRACKET        shift and go to state 110
    AMPERSAND       shift and go to state 36
    PLUSMINUS       shift and go to state 13
    PRINT           shift and go to state 46
    VARIABLES       shift and go to state 22
    PYTHON          shift and go to state 73
    EXECFILE        shift and go to state 28
    BREAK           shift and go to state 88
    CURFILE         shift and go to state 17
    EXECTEXT        shift and go to state 71
    WORD            shift and go to state 92
    MLIST           shift and go to state 9
    YIELD           shift and go to state 5
    REPEAT          shift and go to state 48
    PASS            shift and go to state 19
    LBRACE          shift and go to state 74
    RETURN          shift and go to state 45
    MODULES         shift and go to state 8
    EXFILES         shift and go to state 51
    INPUT           shift and go to state 58
    ABSPATH         shift and go to state 84
    INVRELPATH      shift and go to state 78
    RELPATH         shift and go to state 2
    RELPATHBASE     shift and go to state 43
    LBRACKET        shift and go to state 33
    STRING          shift and go to state 65
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 14

    yield                          shift and go to state 3
    alg1                           shift and go to state 16
    return                         shift and go to state 34
    element                        shift and go to state 7
    dequal                         shift and go to state 75
    parttree                       shift and go to state 10
    python                         shift and go to state 50
    abspath                        shift and go to state 69
    block                          shift and go to state 77
    alg0                           shift and go to state 54
    repeat                         shift and go to state 56
    var                            shift and go to state 91
    break                          shift and go to state 47
    equal                          shift and go to state 30
    mlist                          shift and go to state 60
    execfile                       shift and go to state 61
    invrelpath                     shift and go to state 62
    modules                        shift and go to state 49
    variables                      shift and go to state 23
    int                            shift and go to state 66
    curfile                        shift and go to state 24
    alg3                           shift and go to state 67
    relpathbase                    shift and go to state 68
    alg2                           shift and go to state 25
    exectext                       shift and go to state 26
    relpath                        shift and go to state 70
    comms                          shift and go to state 111
    input                          shift and go to state 82
    print                          shift and go to state 76
    exfiles                        shift and go to state 79
    varvar                         shift and go to state 31
    float                          shift and go to state 80
    func                           shift and go to state 37
    term                           shift and go to state 53
    str                            shift and go to state 38
    expr                           shift and go to state 112
    pass                           shift and go to state 20
    dict                           shift and go to state 83
    list                           shift and go to state 87
    expralg                        shift and go to state 42

state 34

    (66) expr -> return .

    COLON           reduce using rule 66 (expr -> return .)
    LBRACKET        reduce using rule 66 (expr -> return .)
    DIVIDER         reduce using rule 66 (expr -> return .)
    $end            reduce using rule 66 (expr -> return .)
    QUESTION        reduce using rule 66 (expr -> return .)
    RBRACE          reduce using rule 66 (expr -> return .)
    RBRACKET        reduce using rule 66 (expr -> return .)
    COMMA           reduce using rule 66 (expr -> return .)
    RPAREN          reduce using rule 66 (expr -> return .)


state 35

    (19) divider -> DIVIDER .

    DIVIDER         reduce using rule 19 (divider -> DIVIDER .)
    DEFFUNC         reduce using rule 19 (divider -> DIVIDER .)
    MODULE          reduce using rule 19 (divider -> DIVIDER .)
    DEFINE          reduce using rule 19 (divider -> DIVIDER .)
    WORD            reduce using rule 19 (divider -> DIVIDER .)
    EXECSCAN        reduce using rule 19 (divider -> DIVIDER .)
    APPLICATION     reduce using rule 19 (divider -> DIVIDER .)
    COMPILE         reduce using rule 19 (divider -> DIVIDER .)
    DOWNLEVEL       reduce using rule 19 (divider -> DIVIDER .)
    IF              reduce using rule 19 (divider -> DIVIDER .)
    AMPERSAND       reduce using rule 19 (divider -> DIVIDER .)
    PLUSMINUS       reduce using rule 19 (divider -> DIVIDER .)
    PRINT           reduce using rule 19 (divider -> DIVIDER .)
    VARIABLES       reduce using rule 19 (divider -> DIVIDER .)
    PYTHON          reduce using rule 19 (divider -> DIVIDER .)
    EXECFILE        reduce using rule 19 (divider -> DIVIDER .)
    BREAK           reduce using rule 19 (divider -> DIVIDER .)
    CURFILE         reduce using rule 19 (divider -> DIVIDER .)
    EXECTEXT        reduce using rule 19 (divider -> DIVIDER .)
    MLIST           reduce using rule 19 (divider -> DIVIDER .)
    YIELD           reduce using rule 19 (divider -> DIVIDER .)
    REPEAT          reduce using rule 19 (divider -> DIVIDER .)
    PASS            reduce using rule 19 (divider -> DIVIDER .)
    LBRACE          reduce using rule 19 (divider -> DIVIDER .)
    RETURN          reduce using rule 19 (divider -> DIVIDER .)
    MODULES         reduce using rule 19 (divider -> DIVIDER .)
    EXFILES         reduce using rule 19 (divider -> DIVIDER .)
    INPUT           reduce using rule 19 (divider -> DIVIDER .)
    ABSPATH         reduce using rule 19 (divider -> DIVIDER .)
    INVRELPATH      reduce using rule 19 (divider -> DIVIDER .)
    RELPATH         reduce using rule 19 (divider -> DIVIDER .)
    RELPATHBASE     reduce using rule 19 (divider -> DIVIDER .)
    LBRACKET        reduce using rule 19 (divider -> DIVIDER .)
    STRING          reduce using rule 19 (divider -> DIVIDER .)
    FLOAT           reduce using rule 19 (divider -> DIVIDER .)
    NUMBER          reduce using rule 19 (divider -> DIVIDER .)
    RBRACE          reduce using rule 19 (divider -> DIVIDER .)
    $end            reduce using rule 19 (divider -> DIVIDER .)


state 36

    (39) parttree -> AMPERSAND . metaexpr
    (25) metaexpr -> . expr
    (26) metaexpr -> . deffunc
    (27) metaexpr -> . module
    (28) metaexpr -> . declare
    (29) metaexpr -> . append
    (30) metaexpr -> . define
    (31) metaexpr -> . execscan
    (32) metaexpr -> . application
    (33) metaexpr -> . compile
    (34) metaexpr -> . downlevel
    (35) metaexpr -> . if
    (47) expr -> . expralg
    (48) expr -> . parttree
    (49) expr -> . alg0
    (50) expr -> . print
    (51) expr -> . varvar
    (52) expr -> . variables
    (53) expr -> . python
    (54) expr -> . execfile
    (55) expr -> . break
    (56) expr -> . curfile
    (57) expr -> . exectext
    (58) expr -> . equal
    (59) expr -> . dequal
    (60) expr -> . element
    (61) expr -> . mlist
    (62) expr -> . yield
    (63) expr -> . repeat
    (64) expr -> . pass
    (65) expr -> . dict
    (66) expr -> . return
    (67) expr -> . modules
    (68) expr -> . exfiles
    (69) expr -> . input
    (10) deffunc -> . DEFFUNC func COLON dblock
    (9) module -> . MODULE WORD COLON dblock
    (17) declare -> . expr COLON expr
    (22) append -> . var APPEND expr
    (11) define -> . DEFINE WORD expr
    (12) define -> . WORD DEFOP expr
    (86) execscan -> . EXECSCAN expr
    (46) application -> . APPLICATION var
    (103) compile -> . COMPILE
    (88) downlevel -> . DOWNLEVEL expr
    (18) if -> . IF expr QUESTION expr COLON expr
    (70) expralg -> . term
    (71) expralg -> . abspath
    (72) expralg -> . invrelpath
    (73) expralg -> . relpath
    (74) expralg -> . relpathbase
    (75) expralg -> . func
    (76) expralg -> . block
    (77) expralg -> . list
    (39) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (8) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (84) python -> . PYTHON str
    (85) execfile -> . EXECFILE expr
    (38) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (44) equal -> . WORD EQUALS expr
    (45) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON dblock
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (13) dict -> . LBRACE declares RBRACE
    (14) dict -> . LBRACE RBRACE
    (78) return -> . RETURN expr
    (21) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (20) input -> . INPUT
    (94) var -> . WORD
    (79) term -> . str
    (80) term -> . float
    (81) term -> . int
    (82) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN
    (24) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (91) str -> . STRING
    (89) float -> . FLOAT
    (83) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    DEFFUNC         shift and go to state 21
    MODULE          shift and go to state 52
    DEFINE          shift and go to state 72
    WORD            shift and go to state 63
    EXECSCAN        shift and go to state 11
    APPLICATION     shift and go to state 1
    COMPILE         shift and go to state 86
    DOWNLEVEL       shift and go to state 59
    IF              shift and go to state 4
    AMPERSAND       shift and go to state 36
    PLUSMINUS       shift and go to state 13
    PRINT           shift and go to state 46
    VARIABLES       shift and go to state 22
    PYTHON          shift and go to state 73
    EXECFILE        shift and go to state 28
    BREAK           shift and go to state 88
    CURFILE         shift and go to state 17
    EXECTEXT        shift and go to state 71
    MLIST           shift and go to state 9
    YIELD           shift and go to state 5
    REPEAT          shift and go to state 48
    PASS            shift and go to state 19
    LBRACE          shift and go to state 74
    RETURN          shift and go to state 45
    MODULES         shift and go to state 8
    EXFILES         shift and go to state 51
    INPUT           shift and go to state 58
    ABSPATH         shift and go to state 84
    INVRELPATH      shift and go to state 78
    RELPATH         shift and go to state 2
    RELPATHBASE     shift and go to state 43
    LBRACKET        shift and go to state 33
    STRING          shift and go to state 65
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 14

    yield                          shift and go to state 3
    application                    shift and go to state 44
    declare                        shift and go to state 6
    element                        shift and go to state 7
    execscan                       shift and go to state 40
    python                         shift and go to state 50
    parttree                       shift and go to state 10
    term                           shift and go to state 53
    abspath                        shift and go to state 69
    append                         shift and go to state 12
    block                          shift and go to state 77
    alg0                           shift and go to state 54
    module                         shift and go to state 55
    int                            shift and go to state 66
    if                             shift and go to state 15
    repeat                         shift and go to state 56
    alg1                           shift and go to state 16
    var                            shift and go to state 57
    break                          shift and go to state 47
    pass                           shift and go to state 20
    mlist                          shift and go to state 60
    execfile                       shift and go to state 61
    invrelpath                     shift and go to state 62
    modules                        shift and go to state 49
    deffunc                        shift and go to state 64
    variables                      shift and go to state 23
    downlevel                      shift and go to state 29
    curfile                        shift and go to state 24
    alg3                           shift and go to state 67
    relpathbase                    shift and go to state 68
    alg2                           shift and go to state 25
    exectext                       shift and go to state 26
    metaexpr                       shift and go to state 113
    varvar                         shift and go to state 31
    relpath                        shift and go to state 70
    equal                          shift and go to state 30
    input                          shift and go to state 82
    print                          shift and go to state 76
    exfiles                        shift and go to state 79
    return                         shift and go to state 34
    float                          shift and go to state 80
    func                           shift and go to state 37
    str                            shift and go to state 38
    expr                           shift and go to state 81
    expralg                        shift and go to state 42
    dequal                         shift and go to state 75
    define                         shift and go to state 85
    compile                        shift and go to state 41
    list                           shift and go to state 87
    dict                           shift and go to state 83

state 37

    (75) expralg -> func .

    COLON           reduce using rule 75 (expralg -> func .)
    LBRACKET        reduce using rule 75 (expralg -> func .)
    DIVIDER         reduce using rule 75 (expralg -> func .)
    $end            reduce using rule 75 (expralg -> func .)
    QUESTION        reduce using rule 75 (expralg -> func .)
    RBRACE          reduce using rule 75 (expralg -> func .)
    RBRACKET        reduce using rule 75 (expralg -> func .)
    COMMA           reduce using rule 75 (expralg -> func .)
    RPAREN          reduce using rule 75 (expralg -> func .)
    DPROD           reduce using rule 75 (expralg -> func .)
    DIVMUL          reduce using rule 75 (expralg -> func .)
    PLUSMINUS       reduce using rule 75 (expralg -> func .)


state 38

    (79) term -> str .

    COLON           reduce using rule 79 (term -> str .)
    LBRACKET        reduce using rule 79 (term -> str .)
    DIVIDER         reduce using rule 79 (term -> str .)
    $end            reduce using rule 79 (term -> str .)
    QUESTION        reduce using rule 79 (term -> str .)
    RBRACE          reduce using rule 79 (term -> str .)
    RBRACKET        reduce using rule 79 (term -> str .)
    COMMA           reduce using rule 79 (term -> str .)
    RPAREN          reduce using rule 79 (term -> str .)
    DPROD           reduce using rule 79 (term -> str .)
    DIVMUL          reduce using rule 79 (term -> str .)
    PLUSMINUS       reduce using rule 79 (term -> str .)


state 39

    (0) S' -> inblock .
    (5) inblock -> inblock . divider metaexpr
    (7) inblock -> inblock . divider
    (19) divider -> . DIVIDER

    DIVIDER         shift and go to state 35

    divider                        shift and go to state 114

state 40

    (31) metaexpr -> execscan .

    RBRACE          reduce using rule 31 (metaexpr -> execscan .)
    DIVIDER         reduce using rule 31 (metaexpr -> execscan .)
    $end            reduce using rule 31 (metaexpr -> execscan .)
    COLON           reduce using rule 31 (metaexpr -> execscan .)
    LBRACKET        reduce using rule 31 (metaexpr -> execscan .)
    QUESTION        reduce using rule 31 (metaexpr -> execscan .)
    RBRACKET        reduce using rule 31 (metaexpr -> execscan .)
    COMMA           reduce using rule 31 (metaexpr -> execscan .)
    RPAREN          reduce using rule 31 (metaexpr -> execscan .)


state 41

    (33) metaexpr -> compile .

    RBRACE          reduce using rule 33 (metaexpr -> compile .)
    DIVIDER         reduce using rule 33 (metaexpr -> compile .)
    $end            reduce using rule 33 (metaexpr -> compile .)
    COLON           reduce using rule 33 (metaexpr -> compile .)
    LBRACKET        reduce using rule 33 (metaexpr -> compile .)
    QUESTION        reduce using rule 33 (metaexpr -> compile .)
    RBRACKET        reduce using rule 33 (metaexpr -> compile .)
    COMMA           reduce using rule 33 (metaexpr -> compile .)
    RPAREN          reduce using rule 33 (metaexpr -> compile .)


state 42

    (47) expr -> expralg .
    (114) alg3 -> expralg .

  ! reduce/reduce conflict for COLON resolved using rule 47 (expr -> expralg .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 47 (expr -> expralg .)
  ! reduce/reduce conflict for DIVIDER resolved using rule 47 (expr -> expralg .)
  ! reduce/reduce conflict for $end resolved using rule 47 (expr -> expralg .)
  ! reduce/reduce conflict for QUESTION resolved using rule 47 (expr -> expralg .)
  ! reduce/reduce conflict for RBRACE resolved using rule 47 (expr -> expralg .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 47 (expr -> expralg .)
  ! reduce/reduce conflict for COMMA resolved using rule 47 (expr -> expralg .)
  ! reduce/reduce conflict for RPAREN resolved using rule 47 (expr -> expralg .)
    COLON           reduce using rule 47 (expr -> expralg .)
    LBRACKET        reduce using rule 47 (expr -> expralg .)
    DIVIDER         reduce using rule 47 (expr -> expralg .)
    $end            reduce using rule 47 (expr -> expralg .)
    QUESTION        reduce using rule 47 (expr -> expralg .)
    RBRACE          reduce using rule 47 (expr -> expralg .)
    RBRACKET        reduce using rule 47 (expr -> expralg .)
    COMMA           reduce using rule 47 (expr -> expralg .)
    RPAREN          reduce using rule 47 (expr -> expralg .)
    DPROD           reduce using rule 114 (alg3 -> expralg .)
    DIVMUL          reduce using rule 114 (alg3 -> expralg .)
    PLUSMINUS       reduce using rule 114 (alg3 -> expralg .)

  ! COLON           [ reduce using rule 114 (alg3 -> expralg .) ]
  ! LBRACKET        [ reduce using rule 114 (alg3 -> expralg .) ]
  ! DIVIDER         [ reduce using rule 114 (alg3 -> expralg .) ]
  ! $end            [ reduce using rule 114 (alg3 -> expralg .) ]
  ! QUESTION        [ reduce using rule 114 (alg3 -> expralg .) ]
  ! RBRACE          [ reduce using rule 114 (alg3 -> expralg .) ]
  ! RBRACKET        [ reduce using rule 114 (alg3 -> expralg .) ]
  ! COMMA           [ reduce using rule 114 (alg3 -> expralg .) ]
  ! RPAREN          [ reduce using rule 114 (alg3 -> expralg .) ]


state 43

    (102) relpathbase -> RELPATHBASE .

    COLON           reduce using rule 102 (relpathbase -> RELPATHBASE .)
    LBRACKET        reduce using rule 102 (relpathbase -> RELPATHBASE .)
    DIVIDER         reduce using rule 102 (relpathbase -> RELPATHBASE .)
    $end            reduce using rule 102 (relpathbase -> RELPATHBASE .)
    QUESTION        reduce using rule 102 (relpathbase -> RELPATHBASE .)
    RBRACE          reduce using rule 102 (relpathbase -> RELPATHBASE .)
    RBRACKET        reduce using rule 102 (relpathbase -> RELPATHBASE .)
    COMMA           reduce using rule 102 (relpathbase -> RELPATHBASE .)
    RPAREN          reduce using rule 102 (relpathbase -> RELPATHBASE .)
    DPROD           reduce using rule 102 (relpathbase -> RELPATHBASE .)
    DIVMUL          reduce using rule 102 (relpathbase -> RELPATHBASE .)
    PLUSMINUS       reduce using rule 102 (relpathbase -> RELPATHBASE .)


state 44

    (32) metaexpr -> application .

    RBRACE          reduce using rule 32 (metaexpr -> application .)
    DIVIDER         reduce using rule 32 (metaexpr -> application .)
    $end            reduce using rule 32 (metaexpr -> application .)
    COLON           reduce using rule 32 (metaexpr -> application .)
    LBRACKET        reduce using rule 32 (metaexpr -> application .)
    QUESTION        reduce using rule 32 (metaexpr -> application .)
    RBRACKET        reduce using rule 32 (metaexpr -> application .)
    COMMA           reduce using rule 32 (metaexpr -> application .)
    RPAREN          reduce using rule 32 (metaexpr -> application .)


state 45

    (78) return -> RETURN . expr
    (47) expr -> . expralg
    (48) expr -> . parttree
    (49) expr -> . alg0
    (50) expr -> . print
    (51) expr -> . varvar
    (52) expr -> . variables
    (53) expr -> . python
    (54) expr -> . execfile
    (55) expr -> . break
    (56) expr -> . curfile
    (57) expr -> . exectext
    (58) expr -> . equal
    (59) expr -> . dequal
    (60) expr -> . element
    (61) expr -> . mlist
    (62) expr -> . yield
    (63) expr -> . repeat
    (64) expr -> . pass
    (65) expr -> . dict
    (66) expr -> . return
    (67) expr -> . modules
    (68) expr -> . exfiles
    (69) expr -> . input
    (70) expralg -> . term
    (71) expralg -> . abspath
    (72) expralg -> . invrelpath
    (73) expralg -> . relpath
    (74) expralg -> . relpathbase
    (75) expralg -> . func
    (76) expralg -> . block
    (77) expralg -> . list
    (39) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (8) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (84) python -> . PYTHON str
    (85) execfile -> . EXECFILE expr
    (38) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (44) equal -> . WORD EQUALS expr
    (45) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON dblock
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (13) dict -> . LBRACE declares RBRACE
    (14) dict -> . LBRACE RBRACE
    (78) return -> . RETURN expr
    (21) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (20) input -> . INPUT
    (79) term -> . str
    (80) term -> . float
    (81) term -> . int
    (82) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN
    (24) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (94) var -> . WORD
    (91) str -> . STRING
    (89) float -> . FLOAT
    (83) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    AMPERSAND       shift and go to state 36
    PLUSMINUS       shift and go to state 13
    PRINT           shift and go to state 46
    VARIABLES       shift and go to state 22
    PYTHON          shift and go to state 73
    EXECFILE        shift and go to state 28
    BREAK           shift and go to state 88
    CURFILE         shift and go to state 17
    EXECTEXT        shift and go to state 71
    WORD            shift and go to state 92
    MLIST           shift and go to state 9
    YIELD           shift and go to state 5
    REPEAT          shift and go to state 48
    PASS            shift and go to state 19
    LBRACE          shift and go to state 74
    RETURN          shift and go to state 45
    MODULES         shift and go to state 8
    EXFILES         shift and go to state 51
    INPUT           shift and go to state 58
    ABSPATH         shift and go to state 84
    INVRELPATH      shift and go to state 78
    RELPATH         shift and go to state 2
    RELPATHBASE     shift and go to state 43
    LBRACKET        shift and go to state 33
    STRING          shift and go to state 65
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 14

    yield                          shift and go to state 3
    alg1                           shift and go to state 16
    var                            shift and go to state 91
    element                        shift and go to state 7
    dequal                         shift and go to state 75
    parttree                       shift and go to state 10
    python                         shift and go to state 50
    block                          shift and go to state 77
    alg0                           shift and go to state 54
    repeat                         shift and go to state 56
    return                         shift and go to state 34
    break                          shift and go to state 47
    equal                          shift and go to state 30
    mlist                          shift and go to state 60
    execfile                       shift and go to state 61
    invrelpath                     shift and go to state 62
    modules                        shift and go to state 49
    variables                      shift and go to state 23
    int                            shift and go to state 66
    curfile                        shift and go to state 24
    alg3                           shift and go to state 67
    relpathbase                    shift and go to state 68
    alg2                           shift and go to state 25
    exectext                       shift and go to state 26
    abspath                        shift and go to state 69
    relpath                        shift and go to state 70
    input                          shift and go to state 82
    print                          shift and go to state 76
    exfiles                        shift and go to state 79
    varvar                         shift and go to state 31
    float                          shift and go to state 80
    func                           shift and go to state 37
    term                           shift and go to state 53
    str                            shift and go to state 38
    expr                           shift and go to state 115
    pass                           shift and go to state 20
    expralg                        shift and go to state 42
    list                           shift and go to state 87
    dict                           shift and go to state 83

state 46

    (8) print -> PRINT . expr
    (47) expr -> . expralg
    (48) expr -> . parttree
    (49) expr -> . alg0
    (50) expr -> . print
    (51) expr -> . varvar
    (52) expr -> . variables
    (53) expr -> . python
    (54) expr -> . execfile
    (55) expr -> . break
    (56) expr -> . curfile
    (57) expr -> . exectext
    (58) expr -> . equal
    (59) expr -> . dequal
    (60) expr -> . element
    (61) expr -> . mlist
    (62) expr -> . yield
    (63) expr -> . repeat
    (64) expr -> . pass
    (65) expr -> . dict
    (66) expr -> . return
    (67) expr -> . modules
    (68) expr -> . exfiles
    (69) expr -> . input
    (70) expralg -> . term
    (71) expralg -> . abspath
    (72) expralg -> . invrelpath
    (73) expralg -> . relpath
    (74) expralg -> . relpathbase
    (75) expralg -> . func
    (76) expralg -> . block
    (77) expralg -> . list
    (39) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (8) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (84) python -> . PYTHON str
    (85) execfile -> . EXECFILE expr
    (38) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (44) equal -> . WORD EQUALS expr
    (45) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON dblock
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (13) dict -> . LBRACE declares RBRACE
    (14) dict -> . LBRACE RBRACE
    (78) return -> . RETURN expr
    (21) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (20) input -> . INPUT
    (79) term -> . str
    (80) term -> . float
    (81) term -> . int
    (82) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN
    (24) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (94) var -> . WORD
    (91) str -> . STRING
    (89) float -> . FLOAT
    (83) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    AMPERSAND       shift and go to state 36
    PLUSMINUS       shift and go to state 13
    PRINT           shift and go to state 46
    VARIABLES       shift and go to state 22
    PYTHON          shift and go to state 73
    EXECFILE        shift and go to state 28
    BREAK           shift and go to state 88
    CURFILE         shift and go to state 17
    EXECTEXT        shift and go to state 71
    WORD            shift and go to state 92
    MLIST           shift and go to state 9
    YIELD           shift and go to state 5
    REPEAT          shift and go to state 48
    PASS            shift and go to state 19
    LBRACE          shift and go to state 74
    RETURN          shift and go to state 45
    MODULES         shift and go to state 8
    EXFILES         shift and go to state 51
    INPUT           shift and go to state 58
    ABSPATH         shift and go to state 84
    INVRELPATH      shift and go to state 78
    RELPATH         shift and go to state 2
    RELPATHBASE     shift and go to state 43
    LBRACKET        shift and go to state 33
    STRING          shift and go to state 65
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 14

    yield                          shift and go to state 3
    alg1                           shift and go to state 16
    var                            shift and go to state 91
    element                        shift and go to state 7
    dequal                         shift and go to state 75
    parttree                       shift and go to state 10
    python                         shift and go to state 50
    block                          shift and go to state 77
    alg0                           shift and go to state 54
    repeat                         shift and go to state 56
    return                         shift and go to state 34
    break                          shift and go to state 47
    equal                          shift and go to state 30
    mlist                          shift and go to state 60
    execfile                       shift and go to state 61
    invrelpath                     shift and go to state 62
    modules                        shift and go to state 49
    variables                      shift and go to state 23
    int                            shift and go to state 66
    curfile                        shift and go to state 24
    alg3                           shift and go to state 67
    relpathbase                    shift and go to state 68
    alg2                           shift and go to state 25
    exectext                       shift and go to state 26
    abspath                        shift and go to state 69
    relpath                        shift and go to state 70
    input                          shift and go to state 82
    print                          shift and go to state 76
    exfiles                        shift and go to state 79
    varvar                         shift and go to state 31
    float                          shift and go to state 80
    func                           shift and go to state 37
    term                           shift and go to state 53
    str                            shift and go to state 38
    expr                           shift and go to state 116
    pass                           shift and go to state 20
    expralg                        shift and go to state 42
    list                           shift and go to state 87
    dict                           shift and go to state 83

state 47

    (55) expr -> break .

    COLON           reduce using rule 55 (expr -> break .)
    LBRACKET        reduce using rule 55 (expr -> break .)
    DIVIDER         reduce using rule 55 (expr -> break .)
    $end            reduce using rule 55 (expr -> break .)
    QUESTION        reduce using rule 55 (expr -> break .)
    RBRACE          reduce using rule 55 (expr -> break .)
    RBRACKET        reduce using rule 55 (expr -> break .)
    COMMA           reduce using rule 55 (expr -> break .)
    RPAREN          reduce using rule 55 (expr -> break .)


state 48

    (92) repeat -> REPEAT .

    LBRACKET        reduce using rule 92 (repeat -> REPEAT .)
    RBRACKET        reduce using rule 92 (repeat -> REPEAT .)
    COMMA           reduce using rule 92 (repeat -> REPEAT .)
    RPAREN          reduce using rule 92 (repeat -> REPEAT .)
    COLON           reduce using rule 92 (repeat -> REPEAT .)
    DIVIDER         reduce using rule 92 (repeat -> REPEAT .)
    $end            reduce using rule 92 (repeat -> REPEAT .)
    QUESTION        reduce using rule 92 (repeat -> REPEAT .)
    RBRACE          reduce using rule 92 (repeat -> REPEAT .)


state 49

    (67) expr -> modules .

    COLON           reduce using rule 67 (expr -> modules .)
    LBRACKET        reduce using rule 67 (expr -> modules .)
    DIVIDER         reduce using rule 67 (expr -> modules .)
    $end            reduce using rule 67 (expr -> modules .)
    QUESTION        reduce using rule 67 (expr -> modules .)
    RBRACE          reduce using rule 67 (expr -> modules .)
    RBRACKET        reduce using rule 67 (expr -> modules .)
    COMMA           reduce using rule 67 (expr -> modules .)
    RPAREN          reduce using rule 67 (expr -> modules .)


state 50

    (53) expr -> python .

    COLON           reduce using rule 53 (expr -> python .)
    LBRACKET        reduce using rule 53 (expr -> python .)
    DIVIDER         reduce using rule 53 (expr -> python .)
    $end            reduce using rule 53 (expr -> python .)
    QUESTION        reduce using rule 53 (expr -> python .)
    RBRACE          reduce using rule 53 (expr -> python .)
    RBRACKET        reduce using rule 53 (expr -> python .)
    COMMA           reduce using rule 53 (expr -> python .)
    RPAREN          reduce using rule 53 (expr -> python .)


state 51

    (101) exfiles -> EXFILES .

    COLON           reduce using rule 101 (exfiles -> EXFILES .)
    LBRACKET        reduce using rule 101 (exfiles -> EXFILES .)
    DIVIDER         reduce using rule 101 (exfiles -> EXFILES .)
    $end            reduce using rule 101 (exfiles -> EXFILES .)
    QUESTION        reduce using rule 101 (exfiles -> EXFILES .)
    RBRACE          reduce using rule 101 (exfiles -> EXFILES .)
    RBRACKET        reduce using rule 101 (exfiles -> EXFILES .)
    COMMA           reduce using rule 101 (exfiles -> EXFILES .)
    RPAREN          reduce using rule 101 (exfiles -> EXFILES .)


state 52

    (9) module -> MODULE . WORD COLON dblock

    WORD            shift and go to state 117


state 53

    (70) expralg -> term .

    COLON           reduce using rule 70 (expralg -> term .)
    LBRACKET        reduce using rule 70 (expralg -> term .)
    DIVIDER         reduce using rule 70 (expralg -> term .)
    $end            reduce using rule 70 (expralg -> term .)
    QUESTION        reduce using rule 70 (expralg -> term .)
    RBRACE          reduce using rule 70 (expralg -> term .)
    RBRACKET        reduce using rule 70 (expralg -> term .)
    COMMA           reduce using rule 70 (expralg -> term .)
    RPAREN          reduce using rule 70 (expralg -> term .)
    DPROD           reduce using rule 70 (expralg -> term .)
    DIVMUL          reduce using rule 70 (expralg -> term .)
    PLUSMINUS       reduce using rule 70 (expralg -> term .)


state 54

    (49) expr -> alg0 .
    (108) alg0 -> alg0 . PLUSMINUS alg1

    COLON           reduce using rule 49 (expr -> alg0 .)
    LBRACKET        reduce using rule 49 (expr -> alg0 .)
    DIVIDER         reduce using rule 49 (expr -> alg0 .)
    $end            reduce using rule 49 (expr -> alg0 .)
    QUESTION        reduce using rule 49 (expr -> alg0 .)
    RBRACE          reduce using rule 49 (expr -> alg0 .)
    RBRACKET        reduce using rule 49 (expr -> alg0 .)
    COMMA           reduce using rule 49 (expr -> alg0 .)
    RPAREN          reduce using rule 49 (expr -> alg0 .)
    PLUSMINUS       shift and go to state 118


state 55

    (27) metaexpr -> module .

    RBRACE          reduce using rule 27 (metaexpr -> module .)
    DIVIDER         reduce using rule 27 (metaexpr -> module .)
    $end            reduce using rule 27 (metaexpr -> module .)
    COLON           reduce using rule 27 (metaexpr -> module .)
    LBRACKET        reduce using rule 27 (metaexpr -> module .)
    QUESTION        reduce using rule 27 (metaexpr -> module .)
    RBRACKET        reduce using rule 27 (metaexpr -> module .)
    COMMA           reduce using rule 27 (metaexpr -> module .)
    RPAREN          reduce using rule 27 (metaexpr -> module .)


state 56

    (63) expr -> repeat .

    COLON           reduce using rule 63 (expr -> repeat .)
    LBRACKET        reduce using rule 63 (expr -> repeat .)
    DIVIDER         reduce using rule 63 (expr -> repeat .)
    $end            reduce using rule 63 (expr -> repeat .)
    QUESTION        reduce using rule 63 (expr -> repeat .)
    RBRACE          reduce using rule 63 (expr -> repeat .)
    RBRACKET        reduce using rule 63 (expr -> repeat .)
    COMMA           reduce using rule 63 (expr -> repeat .)
    RPAREN          reduce using rule 63 (expr -> repeat .)


state 57

    (22) append -> var . APPEND expr
    (97) varvar -> var .
    (82) term -> var .

  ! reduce/reduce conflict for COLON resolved using rule 82 (term -> var .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 82 (term -> var .)
  ! reduce/reduce conflict for DIVIDER resolved using rule 82 (term -> var .)
  ! reduce/reduce conflict for $end resolved using rule 82 (term -> var .)
  ! reduce/reduce conflict for RBRACE resolved using rule 82 (term -> var .)
  ! reduce/reduce conflict for QUESTION resolved using rule 82 (term -> var .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 82 (term -> var .)
  ! reduce/reduce conflict for COMMA resolved using rule 82 (term -> var .)
  ! reduce/reduce conflict for RPAREN resolved using rule 82 (term -> var .)
    APPEND          shift and go to state 119
    POINT           reduce using rule 97 (varvar -> var .)
    COLON           reduce using rule 82 (term -> var .)
    LBRACKET        reduce using rule 82 (term -> var .)
    DIVIDER         reduce using rule 82 (term -> var .)
    $end            reduce using rule 82 (term -> var .)
    RBRACE          reduce using rule 82 (term -> var .)
    DPROD           reduce using rule 82 (term -> var .)
    DIVMUL          reduce using rule 82 (term -> var .)
    PLUSMINUS       reduce using rule 82 (term -> var .)
    QUESTION        reduce using rule 82 (term -> var .)
    RBRACKET        reduce using rule 82 (term -> var .)
    COMMA           reduce using rule 82 (term -> var .)
    RPAREN          reduce using rule 82 (term -> var .)

  ! COLON           [ reduce using rule 97 (varvar -> var .) ]
  ! LBRACKET        [ reduce using rule 97 (varvar -> var .) ]
  ! DIVIDER         [ reduce using rule 97 (varvar -> var .) ]
  ! $end            [ reduce using rule 97 (varvar -> var .) ]
  ! RBRACE          [ reduce using rule 97 (varvar -> var .) ]
  ! QUESTION        [ reduce using rule 97 (varvar -> var .) ]
  ! RBRACKET        [ reduce using rule 97 (varvar -> var .) ]
  ! COMMA           [ reduce using rule 97 (varvar -> var .) ]
  ! RPAREN          [ reduce using rule 97 (varvar -> var .) ]


state 58

    (20) input -> INPUT .

    COLON           reduce using rule 20 (input -> INPUT .)
    LBRACKET        reduce using rule 20 (input -> INPUT .)
    DIVIDER         reduce using rule 20 (input -> INPUT .)
    $end            reduce using rule 20 (input -> INPUT .)
    QUESTION        reduce using rule 20 (input -> INPUT .)
    RBRACE          reduce using rule 20 (input -> INPUT .)
    RBRACKET        reduce using rule 20 (input -> INPUT .)
    COMMA           reduce using rule 20 (input -> INPUT .)
    RPAREN          reduce using rule 20 (input -> INPUT .)


state 59

    (88) downlevel -> DOWNLEVEL . expr
    (47) expr -> . expralg
    (48) expr -> . parttree
    (49) expr -> . alg0
    (50) expr -> . print
    (51) expr -> . varvar
    (52) expr -> . variables
    (53) expr -> . python
    (54) expr -> . execfile
    (55) expr -> . break
    (56) expr -> . curfile
    (57) expr -> . exectext
    (58) expr -> . equal
    (59) expr -> . dequal
    (60) expr -> . element
    (61) expr -> . mlist
    (62) expr -> . yield
    (63) expr -> . repeat
    (64) expr -> . pass
    (65) expr -> . dict
    (66) expr -> . return
    (67) expr -> . modules
    (68) expr -> . exfiles
    (69) expr -> . input
    (70) expralg -> . term
    (71) expralg -> . abspath
    (72) expralg -> . invrelpath
    (73) expralg -> . relpath
    (74) expralg -> . relpathbase
    (75) expralg -> . func
    (76) expralg -> . block
    (77) expralg -> . list
    (39) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (8) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (84) python -> . PYTHON str
    (85) execfile -> . EXECFILE expr
    (38) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (44) equal -> . WORD EQUALS expr
    (45) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON dblock
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (13) dict -> . LBRACE declares RBRACE
    (14) dict -> . LBRACE RBRACE
    (78) return -> . RETURN expr
    (21) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (20) input -> . INPUT
    (79) term -> . str
    (80) term -> . float
    (81) term -> . int
    (82) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN
    (24) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (94) var -> . WORD
    (91) str -> . STRING
    (89) float -> . FLOAT
    (83) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    AMPERSAND       shift and go to state 36
    PLUSMINUS       shift and go to state 13
    PRINT           shift and go to state 46
    VARIABLES       shift and go to state 22
    PYTHON          shift and go to state 73
    EXECFILE        shift and go to state 28
    BREAK           shift and go to state 88
    CURFILE         shift and go to state 17
    EXECTEXT        shift and go to state 71
    WORD            shift and go to state 92
    MLIST           shift and go to state 9
    YIELD           shift and go to state 5
    REPEAT          shift and go to state 48
    PASS            shift and go to state 19
    LBRACE          shift and go to state 74
    RETURN          shift and go to state 45
    MODULES         shift and go to state 8
    EXFILES         shift and go to state 51
    INPUT           shift and go to state 58
    ABSPATH         shift and go to state 84
    INVRELPATH      shift and go to state 78
    RELPATH         shift and go to state 2
    RELPATHBASE     shift and go to state 43
    LBRACKET        shift and go to state 33
    STRING          shift and go to state 65
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 14

    yield                          shift and go to state 3
    alg1                           shift and go to state 16
    var                            shift and go to state 91
    element                        shift and go to state 7
    dequal                         shift and go to state 75
    parttree                       shift and go to state 10
    python                         shift and go to state 50
    block                          shift and go to state 77
    alg0                           shift and go to state 54
    repeat                         shift and go to state 56
    return                         shift and go to state 34
    break                          shift and go to state 47
    equal                          shift and go to state 30
    mlist                          shift and go to state 60
    execfile                       shift and go to state 61
    invrelpath                     shift and go to state 62
    modules                        shift and go to state 49
    variables                      shift and go to state 23
    int                            shift and go to state 66
    curfile                        shift and go to state 24
    alg3                           shift and go to state 67
    relpathbase                    shift and go to state 68
    alg2                           shift and go to state 25
    exectext                       shift and go to state 26
    abspath                        shift and go to state 69
    relpath                        shift and go to state 70
    input                          shift and go to state 82
    print                          shift and go to state 76
    exfiles                        shift and go to state 79
    varvar                         shift and go to state 31
    float                          shift and go to state 80
    func                           shift and go to state 37
    term                           shift and go to state 53
    str                            shift and go to state 38
    expr                           shift and go to state 120
    pass                           shift and go to state 20
    expralg                        shift and go to state 42
    list                           shift and go to state 87
    dict                           shift and go to state 83

state 60

    (61) expr -> mlist .

    COLON           reduce using rule 61 (expr -> mlist .)
    LBRACKET        reduce using rule 61 (expr -> mlist .)
    DIVIDER         reduce using rule 61 (expr -> mlist .)
    $end            reduce using rule 61 (expr -> mlist .)
    QUESTION        reduce using rule 61 (expr -> mlist .)
    RBRACE          reduce using rule 61 (expr -> mlist .)
    RBRACKET        reduce using rule 61 (expr -> mlist .)
    COMMA           reduce using rule 61 (expr -> mlist .)
    RPAREN          reduce using rule 61 (expr -> mlist .)


state 61

    (54) expr -> execfile .

    COLON           reduce using rule 54 (expr -> execfile .)
    LBRACKET        reduce using rule 54 (expr -> execfile .)
    DIVIDER         reduce using rule 54 (expr -> execfile .)
    $end            reduce using rule 54 (expr -> execfile .)
    QUESTION        reduce using rule 54 (expr -> execfile .)
    RBRACE          reduce using rule 54 (expr -> execfile .)
    RBRACKET        reduce using rule 54 (expr -> execfile .)
    COMMA           reduce using rule 54 (expr -> execfile .)
    RPAREN          reduce using rule 54 (expr -> execfile .)


state 62

    (72) expralg -> invrelpath .

    COLON           reduce using rule 72 (expralg -> invrelpath .)
    LBRACKET        reduce using rule 72 (expralg -> invrelpath .)
    DIVIDER         reduce using rule 72 (expralg -> invrelpath .)
    $end            reduce using rule 72 (expralg -> invrelpath .)
    QUESTION        reduce using rule 72 (expralg -> invrelpath .)
    RBRACE          reduce using rule 72 (expralg -> invrelpath .)
    RBRACKET        reduce using rule 72 (expralg -> invrelpath .)
    COMMA           reduce using rule 72 (expralg -> invrelpath .)
    RPAREN          reduce using rule 72 (expralg -> invrelpath .)
    DPROD           reduce using rule 72 (expralg -> invrelpath .)
    DIVMUL          reduce using rule 72 (expralg -> invrelpath .)
    PLUSMINUS       reduce using rule 72 (expralg -> invrelpath .)


state 63

    (12) define -> WORD . DEFOP expr
    (44) equal -> WORD . EQUALS expr
    (94) var -> WORD .
    (23) func -> WORD . LPAREN args RPAREN
    (24) func -> WORD . LPAREN args RPAREN block

    DEFOP           shift and go to state 121
    EQUALS          shift and go to state 123
    APPEND          reduce using rule 94 (var -> WORD .)
    POINT           reduce using rule 94 (var -> WORD .)
    COLON           reduce using rule 94 (var -> WORD .)
    LBRACKET        reduce using rule 94 (var -> WORD .)
    DIVIDER         reduce using rule 94 (var -> WORD .)
    $end            reduce using rule 94 (var -> WORD .)
    DPROD           reduce using rule 94 (var -> WORD .)
    DIVMUL          reduce using rule 94 (var -> WORD .)
    PLUSMINUS       reduce using rule 94 (var -> WORD .)
    RBRACE          reduce using rule 94 (var -> WORD .)
    QUESTION        reduce using rule 94 (var -> WORD .)
    RBRACKET        reduce using rule 94 (var -> WORD .)
    COMMA           reduce using rule 94 (var -> WORD .)
    RPAREN          reduce using rule 94 (var -> WORD .)
    LPAREN          shift and go to state 122


state 64

    (26) metaexpr -> deffunc .

    RBRACE          reduce using rule 26 (metaexpr -> deffunc .)
    DIVIDER         reduce using rule 26 (metaexpr -> deffunc .)
    $end            reduce using rule 26 (metaexpr -> deffunc .)
    COLON           reduce using rule 26 (metaexpr -> deffunc .)
    LBRACKET        reduce using rule 26 (metaexpr -> deffunc .)
    QUESTION        reduce using rule 26 (metaexpr -> deffunc .)
    RBRACKET        reduce using rule 26 (metaexpr -> deffunc .)
    COMMA           reduce using rule 26 (metaexpr -> deffunc .)
    RPAREN          reduce using rule 26 (metaexpr -> deffunc .)


state 65

    (91) str -> STRING .

    COLON           reduce using rule 91 (str -> STRING .)
    LBRACKET        reduce using rule 91 (str -> STRING .)
    DIVIDER         reduce using rule 91 (str -> STRING .)
    $end            reduce using rule 91 (str -> STRING .)
    QUESTION        reduce using rule 91 (str -> STRING .)
    RBRACE          reduce using rule 91 (str -> STRING .)
    RBRACKET        reduce using rule 91 (str -> STRING .)
    COMMA           reduce using rule 91 (str -> STRING .)
    RPAREN          reduce using rule 91 (str -> STRING .)
    DPROD           reduce using rule 91 (str -> STRING .)
    DIVMUL          reduce using rule 91 (str -> STRING .)
    PLUSMINUS       reduce using rule 91 (str -> STRING .)


state 66

    (81) term -> int .

    COLON           reduce using rule 81 (term -> int .)
    LBRACKET        reduce using rule 81 (term -> int .)
    DIVIDER         reduce using rule 81 (term -> int .)
    $end            reduce using rule 81 (term -> int .)
    QUESTION        reduce using rule 81 (term -> int .)
    RBRACE          reduce using rule 81 (term -> int .)
    RBRACKET        reduce using rule 81 (term -> int .)
    COMMA           reduce using rule 81 (term -> int .)
    RPAREN          reduce using rule 81 (term -> int .)
    DPROD           reduce using rule 81 (term -> int .)
    DIVMUL          reduce using rule 81 (term -> int .)
    PLUSMINUS       reduce using rule 81 (term -> int .)


state 67

    (112) alg2 -> alg3 .

    DPROD           reduce using rule 112 (alg2 -> alg3 .)
    DIVMUL          reduce using rule 112 (alg2 -> alg3 .)
    PLUSMINUS       reduce using rule 112 (alg2 -> alg3 .)
    LBRACKET        reduce using rule 112 (alg2 -> alg3 .)
    COMMA           reduce using rule 112 (alg2 -> alg3 .)
    RPAREN          reduce using rule 112 (alg2 -> alg3 .)
    COLON           reduce using rule 112 (alg2 -> alg3 .)
    DIVIDER         reduce using rule 112 (alg2 -> alg3 .)
    $end            reduce using rule 112 (alg2 -> alg3 .)
    QUESTION        reduce using rule 112 (alg2 -> alg3 .)
    RBRACE          reduce using rule 112 (alg2 -> alg3 .)
    RBRACKET        reduce using rule 112 (alg2 -> alg3 .)


state 68

    (74) expralg -> relpathbase .

    COLON           reduce using rule 74 (expralg -> relpathbase .)
    LBRACKET        reduce using rule 74 (expralg -> relpathbase .)
    DIVIDER         reduce using rule 74 (expralg -> relpathbase .)
    $end            reduce using rule 74 (expralg -> relpathbase .)
    QUESTION        reduce using rule 74 (expralg -> relpathbase .)
    RBRACE          reduce using rule 74 (expralg -> relpathbase .)
    RBRACKET        reduce using rule 74 (expralg -> relpathbase .)
    COMMA           reduce using rule 74 (expralg -> relpathbase .)
    RPAREN          reduce using rule 74 (expralg -> relpathbase .)
    DPROD           reduce using rule 74 (expralg -> relpathbase .)
    DIVMUL          reduce using rule 74 (expralg -> relpathbase .)
    PLUSMINUS       reduce using rule 74 (expralg -> relpathbase .)


state 69

    (71) expralg -> abspath .

    COLON           reduce using rule 71 (expralg -> abspath .)
    LBRACKET        reduce using rule 71 (expralg -> abspath .)
    DIVIDER         reduce using rule 71 (expralg -> abspath .)
    $end            reduce using rule 71 (expralg -> abspath .)
    QUESTION        reduce using rule 71 (expralg -> abspath .)
    RBRACE          reduce using rule 71 (expralg -> abspath .)
    RBRACKET        reduce using rule 71 (expralg -> abspath .)
    COMMA           reduce using rule 71 (expralg -> abspath .)
    RPAREN          reduce using rule 71 (expralg -> abspath .)
    DPROD           reduce using rule 71 (expralg -> abspath .)
    DIVMUL          reduce using rule 71 (expralg -> abspath .)
    PLUSMINUS       reduce using rule 71 (expralg -> abspath .)


state 70

    (73) expralg -> relpath .

    COLON           reduce using rule 73 (expralg -> relpath .)
    LBRACKET        reduce using rule 73 (expralg -> relpath .)
    DIVIDER         reduce using rule 73 (expralg -> relpath .)
    $end            reduce using rule 73 (expralg -> relpath .)
    QUESTION        reduce using rule 73 (expralg -> relpath .)
    RBRACE          reduce using rule 73 (expralg -> relpath .)
    RBRACKET        reduce using rule 73 (expralg -> relpath .)
    COMMA           reduce using rule 73 (expralg -> relpath .)
    RPAREN          reduce using rule 73 (expralg -> relpath .)
    DPROD           reduce using rule 73 (expralg -> relpath .)
    DIVMUL          reduce using rule 73 (expralg -> relpath .)
    PLUSMINUS       reduce using rule 73 (expralg -> relpath .)


state 71

    (87) exectext -> EXECTEXT . expr
    (47) expr -> . expralg
    (48) expr -> . parttree
    (49) expr -> . alg0
    (50) expr -> . print
    (51) expr -> . varvar
    (52) expr -> . variables
    (53) expr -> . python
    (54) expr -> . execfile
    (55) expr -> . break
    (56) expr -> . curfile
    (57) expr -> . exectext
    (58) expr -> . equal
    (59) expr -> . dequal
    (60) expr -> . element
    (61) expr -> . mlist
    (62) expr -> . yield
    (63) expr -> . repeat
    (64) expr -> . pass
    (65) expr -> . dict
    (66) expr -> . return
    (67) expr -> . modules
    (68) expr -> . exfiles
    (69) expr -> . input
    (70) expralg -> . term
    (71) expralg -> . abspath
    (72) expralg -> . invrelpath
    (73) expralg -> . relpath
    (74) expralg -> . relpathbase
    (75) expralg -> . func
    (76) expralg -> . block
    (77) expralg -> . list
    (39) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (8) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (84) python -> . PYTHON str
    (85) execfile -> . EXECFILE expr
    (38) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (44) equal -> . WORD EQUALS expr
    (45) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON dblock
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (13) dict -> . LBRACE declares RBRACE
    (14) dict -> . LBRACE RBRACE
    (78) return -> . RETURN expr
    (21) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (20) input -> . INPUT
    (79) term -> . str
    (80) term -> . float
    (81) term -> . int
    (82) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN
    (24) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (94) var -> . WORD
    (91) str -> . STRING
    (89) float -> . FLOAT
    (83) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    AMPERSAND       shift and go to state 36
    PLUSMINUS       shift and go to state 13
    PRINT           shift and go to state 46
    VARIABLES       shift and go to state 22
    PYTHON          shift and go to state 73
    EXECFILE        shift and go to state 28
    BREAK           shift and go to state 88
    CURFILE         shift and go to state 17
    EXECTEXT        shift and go to state 71
    WORD            shift and go to state 92
    MLIST           shift and go to state 9
    YIELD           shift and go to state 5
    REPEAT          shift and go to state 48
    PASS            shift and go to state 19
    LBRACE          shift and go to state 74
    RETURN          shift and go to state 45
    MODULES         shift and go to state 8
    EXFILES         shift and go to state 51
    INPUT           shift and go to state 58
    ABSPATH         shift and go to state 84
    INVRELPATH      shift and go to state 78
    RELPATH         shift and go to state 2
    RELPATHBASE     shift and go to state 43
    LBRACKET        shift and go to state 33
    STRING          shift and go to state 65
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 14

    yield                          shift and go to state 3
    alg1                           shift and go to state 16
    var                            shift and go to state 91
    element                        shift and go to state 7
    dequal                         shift and go to state 75
    parttree                       shift and go to state 10
    python                         shift and go to state 50
    block                          shift and go to state 77
    alg0                           shift and go to state 54
    repeat                         shift and go to state 56
    return                         shift and go to state 34
    break                          shift and go to state 47
    equal                          shift and go to state 30
    mlist                          shift and go to state 60
    execfile                       shift and go to state 61
    invrelpath                     shift and go to state 62
    modules                        shift and go to state 49
    variables                      shift and go to state 23
    int                            shift and go to state 66
    curfile                        shift and go to state 24
    alg3                           shift and go to state 67
    relpathbase                    shift and go to state 68
    alg2                           shift and go to state 25
    exectext                       shift and go to state 26
    abspath                        shift and go to state 69
    relpath                        shift and go to state 70
    input                          shift and go to state 82
    print                          shift and go to state 76
    exfiles                        shift and go to state 79
    varvar                         shift and go to state 31
    float                          shift and go to state 80
    func                           shift and go to state 37
    term                           shift and go to state 53
    str                            shift and go to state 38
    expr                           shift and go to state 124
    pass                           shift and go to state 20
    expralg                        shift and go to state 42
    list                           shift and go to state 87
    dict                           shift and go to state 83

state 72

    (11) define -> DEFINE . WORD expr

    WORD            shift and go to state 125


state 73

    (84) python -> PYTHON . str
    (91) str -> . STRING

    STRING          shift and go to state 65

    str                            shift and go to state 126

state 74

    (13) dict -> LBRACE . declares RBRACE
    (14) dict -> LBRACE . RBRACE
    (3) block -> LBRACE . inblock RBRACE
    (15) declares -> . declare
    (16) declares -> . declares COMMA declare
    (4) inblock -> . metaexpr
    (5) inblock -> . inblock divider metaexpr
    (6) inblock -> . divider inblock
    (7) inblock -> . inblock divider
    (17) declare -> . expr COLON expr
    (25) metaexpr -> . expr
    (26) metaexpr -> . deffunc
    (27) metaexpr -> . module
    (28) metaexpr -> . declare
    (29) metaexpr -> . append
    (30) metaexpr -> . define
    (31) metaexpr -> . execscan
    (32) metaexpr -> . application
    (33) metaexpr -> . compile
    (34) metaexpr -> . downlevel
    (35) metaexpr -> . if
    (19) divider -> . DIVIDER
    (47) expr -> . expralg
    (48) expr -> . parttree
    (49) expr -> . alg0
    (50) expr -> . print
    (51) expr -> . varvar
    (52) expr -> . variables
    (53) expr -> . python
    (54) expr -> . execfile
    (55) expr -> . break
    (56) expr -> . curfile
    (57) expr -> . exectext
    (58) expr -> . equal
    (59) expr -> . dequal
    (60) expr -> . element
    (61) expr -> . mlist
    (62) expr -> . yield
    (63) expr -> . repeat
    (64) expr -> . pass
    (65) expr -> . dict
    (66) expr -> . return
    (67) expr -> . modules
    (68) expr -> . exfiles
    (69) expr -> . input
    (10) deffunc -> . DEFFUNC func COLON dblock
    (9) module -> . MODULE WORD COLON dblock
    (22) append -> . var APPEND expr
    (11) define -> . DEFINE WORD expr
    (12) define -> . WORD DEFOP expr
    (86) execscan -> . EXECSCAN expr
    (46) application -> . APPLICATION var
    (103) compile -> . COMPILE
    (88) downlevel -> . DOWNLEVEL expr
    (18) if -> . IF expr QUESTION expr COLON expr
    (70) expralg -> . term
    (71) expralg -> . abspath
    (72) expralg -> . invrelpath
    (73) expralg -> . relpath
    (74) expralg -> . relpathbase
    (75) expralg -> . func
    (76) expralg -> . block
    (77) expralg -> . list
    (39) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (8) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (84) python -> . PYTHON str
    (85) execfile -> . EXECFILE expr
    (38) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (44) equal -> . WORD EQUALS expr
    (45) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON dblock
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (13) dict -> . LBRACE declares RBRACE
    (14) dict -> . LBRACE RBRACE
    (78) return -> . RETURN expr
    (21) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (20) input -> . INPUT
    (94) var -> . WORD
    (79) term -> . str
    (80) term -> . float
    (81) term -> . int
    (82) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN
    (24) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (91) str -> . STRING
    (89) float -> . FLOAT
    (83) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    RBRACE          shift and go to state 130
    DIVIDER         shift and go to state 35
    DEFFUNC         shift and go to state 21
    MODULE          shift and go to state 52
    DEFINE          shift and go to state 72
    WORD            shift and go to state 63
    EXECSCAN        shift and go to state 11
    APPLICATION     shift and go to state 1
    COMPILE         shift and go to state 86
    DOWNLEVEL       shift and go to state 59
    IF              shift and go to state 4
    AMPERSAND       shift and go to state 36
    PLUSMINUS       shift and go to state 13
    PRINT           shift and go to state 46
    VARIABLES       shift and go to state 22
    PYTHON          shift and go to state 73
    EXECFILE        shift and go to state 28
    BREAK           shift and go to state 88
    CURFILE         shift and go to state 17
    EXECTEXT        shift and go to state 71
    MLIST           shift and go to state 9
    YIELD           shift and go to state 5
    REPEAT          shift and go to state 48
    PASS            shift and go to state 19
    LBRACE          shift and go to state 74
    RETURN          shift and go to state 45
    MODULES         shift and go to state 8
    EXFILES         shift and go to state 51
    INPUT           shift and go to state 58
    ABSPATH         shift and go to state 84
    INVRELPATH      shift and go to state 78
    RELPATH         shift and go to state 2
    RELPATHBASE     shift and go to state 43
    LBRACKET        shift and go to state 33
    STRING          shift and go to state 65
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 14

    yield                          shift and go to state 3
    application                    shift and go to state 44
    declares                       shift and go to state 127
    declare                        shift and go to state 128
    element                        shift and go to state 7
    execscan                       shift and go to state 40
    parttree                       shift and go to state 10
    python                         shift and go to state 50
    term                           shift and go to state 53
    abspath                        shift and go to state 69
    append                         shift and go to state 12
    block                          shift and go to state 77
    alg0                           shift and go to state 54
    module                         shift and go to state 55
    int                            shift and go to state 66
    if                             shift and go to state 15
    repeat                         shift and go to state 56
    alg1                           shift and go to state 16
    var                            shift and go to state 57
    divider                        shift and go to state 18
    break                          shift and go to state 47
    pass                           shift and go to state 20
    mlist                          shift and go to state 60
    execfile                       shift and go to state 61
    invrelpath                     shift and go to state 62
    modules                        shift and go to state 49
    deffunc                        shift and go to state 64
    variables                      shift and go to state 23
    relpath                        shift and go to state 70
    curfile                        shift and go to state 24
    alg3                           shift and go to state 67
    relpathbase                    shift and go to state 68
    alg2                           shift and go to state 25
    exectext                       shift and go to state 26
    metaexpr                       shift and go to state 27
    varvar                         shift and go to state 31
    downlevel                      shift and go to state 29
    equal                          shift and go to state 30
    input                          shift and go to state 82
    print                          shift and go to state 76
    exfiles                        shift and go to state 79
    return                         shift and go to state 34
    float                          shift and go to state 80
    func                           shift and go to state 37
    str                            shift and go to state 38
    expr                           shift and go to state 131
    expralg                        shift and go to state 42
    inblock                        shift and go to state 129
    dequal                         shift and go to state 75
    define                         shift and go to state 85
    compile                        shift and go to state 41
    list                           shift and go to state 87
    dict                           shift and go to state 83

state 75

    (59) expr -> dequal .

    COLON           reduce using rule 59 (expr -> dequal .)
    LBRACKET        reduce using rule 59 (expr -> dequal .)
    DIVIDER         reduce using rule 59 (expr -> dequal .)
    $end            reduce using rule 59 (expr -> dequal .)
    QUESTION        reduce using rule 59 (expr -> dequal .)
    RBRACE          reduce using rule 59 (expr -> dequal .)
    RBRACKET        reduce using rule 59 (expr -> dequal .)
    COMMA           reduce using rule 59 (expr -> dequal .)
    RPAREN          reduce using rule 59 (expr -> dequal .)


state 76

    (50) expr -> print .

    COLON           reduce using rule 50 (expr -> print .)
    LBRACKET        reduce using rule 50 (expr -> print .)
    DIVIDER         reduce using rule 50 (expr -> print .)
    $end            reduce using rule 50 (expr -> print .)
    QUESTION        reduce using rule 50 (expr -> print .)
    RBRACE          reduce using rule 50 (expr -> print .)
    RBRACKET        reduce using rule 50 (expr -> print .)
    COMMA           reduce using rule 50 (expr -> print .)
    RPAREN          reduce using rule 50 (expr -> print .)


state 77

    (76) expralg -> block .

    COLON           reduce using rule 76 (expralg -> block .)
    LBRACKET        reduce using rule 76 (expralg -> block .)
    DIVIDER         reduce using rule 76 (expralg -> block .)
    $end            reduce using rule 76 (expralg -> block .)
    QUESTION        reduce using rule 76 (expralg -> block .)
    RBRACE          reduce using rule 76 (expralg -> block .)
    RBRACKET        reduce using rule 76 (expralg -> block .)
    COMMA           reduce using rule 76 (expralg -> block .)
    RPAREN          reduce using rule 76 (expralg -> block .)
    DPROD           reduce using rule 76 (expralg -> block .)
    DIVMUL          reduce using rule 76 (expralg -> block .)
    PLUSMINUS       reduce using rule 76 (expralg -> block .)


state 78

    (105) invrelpath -> INVRELPATH .

    COLON           reduce using rule 105 (invrelpath -> INVRELPATH .)
    LBRACKET        reduce using rule 105 (invrelpath -> INVRELPATH .)
    DIVIDER         reduce using rule 105 (invrelpath -> INVRELPATH .)
    $end            reduce using rule 105 (invrelpath -> INVRELPATH .)
    QUESTION        reduce using rule 105 (invrelpath -> INVRELPATH .)
    RBRACE          reduce using rule 105 (invrelpath -> INVRELPATH .)
    RBRACKET        reduce using rule 105 (invrelpath -> INVRELPATH .)
    COMMA           reduce using rule 105 (invrelpath -> INVRELPATH .)
    RPAREN          reduce using rule 105 (invrelpath -> INVRELPATH .)
    DPROD           reduce using rule 105 (invrelpath -> INVRELPATH .)
    DIVMUL          reduce using rule 105 (invrelpath -> INVRELPATH .)
    PLUSMINUS       reduce using rule 105 (invrelpath -> INVRELPATH .)


state 79

    (68) expr -> exfiles .

    COLON           reduce using rule 68 (expr -> exfiles .)
    LBRACKET        reduce using rule 68 (expr -> exfiles .)
    DIVIDER         reduce using rule 68 (expr -> exfiles .)
    $end            reduce using rule 68 (expr -> exfiles .)
    QUESTION        reduce using rule 68 (expr -> exfiles .)
    RBRACE          reduce using rule 68 (expr -> exfiles .)
    RBRACKET        reduce using rule 68 (expr -> exfiles .)
    COMMA           reduce using rule 68 (expr -> exfiles .)
    RPAREN          reduce using rule 68 (expr -> exfiles .)


state 80

    (80) term -> float .

    COLON           reduce using rule 80 (term -> float .)
    LBRACKET        reduce using rule 80 (term -> float .)
    DIVIDER         reduce using rule 80 (term -> float .)
    $end            reduce using rule 80 (term -> float .)
    QUESTION        reduce using rule 80 (term -> float .)
    RBRACE          reduce using rule 80 (term -> float .)
    RBRACKET        reduce using rule 80 (term -> float .)
    COMMA           reduce using rule 80 (term -> float .)
    RPAREN          reduce using rule 80 (term -> float .)
    DPROD           reduce using rule 80 (term -> float .)
    DIVMUL          reduce using rule 80 (term -> float .)
    PLUSMINUS       reduce using rule 80 (term -> float .)


state 81

    (25) metaexpr -> expr .
    (17) declare -> expr . COLON expr
    (93) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for COLON resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
    RBRACE          reduce using rule 25 (metaexpr -> expr .)
    DIVIDER         reduce using rule 25 (metaexpr -> expr .)
    $end            reduce using rule 25 (metaexpr -> expr .)
    QUESTION        reduce using rule 25 (metaexpr -> expr .)
    RBRACKET        reduce using rule 25 (metaexpr -> expr .)
    COMMA           reduce using rule 25 (metaexpr -> expr .)
    RPAREN          reduce using rule 25 (metaexpr -> expr .)
    COLON           shift and go to state 132
    LBRACKET        shift and go to state 133

  ! COLON           [ reduce using rule 25 (metaexpr -> expr .) ]
  ! LBRACKET        [ reduce using rule 25 (metaexpr -> expr .) ]


state 82

    (69) expr -> input .

    COLON           reduce using rule 69 (expr -> input .)
    LBRACKET        reduce using rule 69 (expr -> input .)
    DIVIDER         reduce using rule 69 (expr -> input .)
    $end            reduce using rule 69 (expr -> input .)
    QUESTION        reduce using rule 69 (expr -> input .)
    RBRACE          reduce using rule 69 (expr -> input .)
    RBRACKET        reduce using rule 69 (expr -> input .)
    COMMA           reduce using rule 69 (expr -> input .)
    RPAREN          reduce using rule 69 (expr -> input .)


state 83

    (65) expr -> dict .

    COLON           reduce using rule 65 (expr -> dict .)
    LBRACKET        reduce using rule 65 (expr -> dict .)
    DIVIDER         reduce using rule 65 (expr -> dict .)
    $end            reduce using rule 65 (expr -> dict .)
    QUESTION        reduce using rule 65 (expr -> dict .)
    RBRACE          reduce using rule 65 (expr -> dict .)
    RBRACKET        reduce using rule 65 (expr -> dict .)
    COMMA           reduce using rule 65 (expr -> dict .)
    RPAREN          reduce using rule 65 (expr -> dict .)


state 84

    (106) abspath -> ABSPATH .

    COLON           reduce using rule 106 (abspath -> ABSPATH .)
    LBRACKET        reduce using rule 106 (abspath -> ABSPATH .)
    DIVIDER         reduce using rule 106 (abspath -> ABSPATH .)
    $end            reduce using rule 106 (abspath -> ABSPATH .)
    QUESTION        reduce using rule 106 (abspath -> ABSPATH .)
    RBRACE          reduce using rule 106 (abspath -> ABSPATH .)
    RBRACKET        reduce using rule 106 (abspath -> ABSPATH .)
    COMMA           reduce using rule 106 (abspath -> ABSPATH .)
    RPAREN          reduce using rule 106 (abspath -> ABSPATH .)
    DPROD           reduce using rule 106 (abspath -> ABSPATH .)
    DIVMUL          reduce using rule 106 (abspath -> ABSPATH .)
    PLUSMINUS       reduce using rule 106 (abspath -> ABSPATH .)


state 85

    (30) metaexpr -> define .

    RBRACE          reduce using rule 30 (metaexpr -> define .)
    DIVIDER         reduce using rule 30 (metaexpr -> define .)
    $end            reduce using rule 30 (metaexpr -> define .)
    COLON           reduce using rule 30 (metaexpr -> define .)
    LBRACKET        reduce using rule 30 (metaexpr -> define .)
    QUESTION        reduce using rule 30 (metaexpr -> define .)
    RBRACKET        reduce using rule 30 (metaexpr -> define .)
    COMMA           reduce using rule 30 (metaexpr -> define .)
    RPAREN          reduce using rule 30 (metaexpr -> define .)


state 86

    (103) compile -> COMPILE .

    DIVIDER         reduce using rule 103 (compile -> COMPILE .)
    $end            reduce using rule 103 (compile -> COMPILE .)
    RBRACE          reduce using rule 103 (compile -> COMPILE .)
    COLON           reduce using rule 103 (compile -> COMPILE .)
    LBRACKET        reduce using rule 103 (compile -> COMPILE .)
    QUESTION        reduce using rule 103 (compile -> COMPILE .)
    RBRACKET        reduce using rule 103 (compile -> COMPILE .)
    COMMA           reduce using rule 103 (compile -> COMPILE .)
    RPAREN          reduce using rule 103 (compile -> COMPILE .)


state 87

    (77) expralg -> list .

    COLON           reduce using rule 77 (expralg -> list .)
    LBRACKET        reduce using rule 77 (expralg -> list .)
    DIVIDER         reduce using rule 77 (expralg -> list .)
    $end            reduce using rule 77 (expralg -> list .)
    QUESTION        reduce using rule 77 (expralg -> list .)
    RBRACE          reduce using rule 77 (expralg -> list .)
    RBRACKET        reduce using rule 77 (expralg -> list .)
    COMMA           reduce using rule 77 (expralg -> list .)
    RPAREN          reduce using rule 77 (expralg -> list .)
    DPROD           reduce using rule 77 (expralg -> list .)
    DIVMUL          reduce using rule 77 (expralg -> list .)
    PLUSMINUS       reduce using rule 77 (expralg -> list .)


state 88

    (38) break -> BREAK .

    LBRACKET        reduce using rule 38 (break -> BREAK .)
    RBRACKET        reduce using rule 38 (break -> BREAK .)
    COMMA           reduce using rule 38 (break -> BREAK .)
    RPAREN          reduce using rule 38 (break -> BREAK .)
    COLON           reduce using rule 38 (break -> BREAK .)
    DIVIDER         reduce using rule 38 (break -> BREAK .)
    $end            reduce using rule 38 (break -> BREAK .)
    QUESTION        reduce using rule 38 (break -> BREAK .)
    RBRACE          reduce using rule 38 (break -> BREAK .)


state 89

    (94) var -> WORD .

    POINT           reduce using rule 94 (var -> WORD .)
    COLON           reduce using rule 94 (var -> WORD .)
    LBRACKET        reduce using rule 94 (var -> WORD .)
    DIVIDER         reduce using rule 94 (var -> WORD .)
    $end            reduce using rule 94 (var -> WORD .)
    QUESTION        reduce using rule 94 (var -> WORD .)
    RBRACE          reduce using rule 94 (var -> WORD .)
    RBRACKET        reduce using rule 94 (var -> WORD .)
    COMMA           reduce using rule 94 (var -> WORD .)
    RPAREN          reduce using rule 94 (var -> WORD .)


state 90

    (46) application -> APPLICATION var .

    DIVIDER         reduce using rule 46 (application -> APPLICATION var .)
    $end            reduce using rule 46 (application -> APPLICATION var .)
    RBRACE          reduce using rule 46 (application -> APPLICATION var .)
    COLON           reduce using rule 46 (application -> APPLICATION var .)
    LBRACKET        reduce using rule 46 (application -> APPLICATION var .)
    QUESTION        reduce using rule 46 (application -> APPLICATION var .)
    RBRACKET        reduce using rule 46 (application -> APPLICATION var .)
    COMMA           reduce using rule 46 (application -> APPLICATION var .)
    RPAREN          reduce using rule 46 (application -> APPLICATION var .)


state 91

    (97) varvar -> var .
    (82) term -> var .

  ! reduce/reduce conflict for COLON resolved using rule 82 (term -> var .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 82 (term -> var .)
  ! reduce/reduce conflict for DIVIDER resolved using rule 82 (term -> var .)
  ! reduce/reduce conflict for $end resolved using rule 82 (term -> var .)
  ! reduce/reduce conflict for QUESTION resolved using rule 82 (term -> var .)
  ! reduce/reduce conflict for RBRACE resolved using rule 82 (term -> var .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 82 (term -> var .)
  ! reduce/reduce conflict for COMMA resolved using rule 82 (term -> var .)
  ! reduce/reduce conflict for RPAREN resolved using rule 82 (term -> var .)
    POINT           reduce using rule 97 (varvar -> var .)
    COLON           reduce using rule 82 (term -> var .)
    LBRACKET        reduce using rule 82 (term -> var .)
    DIVIDER         reduce using rule 82 (term -> var .)
    $end            reduce using rule 82 (term -> var .)
    QUESTION        reduce using rule 82 (term -> var .)
    RBRACE          reduce using rule 82 (term -> var .)
    RBRACKET        reduce using rule 82 (term -> var .)
    COMMA           reduce using rule 82 (term -> var .)
    RPAREN          reduce using rule 82 (term -> var .)
    DPROD           reduce using rule 82 (term -> var .)
    DIVMUL          reduce using rule 82 (term -> var .)
    PLUSMINUS       reduce using rule 82 (term -> var .)

  ! COLON           [ reduce using rule 97 (varvar -> var .) ]
  ! LBRACKET        [ reduce using rule 97 (varvar -> var .) ]
  ! DIVIDER         [ reduce using rule 97 (varvar -> var .) ]
  ! $end            [ reduce using rule 97 (varvar -> var .) ]
  ! QUESTION        [ reduce using rule 97 (varvar -> var .) ]
  ! RBRACE          [ reduce using rule 97 (varvar -> var .) ]
  ! RBRACKET        [ reduce using rule 97 (varvar -> var .) ]
  ! COMMA           [ reduce using rule 97 (varvar -> var .) ]
  ! RPAREN          [ reduce using rule 97 (varvar -> var .) ]


state 92

    (44) equal -> WORD . EQUALS expr
    (23) func -> WORD . LPAREN args RPAREN
    (24) func -> WORD . LPAREN args RPAREN block
    (94) var -> WORD .

    EQUALS          shift and go to state 123
    LPAREN          shift and go to state 122
    POINT           reduce using rule 94 (var -> WORD .)
    COLON           reduce using rule 94 (var -> WORD .)
    LBRACKET        reduce using rule 94 (var -> WORD .)
    DPROD           reduce using rule 94 (var -> WORD .)
    DIVMUL          reduce using rule 94 (var -> WORD .)
    PLUSMINUS       reduce using rule 94 (var -> WORD .)
    DIVIDER         reduce using rule 94 (var -> WORD .)
    $end            reduce using rule 94 (var -> WORD .)
    QUESTION        reduce using rule 94 (var -> WORD .)
    RBRACE          reduce using rule 94 (var -> WORD .)
    RBRACKET        reduce using rule 94 (var -> WORD .)
    COMMA           reduce using rule 94 (var -> WORD .)
    RPAREN          reduce using rule 94 (var -> WORD .)


state 93

    (18) if -> IF expr . QUESTION expr COLON expr
    (93) element -> expr . LBRACKET expr RBRACKET

    QUESTION        shift and go to state 134
    LBRACKET        shift and go to state 133


state 94

    (45) dequal -> element EQUALS . expr
    (47) expr -> . expralg
    (48) expr -> . parttree
    (49) expr -> . alg0
    (50) expr -> . print
    (51) expr -> . varvar
    (52) expr -> . variables
    (53) expr -> . python
    (54) expr -> . execfile
    (55) expr -> . break
    (56) expr -> . curfile
    (57) expr -> . exectext
    (58) expr -> . equal
    (59) expr -> . dequal
    (60) expr -> . element
    (61) expr -> . mlist
    (62) expr -> . yield
    (63) expr -> . repeat
    (64) expr -> . pass
    (65) expr -> . dict
    (66) expr -> . return
    (67) expr -> . modules
    (68) expr -> . exfiles
    (69) expr -> . input
    (70) expralg -> . term
    (71) expralg -> . abspath
    (72) expralg -> . invrelpath
    (73) expralg -> . relpath
    (74) expralg -> . relpathbase
    (75) expralg -> . func
    (76) expralg -> . block
    (77) expralg -> . list
    (39) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (8) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (84) python -> . PYTHON str
    (85) execfile -> . EXECFILE expr
    (38) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (44) equal -> . WORD EQUALS expr
    (45) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON dblock
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (13) dict -> . LBRACE declares RBRACE
    (14) dict -> . LBRACE RBRACE
    (78) return -> . RETURN expr
    (21) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (20) input -> . INPUT
    (79) term -> . str
    (80) term -> . float
    (81) term -> . int
    (82) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN
    (24) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (94) var -> . WORD
    (91) str -> . STRING
    (89) float -> . FLOAT
    (83) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    AMPERSAND       shift and go to state 36
    PLUSMINUS       shift and go to state 13
    PRINT           shift and go to state 46
    VARIABLES       shift and go to state 22
    PYTHON          shift and go to state 73
    EXECFILE        shift and go to state 28
    BREAK           shift and go to state 88
    CURFILE         shift and go to state 17
    EXECTEXT        shift and go to state 71
    WORD            shift and go to state 92
    MLIST           shift and go to state 9
    YIELD           shift and go to state 5
    REPEAT          shift and go to state 48
    PASS            shift and go to state 19
    LBRACE          shift and go to state 74
    RETURN          shift and go to state 45
    MODULES         shift and go to state 8
    EXFILES         shift and go to state 51
    INPUT           shift and go to state 58
    ABSPATH         shift and go to state 84
    INVRELPATH      shift and go to state 78
    RELPATH         shift and go to state 2
    RELPATHBASE     shift and go to state 43
    LBRACKET        shift and go to state 33
    STRING          shift and go to state 65
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 14

    yield                          shift and go to state 3
    alg1                           shift and go to state 16
    return                         shift and go to state 34
    element                        shift and go to state 7
    dequal                         shift and go to state 75
    parttree                       shift and go to state 10
    python                         shift and go to state 50
    abspath                        shift and go to state 69
    block                          shift and go to state 77
    alg0                           shift and go to state 54
    repeat                         shift and go to state 56
    var                            shift and go to state 91
    break                          shift and go to state 47
    equal                          shift and go to state 30
    mlist                          shift and go to state 60
    execfile                       shift and go to state 61
    invrelpath                     shift and go to state 62
    modules                        shift and go to state 49
    variables                      shift and go to state 23
    int                            shift and go to state 66
    curfile                        shift and go to state 24
    alg3                           shift and go to state 67
    relpathbase                    shift and go to state 68
    alg2                           shift and go to state 25
    exectext                       shift and go to state 26
    relpath                        shift and go to state 70
    input                          shift and go to state 82
    print                          shift and go to state 76
    exfiles                        shift and go to state 79
    varvar                         shift and go to state 31
    float                          shift and go to state 80
    func                           shift and go to state 37
    term                           shift and go to state 53
    str                            shift and go to state 38
    expr                           shift and go to state 135
    pass                           shift and go to state 20
    dict                           shift and go to state 83
    list                           shift and go to state 87
    expralg                        shift and go to state 42

state 95

    (96) mlist -> MLIST COLON . dblock
    (1) dblock -> . block
    (2) dblock -> . divider block
    (3) block -> . LBRACE inblock RBRACE
    (19) divider -> . DIVIDER

    LBRACE          shift and go to state 99
    DIVIDER         shift and go to state 35

    block                          shift and go to state 137
    dblock                         shift and go to state 136
    divider                        shift and go to state 138

state 96

    (86) execscan -> EXECSCAN expr .
    (93) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    DIVIDER         reduce using rule 86 (execscan -> EXECSCAN expr .)
    $end            reduce using rule 86 (execscan -> EXECSCAN expr .)
    RBRACE          reduce using rule 86 (execscan -> EXECSCAN expr .)
    COLON           reduce using rule 86 (execscan -> EXECSCAN expr .)
    QUESTION        reduce using rule 86 (execscan -> EXECSCAN expr .)
    RBRACKET        reduce using rule 86 (execscan -> EXECSCAN expr .)
    COMMA           reduce using rule 86 (execscan -> EXECSCAN expr .)
    RPAREN          reduce using rule 86 (execscan -> EXECSCAN expr .)
    LBRACKET        shift and go to state 133

  ! LBRACKET        [ reduce using rule 86 (execscan -> EXECSCAN expr .) ]


state 97

    (109) alg0 -> PLUSMINUS alg1 .
    (111) alg1 -> alg1 . DIVMUL alg2

    PLUSMINUS       reduce using rule 109 (alg0 -> PLUSMINUS alg1 .)
    COLON           reduce using rule 109 (alg0 -> PLUSMINUS alg1 .)
    LBRACKET        reduce using rule 109 (alg0 -> PLUSMINUS alg1 .)
    DIVIDER         reduce using rule 109 (alg0 -> PLUSMINUS alg1 .)
    $end            reduce using rule 109 (alg0 -> PLUSMINUS alg1 .)
    RBRACKET        reduce using rule 109 (alg0 -> PLUSMINUS alg1 .)
    COMMA           reduce using rule 109 (alg0 -> PLUSMINUS alg1 .)
    RPAREN          reduce using rule 109 (alg0 -> PLUSMINUS alg1 .)
    QUESTION        reduce using rule 109 (alg0 -> PLUSMINUS alg1 .)
    RBRACE          reduce using rule 109 (alg0 -> PLUSMINUS alg1 .)
    DIVMUL          shift and go to state 102


state 98

    (23) func -> WORD . LPAREN args RPAREN
    (24) func -> WORD . LPAREN args RPAREN block
    (94) var -> WORD .

    LPAREN          shift and go to state 122
    DPROD           reduce using rule 94 (var -> WORD .)
    DIVMUL          reduce using rule 94 (var -> WORD .)
    PLUSMINUS       reduce using rule 94 (var -> WORD .)
    COLON           reduce using rule 94 (var -> WORD .)
    LBRACKET        reduce using rule 94 (var -> WORD .)
    DIVIDER         reduce using rule 94 (var -> WORD .)
    $end            reduce using rule 94 (var -> WORD .)
    QUESTION        reduce using rule 94 (var -> WORD .)
    RBRACE          reduce using rule 94 (var -> WORD .)
    RBRACKET        reduce using rule 94 (var -> WORD .)
    COMMA           reduce using rule 94 (var -> WORD .)
    RPAREN          reduce using rule 94 (var -> WORD .)


state 99

    (3) block -> LBRACE . inblock RBRACE
    (4) inblock -> . metaexpr
    (5) inblock -> . inblock divider metaexpr
    (6) inblock -> . divider inblock
    (7) inblock -> . inblock divider
    (25) metaexpr -> . expr
    (26) metaexpr -> . deffunc
    (27) metaexpr -> . module
    (28) metaexpr -> . declare
    (29) metaexpr -> . append
    (30) metaexpr -> . define
    (31) metaexpr -> . execscan
    (32) metaexpr -> . application
    (33) metaexpr -> . compile
    (34) metaexpr -> . downlevel
    (35) metaexpr -> . if
    (19) divider -> . DIVIDER
    (47) expr -> . expralg
    (48) expr -> . parttree
    (49) expr -> . alg0
    (50) expr -> . print
    (51) expr -> . varvar
    (52) expr -> . variables
    (53) expr -> . python
    (54) expr -> . execfile
    (55) expr -> . break
    (56) expr -> . curfile
    (57) expr -> . exectext
    (58) expr -> . equal
    (59) expr -> . dequal
    (60) expr -> . element
    (61) expr -> . mlist
    (62) expr -> . yield
    (63) expr -> . repeat
    (64) expr -> . pass
    (65) expr -> . dict
    (66) expr -> . return
    (67) expr -> . modules
    (68) expr -> . exfiles
    (69) expr -> . input
    (10) deffunc -> . DEFFUNC func COLON dblock
    (9) module -> . MODULE WORD COLON dblock
    (17) declare -> . expr COLON expr
    (22) append -> . var APPEND expr
    (11) define -> . DEFINE WORD expr
    (12) define -> . WORD DEFOP expr
    (86) execscan -> . EXECSCAN expr
    (46) application -> . APPLICATION var
    (103) compile -> . COMPILE
    (88) downlevel -> . DOWNLEVEL expr
    (18) if -> . IF expr QUESTION expr COLON expr
    (70) expralg -> . term
    (71) expralg -> . abspath
    (72) expralg -> . invrelpath
    (73) expralg -> . relpath
    (74) expralg -> . relpathbase
    (75) expralg -> . func
    (76) expralg -> . block
    (77) expralg -> . list
    (39) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (8) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (84) python -> . PYTHON str
    (85) execfile -> . EXECFILE expr
    (38) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (44) equal -> . WORD EQUALS expr
    (45) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON dblock
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (13) dict -> . LBRACE declares RBRACE
    (14) dict -> . LBRACE RBRACE
    (78) return -> . RETURN expr
    (21) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (20) input -> . INPUT
    (94) var -> . WORD
    (79) term -> . str
    (80) term -> . float
    (81) term -> . int
    (82) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN
    (24) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (91) str -> . STRING
    (89) float -> . FLOAT
    (83) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    DIVIDER         shift and go to state 35
    DEFFUNC         shift and go to state 21
    MODULE          shift and go to state 52
    DEFINE          shift and go to state 72
    WORD            shift and go to state 63
    EXECSCAN        shift and go to state 11
    APPLICATION     shift and go to state 1
    COMPILE         shift and go to state 86
    DOWNLEVEL       shift and go to state 59
    IF              shift and go to state 4
    AMPERSAND       shift and go to state 36
    PLUSMINUS       shift and go to state 13
    PRINT           shift and go to state 46
    VARIABLES       shift and go to state 22
    PYTHON          shift and go to state 73
    EXECFILE        shift and go to state 28
    BREAK           shift and go to state 88
    CURFILE         shift and go to state 17
    EXECTEXT        shift and go to state 71
    MLIST           shift and go to state 9
    YIELD           shift and go to state 5
    REPEAT          shift and go to state 48
    PASS            shift and go to state 19
    LBRACE          shift and go to state 74
    RETURN          shift and go to state 45
    MODULES         shift and go to state 8
    EXFILES         shift and go to state 51
    INPUT           shift and go to state 58
    ABSPATH         shift and go to state 84
    INVRELPATH      shift and go to state 78
    RELPATH         shift and go to state 2
    RELPATHBASE     shift and go to state 43
    LBRACKET        shift and go to state 33
    STRING          shift and go to state 65
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 14

    yield                          shift and go to state 3
    application                    shift and go to state 44
    declare                        shift and go to state 6
    element                        shift and go to state 7
    execscan                       shift and go to state 40
    python                         shift and go to state 50
    parttree                       shift and go to state 10
    term                           shift and go to state 53
    abspath                        shift and go to state 69
    append                         shift and go to state 12
    block                          shift and go to state 77
    alg0                           shift and go to state 54
    module                         shift and go to state 55
    int                            shift and go to state 66
    if                             shift and go to state 15
    repeat                         shift and go to state 56
    alg1                           shift and go to state 16
    var                            shift and go to state 57
    divider                        shift and go to state 18
    break                          shift and go to state 47
    pass                           shift and go to state 20
    mlist                          shift and go to state 60
    execfile                       shift and go to state 61
    invrelpath                     shift and go to state 62
    modules                        shift and go to state 49
    deffunc                        shift and go to state 64
    variables                      shift and go to state 23
    relpath                        shift and go to state 70
    curfile                        shift and go to state 24
    alg3                           shift and go to state 67
    relpathbase                    shift and go to state 68
    alg2                           shift and go to state 25
    exectext                       shift and go to state 26
    metaexpr                       shift and go to state 27
    varvar                         shift and go to state 31
    downlevel                      shift and go to state 29
    equal                          shift and go to state 30
    input                          shift and go to state 82
    print                          shift and go to state 76
    exfiles                        shift and go to state 79
    return                         shift and go to state 34
    float                          shift and go to state 80
    func                           shift and go to state 37
    str                            shift and go to state 38
    expr                           shift and go to state 81
    expralg                        shift and go to state 42
    inblock                        shift and go to state 129
    dequal                         shift and go to state 75
    define                         shift and go to state 85
    compile                        shift and go to state 41
    list                           shift and go to state 87
    dict                           shift and go to state 83

state 100

    (82) term -> var .

    DPROD           reduce using rule 82 (term -> var .)
    DIVMUL          reduce using rule 82 (term -> var .)
    PLUSMINUS       reduce using rule 82 (term -> var .)
    COLON           reduce using rule 82 (term -> var .)
    LBRACKET        reduce using rule 82 (term -> var .)
    DIVIDER         reduce using rule 82 (term -> var .)
    $end            reduce using rule 82 (term -> var .)
    QUESTION        reduce using rule 82 (term -> var .)
    RBRACE          reduce using rule 82 (term -> var .)
    RBRACKET        reduce using rule 82 (term -> var .)
    COMMA           reduce using rule 82 (term -> var .)
    RPAREN          reduce using rule 82 (term -> var .)


state 101

    (114) alg3 -> expralg .

    DPROD           reduce using rule 114 (alg3 -> expralg .)
    DIVMUL          reduce using rule 114 (alg3 -> expralg .)
    PLUSMINUS       reduce using rule 114 (alg3 -> expralg .)
    COLON           reduce using rule 114 (alg3 -> expralg .)
    LBRACKET        reduce using rule 114 (alg3 -> expralg .)
    DIVIDER         reduce using rule 114 (alg3 -> expralg .)
    $end            reduce using rule 114 (alg3 -> expralg .)
    QUESTION        reduce using rule 114 (alg3 -> expralg .)
    RBRACE          reduce using rule 114 (alg3 -> expralg .)
    RBRACKET        reduce using rule 114 (alg3 -> expralg .)
    COMMA           reduce using rule 114 (alg3 -> expralg .)
    RPAREN          reduce using rule 114 (alg3 -> expralg .)


state 102

    (111) alg1 -> alg1 DIVMUL . alg2
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg
    (70) expralg -> . term
    (71) expralg -> . abspath
    (72) expralg -> . invrelpath
    (73) expralg -> . relpath
    (74) expralg -> . relpathbase
    (75) expralg -> . func
    (76) expralg -> . block
    (77) expralg -> . list
    (79) term -> . str
    (80) term -> . float
    (81) term -> . int
    (82) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN
    (24) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (91) str -> . STRING
    (89) float -> . FLOAT
    (83) int -> . NUMBER
    (94) var -> . WORD

    ABSPATH         shift and go to state 84
    INVRELPATH      shift and go to state 78
    RELPATH         shift and go to state 2
    RELPATHBASE     shift and go to state 43
    WORD            shift and go to state 98
    LBRACE          shift and go to state 99
    LBRACKET        shift and go to state 33
    STRING          shift and go to state 65
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 14

    relpathbase                    shift and go to state 68
    alg2                           shift and go to state 139
    block                          shift and go to state 77
    abspath                        shift and go to state 69
    func                           shift and go to state 37
    str                            shift and go to state 38
    relpath                        shift and go to state 70
    float                          shift and go to state 80
    var                            shift and go to state 100
    int                            shift and go to state 66
    invrelpath                     shift and go to state 62
    term                           shift and go to state 53
    list                           shift and go to state 87
    expralg                        shift and go to state 101
    alg3                           shift and go to state 67

state 103

    (6) inblock -> divider inblock .
    (5) inblock -> inblock . divider metaexpr
    (7) inblock -> inblock . divider
    (19) divider -> . DIVIDER

  ! shift/reduce conflict for DIVIDER resolved as shift
    RBRACE          reduce using rule 6 (inblock -> divider inblock .)
    $end            reduce using rule 6 (inblock -> divider inblock .)
    DIVIDER         shift and go to state 35

  ! DIVIDER         [ reduce using rule 6 (inblock -> divider inblock .) ]

    divider                        shift and go to state 114

state 104

    (10) deffunc -> DEFFUNC func . COLON dblock

    COLON           shift and go to state 140


state 105

    (23) func -> WORD . LPAREN args RPAREN
    (24) func -> WORD . LPAREN args RPAREN block

    LPAREN          shift and go to state 122


state 106

    (95) variables -> VARIABLES expr .
    (93) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    COLON           reduce using rule 95 (variables -> VARIABLES expr .)
    DIVIDER         reduce using rule 95 (variables -> VARIABLES expr .)
    $end            reduce using rule 95 (variables -> VARIABLES expr .)
    QUESTION        reduce using rule 95 (variables -> VARIABLES expr .)
    RBRACE          reduce using rule 95 (variables -> VARIABLES expr .)
    RBRACKET        reduce using rule 95 (variables -> VARIABLES expr .)
    COMMA           reduce using rule 95 (variables -> VARIABLES expr .)
    RPAREN          reduce using rule 95 (variables -> VARIABLES expr .)
    LBRACKET        shift and go to state 133

  ! LBRACKET        [ reduce using rule 95 (variables -> VARIABLES expr .) ]


state 107

    (113) alg2 -> alg2 DPROD . alg3
    (114) alg3 -> . expralg
    (70) expralg -> . term
    (71) expralg -> . abspath
    (72) expralg -> . invrelpath
    (73) expralg -> . relpath
    (74) expralg -> . relpathbase
    (75) expralg -> . func
    (76) expralg -> . block
    (77) expralg -> . list
    (79) term -> . str
    (80) term -> . float
    (81) term -> . int
    (82) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN
    (24) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (91) str -> . STRING
    (89) float -> . FLOAT
    (83) int -> . NUMBER
    (94) var -> . WORD

    ABSPATH         shift and go to state 84
    INVRELPATH      shift and go to state 78
    RELPATH         shift and go to state 2
    RELPATHBASE     shift and go to state 43
    WORD            shift and go to state 98
    LBRACE          shift and go to state 99
    LBRACKET        shift and go to state 33
    STRING          shift and go to state 65
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 14

    relpathbase                    shift and go to state 68
    block                          shift and go to state 77
    abspath                        shift and go to state 69
    func                           shift and go to state 37
    str                            shift and go to state 38
    relpath                        shift and go to state 70
    float                          shift and go to state 80
    var                            shift and go to state 100
    int                            shift and go to state 66
    invrelpath                     shift and go to state 62
    term                           shift and go to state 53
    list                           shift and go to state 87
    expralg                        shift and go to state 101
    alg3                           shift and go to state 141

state 108

    (85) execfile -> EXECFILE expr .
    (93) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    QUESTION        reduce using rule 85 (execfile -> EXECFILE expr .)
    COLON           reduce using rule 85 (execfile -> EXECFILE expr .)
    RBRACE          reduce using rule 85 (execfile -> EXECFILE expr .)
    DIVIDER         reduce using rule 85 (execfile -> EXECFILE expr .)
    $end            reduce using rule 85 (execfile -> EXECFILE expr .)
    RBRACKET        reduce using rule 85 (execfile -> EXECFILE expr .)
    COMMA           reduce using rule 85 (execfile -> EXECFILE expr .)
    RPAREN          reduce using rule 85 (execfile -> EXECFILE expr .)
    LBRACKET        shift and go to state 133

  ! LBRACKET        [ reduce using rule 85 (execfile -> EXECFILE expr .) ]


state 109

    (98) varvar -> varvar POINT . var
    (94) var -> . WORD

    WORD            shift and go to state 89

    var                            shift and go to state 142

state 110

    (37) list -> LBRACKET RBRACKET .

    LBRACKET        reduce using rule 37 (list -> LBRACKET RBRACKET .)
    RBRACKET        reduce using rule 37 (list -> LBRACKET RBRACKET .)
    COMMA           reduce using rule 37 (list -> LBRACKET RBRACKET .)
    RPAREN          reduce using rule 37 (list -> LBRACKET RBRACKET .)
    DPROD           reduce using rule 37 (list -> LBRACKET RBRACKET .)
    DIVMUL          reduce using rule 37 (list -> LBRACKET RBRACKET .)
    PLUSMINUS       reduce using rule 37 (list -> LBRACKET RBRACKET .)
    COLON           reduce using rule 37 (list -> LBRACKET RBRACKET .)
    DIVIDER         reduce using rule 37 (list -> LBRACKET RBRACKET .)
    $end            reduce using rule 37 (list -> LBRACKET RBRACKET .)
    QUESTION        reduce using rule 37 (list -> LBRACKET RBRACKET .)
    RBRACE          reduce using rule 37 (list -> LBRACKET RBRACKET .)


state 111

    (36) list -> LBRACKET comms . RBRACKET
    (43) comms -> comms . COMMA expr

    RBRACKET        shift and go to state 143
    COMMA           shift and go to state 144


state 112

    (42) comms -> expr .
    (93) element -> expr . LBRACKET expr RBRACKET

    COMMA           reduce using rule 42 (comms -> expr .)
    RPAREN          reduce using rule 42 (comms -> expr .)
    RBRACKET        reduce using rule 42 (comms -> expr .)
    LBRACKET        shift and go to state 133


state 113

    (39) parttree -> AMPERSAND metaexpr .

    COLON           reduce using rule 39 (parttree -> AMPERSAND metaexpr .)
    LBRACKET        reduce using rule 39 (parttree -> AMPERSAND metaexpr .)
    DIVIDER         reduce using rule 39 (parttree -> AMPERSAND metaexpr .)
    $end            reduce using rule 39 (parttree -> AMPERSAND metaexpr .)
    QUESTION        reduce using rule 39 (parttree -> AMPERSAND metaexpr .)
    RBRACE          reduce using rule 39 (parttree -> AMPERSAND metaexpr .)
    RBRACKET        reduce using rule 39 (parttree -> AMPERSAND metaexpr .)
    COMMA           reduce using rule 39 (parttree -> AMPERSAND metaexpr .)
    RPAREN          reduce using rule 39 (parttree -> AMPERSAND metaexpr .)


state 114

    (5) inblock -> inblock divider . metaexpr
    (7) inblock -> inblock divider .
    (25) metaexpr -> . expr
    (26) metaexpr -> . deffunc
    (27) metaexpr -> . module
    (28) metaexpr -> . declare
    (29) metaexpr -> . append
    (30) metaexpr -> . define
    (31) metaexpr -> . execscan
    (32) metaexpr -> . application
    (33) metaexpr -> . compile
    (34) metaexpr -> . downlevel
    (35) metaexpr -> . if
    (47) expr -> . expralg
    (48) expr -> . parttree
    (49) expr -> . alg0
    (50) expr -> . print
    (51) expr -> . varvar
    (52) expr -> . variables
    (53) expr -> . python
    (54) expr -> . execfile
    (55) expr -> . break
    (56) expr -> . curfile
    (57) expr -> . exectext
    (58) expr -> . equal
    (59) expr -> . dequal
    (60) expr -> . element
    (61) expr -> . mlist
    (62) expr -> . yield
    (63) expr -> . repeat
    (64) expr -> . pass
    (65) expr -> . dict
    (66) expr -> . return
    (67) expr -> . modules
    (68) expr -> . exfiles
    (69) expr -> . input
    (10) deffunc -> . DEFFUNC func COLON dblock
    (9) module -> . MODULE WORD COLON dblock
    (17) declare -> . expr COLON expr
    (22) append -> . var APPEND expr
    (11) define -> . DEFINE WORD expr
    (12) define -> . WORD DEFOP expr
    (86) execscan -> . EXECSCAN expr
    (46) application -> . APPLICATION var
    (103) compile -> . COMPILE
    (88) downlevel -> . DOWNLEVEL expr
    (18) if -> . IF expr QUESTION expr COLON expr
    (70) expralg -> . term
    (71) expralg -> . abspath
    (72) expralg -> . invrelpath
    (73) expralg -> . relpath
    (74) expralg -> . relpathbase
    (75) expralg -> . func
    (76) expralg -> . block
    (77) expralg -> . list
    (39) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (8) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (84) python -> . PYTHON str
    (85) execfile -> . EXECFILE expr
    (38) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (44) equal -> . WORD EQUALS expr
    (45) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON dblock
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (13) dict -> . LBRACE declares RBRACE
    (14) dict -> . LBRACE RBRACE
    (78) return -> . RETURN expr
    (21) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (20) input -> . INPUT
    (94) var -> . WORD
    (79) term -> . str
    (80) term -> . float
    (81) term -> . int
    (82) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN
    (24) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (91) str -> . STRING
    (89) float -> . FLOAT
    (83) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    RBRACE          reduce using rule 7 (inblock -> inblock divider .)
    DIVIDER         reduce using rule 7 (inblock -> inblock divider .)
    $end            reduce using rule 7 (inblock -> inblock divider .)
    DEFFUNC         shift and go to state 21
    MODULE          shift and go to state 52
    DEFINE          shift and go to state 72
    WORD            shift and go to state 63
    EXECSCAN        shift and go to state 11
    APPLICATION     shift and go to state 1
    COMPILE         shift and go to state 86
    DOWNLEVEL       shift and go to state 59
    IF              shift and go to state 4
    AMPERSAND       shift and go to state 36
    PLUSMINUS       shift and go to state 13
    PRINT           shift and go to state 46
    VARIABLES       shift and go to state 22
    PYTHON          shift and go to state 73
    EXECFILE        shift and go to state 28
    BREAK           shift and go to state 88
    CURFILE         shift and go to state 17
    EXECTEXT        shift and go to state 71
    MLIST           shift and go to state 9
    YIELD           shift and go to state 5
    REPEAT          shift and go to state 48
    PASS            shift and go to state 19
    LBRACE          shift and go to state 74
    RETURN          shift and go to state 45
    MODULES         shift and go to state 8
    EXFILES         shift and go to state 51
    INPUT           shift and go to state 58
    ABSPATH         shift and go to state 84
    INVRELPATH      shift and go to state 78
    RELPATH         shift and go to state 2
    RELPATHBASE     shift and go to state 43
    LBRACKET        shift and go to state 33
    STRING          shift and go to state 65
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 14

    yield                          shift and go to state 3
    application                    shift and go to state 44
    declare                        shift and go to state 6
    element                        shift and go to state 7
    execscan                       shift and go to state 40
    python                         shift and go to state 50
    parttree                       shift and go to state 10
    term                           shift and go to state 53
    abspath                        shift and go to state 69
    append                         shift and go to state 12
    block                          shift and go to state 77
    alg0                           shift and go to state 54
    module                         shift and go to state 55
    int                            shift and go to state 66
    if                             shift and go to state 15
    repeat                         shift and go to state 56
    alg1                           shift and go to state 16
    var                            shift and go to state 57
    break                          shift and go to state 47
    pass                           shift and go to state 20
    mlist                          shift and go to state 60
    execfile                       shift and go to state 61
    invrelpath                     shift and go to state 62
    modules                        shift and go to state 49
    deffunc                        shift and go to state 64
    variables                      shift and go to state 23
    relpath                        shift and go to state 70
    curfile                        shift and go to state 24
    alg3                           shift and go to state 67
    relpathbase                    shift and go to state 68
    alg2                           shift and go to state 25
    exectext                       shift and go to state 26
    metaexpr                       shift and go to state 145
    varvar                         shift and go to state 31
    downlevel                      shift and go to state 29
    equal                          shift and go to state 30
    input                          shift and go to state 82
    print                          shift and go to state 76
    exfiles                        shift and go to state 79
    return                         shift and go to state 34
    float                          shift and go to state 80
    func                           shift and go to state 37
    str                            shift and go to state 38
    expr                           shift and go to state 81
    expralg                        shift and go to state 42
    dequal                         shift and go to state 75
    define                         shift and go to state 85
    compile                        shift and go to state 41
    list                           shift and go to state 87
    dict                           shift and go to state 83

state 115

    (78) return -> RETURN expr .
    (93) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    COLON           reduce using rule 78 (return -> RETURN expr .)
    RBRACE          reduce using rule 78 (return -> RETURN expr .)
    DIVIDER         reduce using rule 78 (return -> RETURN expr .)
    $end            reduce using rule 78 (return -> RETURN expr .)
    QUESTION        reduce using rule 78 (return -> RETURN expr .)
    RBRACKET        reduce using rule 78 (return -> RETURN expr .)
    COMMA           reduce using rule 78 (return -> RETURN expr .)
    RPAREN          reduce using rule 78 (return -> RETURN expr .)
    LBRACKET        shift and go to state 133

  ! LBRACKET        [ reduce using rule 78 (return -> RETURN expr .) ]


state 116

    (8) print -> PRINT expr .
    (93) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    COLON           reduce using rule 8 (print -> PRINT expr .)
    DIVIDER         reduce using rule 8 (print -> PRINT expr .)
    $end            reduce using rule 8 (print -> PRINT expr .)
    QUESTION        reduce using rule 8 (print -> PRINT expr .)
    RBRACE          reduce using rule 8 (print -> PRINT expr .)
    RBRACKET        reduce using rule 8 (print -> PRINT expr .)
    COMMA           reduce using rule 8 (print -> PRINT expr .)
    RPAREN          reduce using rule 8 (print -> PRINT expr .)
    LBRACKET        shift and go to state 133

  ! LBRACKET        [ reduce using rule 8 (print -> PRINT expr .) ]


state 117

    (9) module -> MODULE WORD . COLON dblock

    COLON           shift and go to state 146


state 118

    (108) alg0 -> alg0 PLUSMINUS . alg1
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg
    (70) expralg -> . term
    (71) expralg -> . abspath
    (72) expralg -> . invrelpath
    (73) expralg -> . relpath
    (74) expralg -> . relpathbase
    (75) expralg -> . func
    (76) expralg -> . block
    (77) expralg -> . list
    (79) term -> . str
    (80) term -> . float
    (81) term -> . int
    (82) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN
    (24) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (91) str -> . STRING
    (89) float -> . FLOAT
    (83) int -> . NUMBER
    (94) var -> . WORD

    ABSPATH         shift and go to state 84
    INVRELPATH      shift and go to state 78
    RELPATH         shift and go to state 2
    RELPATHBASE     shift and go to state 43
    WORD            shift and go to state 98
    LBRACE          shift and go to state 99
    LBRACKET        shift and go to state 33
    STRING          shift and go to state 65
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 14

    relpathbase                    shift and go to state 68
    alg2                           shift and go to state 25
    block                          shift and go to state 77
    abspath                        shift and go to state 69
    func                           shift and go to state 37
    alg1                           shift and go to state 147
    str                            shift and go to state 38
    relpath                        shift and go to state 70
    float                          shift and go to state 80
    var                            shift and go to state 100
    int                            shift and go to state 66
    invrelpath                     shift and go to state 62
    term                           shift and go to state 53
    list                           shift and go to state 87
    expralg                        shift and go to state 101
    alg3                           shift and go to state 67

state 119

    (22) append -> var APPEND . expr
    (47) expr -> . expralg
    (48) expr -> . parttree
    (49) expr -> . alg0
    (50) expr -> . print
    (51) expr -> . varvar
    (52) expr -> . variables
    (53) expr -> . python
    (54) expr -> . execfile
    (55) expr -> . break
    (56) expr -> . curfile
    (57) expr -> . exectext
    (58) expr -> . equal
    (59) expr -> . dequal
    (60) expr -> . element
    (61) expr -> . mlist
    (62) expr -> . yield
    (63) expr -> . repeat
    (64) expr -> . pass
    (65) expr -> . dict
    (66) expr -> . return
    (67) expr -> . modules
    (68) expr -> . exfiles
    (69) expr -> . input
    (70) expralg -> . term
    (71) expralg -> . abspath
    (72) expralg -> . invrelpath
    (73) expralg -> . relpath
    (74) expralg -> . relpathbase
    (75) expralg -> . func
    (76) expralg -> . block
    (77) expralg -> . list
    (39) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (8) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (84) python -> . PYTHON str
    (85) execfile -> . EXECFILE expr
    (38) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (44) equal -> . WORD EQUALS expr
    (45) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON dblock
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (13) dict -> . LBRACE declares RBRACE
    (14) dict -> . LBRACE RBRACE
    (78) return -> . RETURN expr
    (21) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (20) input -> . INPUT
    (79) term -> . str
    (80) term -> . float
    (81) term -> . int
    (82) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN
    (24) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (94) var -> . WORD
    (91) str -> . STRING
    (89) float -> . FLOAT
    (83) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    AMPERSAND       shift and go to state 36
    PLUSMINUS       shift and go to state 13
    PRINT           shift and go to state 46
    VARIABLES       shift and go to state 22
    PYTHON          shift and go to state 73
    EXECFILE        shift and go to state 28
    BREAK           shift and go to state 88
    CURFILE         shift and go to state 17
    EXECTEXT        shift and go to state 71
    WORD            shift and go to state 92
    MLIST           shift and go to state 9
    YIELD           shift and go to state 5
    REPEAT          shift and go to state 48
    PASS            shift and go to state 19
    LBRACE          shift and go to state 74
    RETURN          shift and go to state 45
    MODULES         shift and go to state 8
    EXFILES         shift and go to state 51
    INPUT           shift and go to state 58
    ABSPATH         shift and go to state 84
    INVRELPATH      shift and go to state 78
    RELPATH         shift and go to state 2
    RELPATHBASE     shift and go to state 43
    LBRACKET        shift and go to state 33
    STRING          shift and go to state 65
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 14

    yield                          shift and go to state 3
    alg1                           shift and go to state 16
    var                            shift and go to state 91
    element                        shift and go to state 7
    dequal                         shift and go to state 75
    parttree                       shift and go to state 10
    python                         shift and go to state 50
    abspath                        shift and go to state 69
    block                          shift and go to state 77
    alg0                           shift and go to state 54
    repeat                         shift and go to state 56
    return                         shift and go to state 34
    break                          shift and go to state 47
    equal                          shift and go to state 30
    mlist                          shift and go to state 60
    execfile                       shift and go to state 61
    invrelpath                     shift and go to state 62
    modules                        shift and go to state 49
    variables                      shift and go to state 23
    int                            shift and go to state 66
    curfile                        shift and go to state 24
    alg3                           shift and go to state 67
    relpathbase                    shift and go to state 68
    alg2                           shift and go to state 25
    exectext                       shift and go to state 26
    relpath                        shift and go to state 70
    input                          shift and go to state 82
    print                          shift and go to state 76
    exfiles                        shift and go to state 79
    varvar                         shift and go to state 31
    float                          shift and go to state 80
    func                           shift and go to state 37
    term                           shift and go to state 53
    str                            shift and go to state 38
    expr                           shift and go to state 148
    pass                           shift and go to state 20
    dict                           shift and go to state 83
    list                           shift and go to state 87
    expralg                        shift and go to state 42

state 120

    (88) downlevel -> DOWNLEVEL expr .
    (93) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    COLON           reduce using rule 88 (downlevel -> DOWNLEVEL expr .)
    DIVIDER         reduce using rule 88 (downlevel -> DOWNLEVEL expr .)
    $end            reduce using rule 88 (downlevel -> DOWNLEVEL expr .)
    QUESTION        reduce using rule 88 (downlevel -> DOWNLEVEL expr .)
    RBRACE          reduce using rule 88 (downlevel -> DOWNLEVEL expr .)
    RBRACKET        reduce using rule 88 (downlevel -> DOWNLEVEL expr .)
    COMMA           reduce using rule 88 (downlevel -> DOWNLEVEL expr .)
    RPAREN          reduce using rule 88 (downlevel -> DOWNLEVEL expr .)
    LBRACKET        shift and go to state 133

  ! LBRACKET        [ reduce using rule 88 (downlevel -> DOWNLEVEL expr .) ]


state 121

    (12) define -> WORD DEFOP . expr
    (47) expr -> . expralg
    (48) expr -> . parttree
    (49) expr -> . alg0
    (50) expr -> . print
    (51) expr -> . varvar
    (52) expr -> . variables
    (53) expr -> . python
    (54) expr -> . execfile
    (55) expr -> . break
    (56) expr -> . curfile
    (57) expr -> . exectext
    (58) expr -> . equal
    (59) expr -> . dequal
    (60) expr -> . element
    (61) expr -> . mlist
    (62) expr -> . yield
    (63) expr -> . repeat
    (64) expr -> . pass
    (65) expr -> . dict
    (66) expr -> . return
    (67) expr -> . modules
    (68) expr -> . exfiles
    (69) expr -> . input
    (70) expralg -> . term
    (71) expralg -> . abspath
    (72) expralg -> . invrelpath
    (73) expralg -> . relpath
    (74) expralg -> . relpathbase
    (75) expralg -> . func
    (76) expralg -> . block
    (77) expralg -> . list
    (39) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (8) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (84) python -> . PYTHON str
    (85) execfile -> . EXECFILE expr
    (38) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (44) equal -> . WORD EQUALS expr
    (45) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON dblock
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (13) dict -> . LBRACE declares RBRACE
    (14) dict -> . LBRACE RBRACE
    (78) return -> . RETURN expr
    (21) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (20) input -> . INPUT
    (79) term -> . str
    (80) term -> . float
    (81) term -> . int
    (82) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN
    (24) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (94) var -> . WORD
    (91) str -> . STRING
    (89) float -> . FLOAT
    (83) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    AMPERSAND       shift and go to state 36
    PLUSMINUS       shift and go to state 13
    PRINT           shift and go to state 46
    VARIABLES       shift and go to state 22
    PYTHON          shift and go to state 73
    EXECFILE        shift and go to state 28
    BREAK           shift and go to state 88
    CURFILE         shift and go to state 17
    EXECTEXT        shift and go to state 71
    WORD            shift and go to state 92
    MLIST           shift and go to state 9
    YIELD           shift and go to state 5
    REPEAT          shift and go to state 48
    PASS            shift and go to state 19
    LBRACE          shift and go to state 74
    RETURN          shift and go to state 45
    MODULES         shift and go to state 8
    EXFILES         shift and go to state 51
    INPUT           shift and go to state 58
    ABSPATH         shift and go to state 84
    INVRELPATH      shift and go to state 78
    RELPATH         shift and go to state 2
    RELPATHBASE     shift and go to state 43
    LBRACKET        shift and go to state 33
    STRING          shift and go to state 65
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 14

    yield                          shift and go to state 3
    alg1                           shift and go to state 16
    var                            shift and go to state 91
    element                        shift and go to state 7
    dequal                         shift and go to state 75
    parttree                       shift and go to state 10
    python                         shift and go to state 50
    block                          shift and go to state 77
    alg0                           shift and go to state 54
    repeat                         shift and go to state 56
    return                         shift and go to state 34
    break                          shift and go to state 47
    equal                          shift and go to state 30
    mlist                          shift and go to state 60
    execfile                       shift and go to state 61
    invrelpath                     shift and go to state 62
    modules                        shift and go to state 49
    variables                      shift and go to state 23
    int                            shift and go to state 66
    curfile                        shift and go to state 24
    alg3                           shift and go to state 67
    relpathbase                    shift and go to state 68
    alg2                           shift and go to state 25
    exectext                       shift and go to state 26
    abspath                        shift and go to state 69
    relpath                        shift and go to state 70
    input                          shift and go to state 82
    print                          shift and go to state 76
    exfiles                        shift and go to state 79
    varvar                         shift and go to state 31
    float                          shift and go to state 80
    func                           shift and go to state 37
    term                           shift and go to state 53
    str                            shift and go to state 38
    expr                           shift and go to state 149
    pass                           shift and go to state 20
    expralg                        shift and go to state 42
    list                           shift and go to state 87
    dict                           shift and go to state 83

state 122

    (23) func -> WORD LPAREN . args RPAREN
    (24) func -> WORD LPAREN . args RPAREN block
    (40) args -> .
    (41) args -> . comms
    (42) comms -> . expr
    (43) comms -> . comms COMMA expr
    (47) expr -> . expralg
    (48) expr -> . parttree
    (49) expr -> . alg0
    (50) expr -> . print
    (51) expr -> . varvar
    (52) expr -> . variables
    (53) expr -> . python
    (54) expr -> . execfile
    (55) expr -> . break
    (56) expr -> . curfile
    (57) expr -> . exectext
    (58) expr -> . equal
    (59) expr -> . dequal
    (60) expr -> . element
    (61) expr -> . mlist
    (62) expr -> . yield
    (63) expr -> . repeat
    (64) expr -> . pass
    (65) expr -> . dict
    (66) expr -> . return
    (67) expr -> . modules
    (68) expr -> . exfiles
    (69) expr -> . input
    (70) expralg -> . term
    (71) expralg -> . abspath
    (72) expralg -> . invrelpath
    (73) expralg -> . relpath
    (74) expralg -> . relpathbase
    (75) expralg -> . func
    (76) expralg -> . block
    (77) expralg -> . list
    (39) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (8) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (84) python -> . PYTHON str
    (85) execfile -> . EXECFILE expr
    (38) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (44) equal -> . WORD EQUALS expr
    (45) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON dblock
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (13) dict -> . LBRACE declares RBRACE
    (14) dict -> . LBRACE RBRACE
    (78) return -> . RETURN expr
    (21) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (20) input -> . INPUT
    (79) term -> . str
    (80) term -> . float
    (81) term -> . int
    (82) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN
    (24) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (94) var -> . WORD
    (91) str -> . STRING
    (89) float -> . FLOAT
    (83) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    RPAREN          reduce using rule 40 (args -> .)
    AMPERSAND       shift and go to state 36
    PLUSMINUS       shift and go to state 13
    PRINT           shift and go to state 46
    VARIABLES       shift and go to state 22
    PYTHON          shift and go to state 73
    EXECFILE        shift and go to state 28
    BREAK           shift and go to state 88
    CURFILE         shift and go to state 17
    EXECTEXT        shift and go to state 71
    WORD            shift and go to state 92
    MLIST           shift and go to state 9
    YIELD           shift and go to state 5
    REPEAT          shift and go to state 48
    PASS            shift and go to state 19
    LBRACE          shift and go to state 74
    RETURN          shift and go to state 45
    MODULES         shift and go to state 8
    EXFILES         shift and go to state 51
    INPUT           shift and go to state 58
    ABSPATH         shift and go to state 84
    INVRELPATH      shift and go to state 78
    RELPATH         shift and go to state 2
    RELPATHBASE     shift and go to state 43
    LBRACKET        shift and go to state 33
    STRING          shift and go to state 65
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 14

    yield                          shift and go to state 3
    alg1                           shift and go to state 16
    return                         shift and go to state 34
    element                        shift and go to state 7
    dequal                         shift and go to state 75
    parttree                       shift and go to state 10
    python                         shift and go to state 50
    term                           shift and go to state 53
    abspath                        shift and go to state 69
    args                           shift and go to state 150
    alg0                           shift and go to state 54
    repeat                         shift and go to state 56
    var                            shift and go to state 91
    break                          shift and go to state 47
    pass                           shift and go to state 20
    mlist                          shift and go to state 60
    execfile                       shift and go to state 61
    invrelpath                     shift and go to state 62
    modules                        shift and go to state 49
    variables                      shift and go to state 23
    int                            shift and go to state 66
    curfile                        shift and go to state 24
    alg3                           shift and go to state 67
    relpathbase                    shift and go to state 68
    alg2                           shift and go to state 25
    exectext                       shift and go to state 26
    relpath                        shift and go to state 70
    equal                          shift and go to state 30
    comms                          shift and go to state 151
    input                          shift and go to state 82
    print                          shift and go to state 76
    block                          shift and go to state 77
    exfiles                        shift and go to state 79
    varvar                         shift and go to state 31
    float                          shift and go to state 80
    func                           shift and go to state 37
    str                            shift and go to state 38
    expr                           shift and go to state 112
    dict                           shift and go to state 83
    list                           shift and go to state 87
    expralg                        shift and go to state 42

state 123

    (44) equal -> WORD EQUALS . expr
    (47) expr -> . expralg
    (48) expr -> . parttree
    (49) expr -> . alg0
    (50) expr -> . print
    (51) expr -> . varvar
    (52) expr -> . variables
    (53) expr -> . python
    (54) expr -> . execfile
    (55) expr -> . break
    (56) expr -> . curfile
    (57) expr -> . exectext
    (58) expr -> . equal
    (59) expr -> . dequal
    (60) expr -> . element
    (61) expr -> . mlist
    (62) expr -> . yield
    (63) expr -> . repeat
    (64) expr -> . pass
    (65) expr -> . dict
    (66) expr -> . return
    (67) expr -> . modules
    (68) expr -> . exfiles
    (69) expr -> . input
    (70) expralg -> . term
    (71) expralg -> . abspath
    (72) expralg -> . invrelpath
    (73) expralg -> . relpath
    (74) expralg -> . relpathbase
    (75) expralg -> . func
    (76) expralg -> . block
    (77) expralg -> . list
    (39) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (8) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (84) python -> . PYTHON str
    (85) execfile -> . EXECFILE expr
    (38) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (44) equal -> . WORD EQUALS expr
    (45) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON dblock
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (13) dict -> . LBRACE declares RBRACE
    (14) dict -> . LBRACE RBRACE
    (78) return -> . RETURN expr
    (21) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (20) input -> . INPUT
    (79) term -> . str
    (80) term -> . float
    (81) term -> . int
    (82) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN
    (24) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (94) var -> . WORD
    (91) str -> . STRING
    (89) float -> . FLOAT
    (83) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    AMPERSAND       shift and go to state 36
    PLUSMINUS       shift and go to state 13
    PRINT           shift and go to state 46
    VARIABLES       shift and go to state 22
    PYTHON          shift and go to state 73
    EXECFILE        shift and go to state 28
    BREAK           shift and go to state 88
    CURFILE         shift and go to state 17
    EXECTEXT        shift and go to state 71
    WORD            shift and go to state 92
    MLIST           shift and go to state 9
    YIELD           shift and go to state 5
    REPEAT          shift and go to state 48
    PASS            shift and go to state 19
    LBRACE          shift and go to state 74
    RETURN          shift and go to state 45
    MODULES         shift and go to state 8
    EXFILES         shift and go to state 51
    INPUT           shift and go to state 58
    ABSPATH         shift and go to state 84
    INVRELPATH      shift and go to state 78
    RELPATH         shift and go to state 2
    RELPATHBASE     shift and go to state 43
    LBRACKET        shift and go to state 33
    STRING          shift and go to state 65
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 14

    yield                          shift and go to state 3
    alg1                           shift and go to state 16
    var                            shift and go to state 91
    element                        shift and go to state 7
    dequal                         shift and go to state 75
    parttree                       shift and go to state 10
    python                         shift and go to state 50
    block                          shift and go to state 77
    alg0                           shift and go to state 54
    repeat                         shift and go to state 56
    return                         shift and go to state 34
    break                          shift and go to state 47
    equal                          shift and go to state 30
    mlist                          shift and go to state 60
    execfile                       shift and go to state 61
    invrelpath                     shift and go to state 62
    modules                        shift and go to state 49
    variables                      shift and go to state 23
    int                            shift and go to state 66
    curfile                        shift and go to state 24
    alg3                           shift and go to state 67
    relpathbase                    shift and go to state 68
    alg2                           shift and go to state 25
    exectext                       shift and go to state 26
    abspath                        shift and go to state 69
    relpath                        shift and go to state 70
    input                          shift and go to state 82
    print                          shift and go to state 76
    exfiles                        shift and go to state 79
    varvar                         shift and go to state 31
    float                          shift and go to state 80
    func                           shift and go to state 37
    term                           shift and go to state 53
    str                            shift and go to state 38
    expr                           shift and go to state 152
    pass                           shift and go to state 20
    expralg                        shift and go to state 42
    list                           shift and go to state 87
    dict                           shift and go to state 83

state 124

    (87) exectext -> EXECTEXT expr .
    (93) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    COLON           reduce using rule 87 (exectext -> EXECTEXT expr .)
    DIVIDER         reduce using rule 87 (exectext -> EXECTEXT expr .)
    $end            reduce using rule 87 (exectext -> EXECTEXT expr .)
    QUESTION        reduce using rule 87 (exectext -> EXECTEXT expr .)
    RBRACE          reduce using rule 87 (exectext -> EXECTEXT expr .)
    RBRACKET        reduce using rule 87 (exectext -> EXECTEXT expr .)
    COMMA           reduce using rule 87 (exectext -> EXECTEXT expr .)
    RPAREN          reduce using rule 87 (exectext -> EXECTEXT expr .)
    LBRACKET        shift and go to state 133

  ! LBRACKET        [ reduce using rule 87 (exectext -> EXECTEXT expr .) ]


state 125

    (11) define -> DEFINE WORD . expr
    (47) expr -> . expralg
    (48) expr -> . parttree
    (49) expr -> . alg0
    (50) expr -> . print
    (51) expr -> . varvar
    (52) expr -> . variables
    (53) expr -> . python
    (54) expr -> . execfile
    (55) expr -> . break
    (56) expr -> . curfile
    (57) expr -> . exectext
    (58) expr -> . equal
    (59) expr -> . dequal
    (60) expr -> . element
    (61) expr -> . mlist
    (62) expr -> . yield
    (63) expr -> . repeat
    (64) expr -> . pass
    (65) expr -> . dict
    (66) expr -> . return
    (67) expr -> . modules
    (68) expr -> . exfiles
    (69) expr -> . input
    (70) expralg -> . term
    (71) expralg -> . abspath
    (72) expralg -> . invrelpath
    (73) expralg -> . relpath
    (74) expralg -> . relpathbase
    (75) expralg -> . func
    (76) expralg -> . block
    (77) expralg -> . list
    (39) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (8) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (84) python -> . PYTHON str
    (85) execfile -> . EXECFILE expr
    (38) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (44) equal -> . WORD EQUALS expr
    (45) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON dblock
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (13) dict -> . LBRACE declares RBRACE
    (14) dict -> . LBRACE RBRACE
    (78) return -> . RETURN expr
    (21) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (20) input -> . INPUT
    (79) term -> . str
    (80) term -> . float
    (81) term -> . int
    (82) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN
    (24) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (94) var -> . WORD
    (91) str -> . STRING
    (89) float -> . FLOAT
    (83) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    AMPERSAND       shift and go to state 36
    PLUSMINUS       shift and go to state 13
    PRINT           shift and go to state 46
    VARIABLES       shift and go to state 22
    PYTHON          shift and go to state 73
    EXECFILE        shift and go to state 28
    BREAK           shift and go to state 88
    CURFILE         shift and go to state 17
    EXECTEXT        shift and go to state 71
    WORD            shift and go to state 92
    MLIST           shift and go to state 9
    YIELD           shift and go to state 5
    REPEAT          shift and go to state 48
    PASS            shift and go to state 19
    LBRACE          shift and go to state 74
    RETURN          shift and go to state 45
    MODULES         shift and go to state 8
    EXFILES         shift and go to state 51
    INPUT           shift and go to state 58
    ABSPATH         shift and go to state 84
    INVRELPATH      shift and go to state 78
    RELPATH         shift and go to state 2
    RELPATHBASE     shift and go to state 43
    LBRACKET        shift and go to state 33
    STRING          shift and go to state 65
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 14

    yield                          shift and go to state 3
    alg1                           shift and go to state 16
    var                            shift and go to state 91
    element                        shift and go to state 7
    dequal                         shift and go to state 75
    parttree                       shift and go to state 10
    python                         shift and go to state 50
    block                          shift and go to state 77
    alg0                           shift and go to state 54
    repeat                         shift and go to state 56
    return                         shift and go to state 34
    break                          shift and go to state 47
    equal                          shift and go to state 30
    mlist                          shift and go to state 60
    execfile                       shift and go to state 61
    invrelpath                     shift and go to state 62
    modules                        shift and go to state 49
    variables                      shift and go to state 23
    int                            shift and go to state 66
    curfile                        shift and go to state 24
    alg3                           shift and go to state 67
    relpathbase                    shift and go to state 68
    alg2                           shift and go to state 25
    exectext                       shift and go to state 26
    abspath                        shift and go to state 69
    relpath                        shift and go to state 70
    input                          shift and go to state 82
    print                          shift and go to state 76
    exfiles                        shift and go to state 79
    varvar                         shift and go to state 31
    float                          shift and go to state 80
    func                           shift and go to state 37
    term                           shift and go to state 53
    str                            shift and go to state 38
    expr                           shift and go to state 153
    pass                           shift and go to state 20
    expralg                        shift and go to state 42
    list                           shift and go to state 87
    dict                           shift and go to state 83

state 126

    (84) python -> PYTHON str .

    COLON           reduce using rule 84 (python -> PYTHON str .)
    LBRACKET        reduce using rule 84 (python -> PYTHON str .)
    DIVIDER         reduce using rule 84 (python -> PYTHON str .)
    $end            reduce using rule 84 (python -> PYTHON str .)
    QUESTION        reduce using rule 84 (python -> PYTHON str .)
    RBRACE          reduce using rule 84 (python -> PYTHON str .)
    RBRACKET        reduce using rule 84 (python -> PYTHON str .)
    COMMA           reduce using rule 84 (python -> PYTHON str .)
    RPAREN          reduce using rule 84 (python -> PYTHON str .)


state 127

    (13) dict -> LBRACE declares . RBRACE
    (16) declares -> declares . COMMA declare

    RBRACE          shift and go to state 155
    COMMA           shift and go to state 154


state 128

    (15) declares -> declare .
    (28) metaexpr -> declare .

  ! reduce/reduce conflict for RBRACE resolved using rule 15 (declares -> declare .)
    RBRACE          reduce using rule 15 (declares -> declare .)
    COMMA           reduce using rule 15 (declares -> declare .)
    DIVIDER         reduce using rule 28 (metaexpr -> declare .)

  ! RBRACE          [ reduce using rule 28 (metaexpr -> declare .) ]


state 129

    (3) block -> LBRACE inblock . RBRACE
    (5) inblock -> inblock . divider metaexpr
    (7) inblock -> inblock . divider
    (19) divider -> . DIVIDER

    RBRACE          shift and go to state 156
    DIVIDER         shift and go to state 35

    divider                        shift and go to state 114

state 130

    (14) dict -> LBRACE RBRACE .

    COLON           reduce using rule 14 (dict -> LBRACE RBRACE .)
    LBRACKET        reduce using rule 14 (dict -> LBRACE RBRACE .)
    DIVIDER         reduce using rule 14 (dict -> LBRACE RBRACE .)
    $end            reduce using rule 14 (dict -> LBRACE RBRACE .)
    QUESTION        reduce using rule 14 (dict -> LBRACE RBRACE .)
    RBRACE          reduce using rule 14 (dict -> LBRACE RBRACE .)
    RBRACKET        reduce using rule 14 (dict -> LBRACE RBRACE .)
    COMMA           reduce using rule 14 (dict -> LBRACE RBRACE .)
    RPAREN          reduce using rule 14 (dict -> LBRACE RBRACE .)


state 131

    (17) declare -> expr . COLON expr
    (25) metaexpr -> expr .
    (93) element -> expr . LBRACKET expr RBRACKET

    COLON           shift and go to state 132
    RBRACE          reduce using rule 25 (metaexpr -> expr .)
    DIVIDER         reduce using rule 25 (metaexpr -> expr .)
    LBRACKET        shift and go to state 133


state 132

    (17) declare -> expr COLON . expr
    (47) expr -> . expralg
    (48) expr -> . parttree
    (49) expr -> . alg0
    (50) expr -> . print
    (51) expr -> . varvar
    (52) expr -> . variables
    (53) expr -> . python
    (54) expr -> . execfile
    (55) expr -> . break
    (56) expr -> . curfile
    (57) expr -> . exectext
    (58) expr -> . equal
    (59) expr -> . dequal
    (60) expr -> . element
    (61) expr -> . mlist
    (62) expr -> . yield
    (63) expr -> . repeat
    (64) expr -> . pass
    (65) expr -> . dict
    (66) expr -> . return
    (67) expr -> . modules
    (68) expr -> . exfiles
    (69) expr -> . input
    (70) expralg -> . term
    (71) expralg -> . abspath
    (72) expralg -> . invrelpath
    (73) expralg -> . relpath
    (74) expralg -> . relpathbase
    (75) expralg -> . func
    (76) expralg -> . block
    (77) expralg -> . list
    (39) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (8) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (84) python -> . PYTHON str
    (85) execfile -> . EXECFILE expr
    (38) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (44) equal -> . WORD EQUALS expr
    (45) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON dblock
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (13) dict -> . LBRACE declares RBRACE
    (14) dict -> . LBRACE RBRACE
    (78) return -> . RETURN expr
    (21) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (20) input -> . INPUT
    (79) term -> . str
    (80) term -> . float
    (81) term -> . int
    (82) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN
    (24) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (94) var -> . WORD
    (91) str -> . STRING
    (89) float -> . FLOAT
    (83) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    AMPERSAND       shift and go to state 36
    PLUSMINUS       shift and go to state 13
    PRINT           shift and go to state 46
    VARIABLES       shift and go to state 22
    PYTHON          shift and go to state 73
    EXECFILE        shift and go to state 28
    BREAK           shift and go to state 88
    CURFILE         shift and go to state 17
    EXECTEXT        shift and go to state 71
    WORD            shift and go to state 92
    MLIST           shift and go to state 9
    YIELD           shift and go to state 5
    REPEAT          shift and go to state 48
    PASS            shift and go to state 19
    LBRACE          shift and go to state 74
    RETURN          shift and go to state 45
    MODULES         shift and go to state 8
    EXFILES         shift and go to state 51
    INPUT           shift and go to state 58
    ABSPATH         shift and go to state 84
    INVRELPATH      shift and go to state 78
    RELPATH         shift and go to state 2
    RELPATHBASE     shift and go to state 43
    LBRACKET        shift and go to state 33
    STRING          shift and go to state 65
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 14

    yield                          shift and go to state 3
    alg1                           shift and go to state 16
    var                            shift and go to state 91
    element                        shift and go to state 7
    dequal                         shift and go to state 75
    parttree                       shift and go to state 10
    python                         shift and go to state 50
    block                          shift and go to state 77
    alg0                           shift and go to state 54
    repeat                         shift and go to state 56
    return                         shift and go to state 34
    break                          shift and go to state 47
    equal                          shift and go to state 30
    mlist                          shift and go to state 60
    execfile                       shift and go to state 61
    invrelpath                     shift and go to state 62
    modules                        shift and go to state 49
    variables                      shift and go to state 23
    int                            shift and go to state 66
    curfile                        shift and go to state 24
    alg3                           shift and go to state 67
    relpathbase                    shift and go to state 68
    alg2                           shift and go to state 25
    exectext                       shift and go to state 26
    abspath                        shift and go to state 69
    relpath                        shift and go to state 70
    input                          shift and go to state 82
    print                          shift and go to state 76
    exfiles                        shift and go to state 79
    varvar                         shift and go to state 31
    float                          shift and go to state 80
    func                           shift and go to state 37
    term                           shift and go to state 53
    str                            shift and go to state 38
    expr                           shift and go to state 157
    pass                           shift and go to state 20
    expralg                        shift and go to state 42
    list                           shift and go to state 87
    dict                           shift and go to state 83

state 133

    (93) element -> expr LBRACKET . expr RBRACKET
    (47) expr -> . expralg
    (48) expr -> . parttree
    (49) expr -> . alg0
    (50) expr -> . print
    (51) expr -> . varvar
    (52) expr -> . variables
    (53) expr -> . python
    (54) expr -> . execfile
    (55) expr -> . break
    (56) expr -> . curfile
    (57) expr -> . exectext
    (58) expr -> . equal
    (59) expr -> . dequal
    (60) expr -> . element
    (61) expr -> . mlist
    (62) expr -> . yield
    (63) expr -> . repeat
    (64) expr -> . pass
    (65) expr -> . dict
    (66) expr -> . return
    (67) expr -> . modules
    (68) expr -> . exfiles
    (69) expr -> . input
    (70) expralg -> . term
    (71) expralg -> . abspath
    (72) expralg -> . invrelpath
    (73) expralg -> . relpath
    (74) expralg -> . relpathbase
    (75) expralg -> . func
    (76) expralg -> . block
    (77) expralg -> . list
    (39) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (8) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (84) python -> . PYTHON str
    (85) execfile -> . EXECFILE expr
    (38) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (44) equal -> . WORD EQUALS expr
    (45) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON dblock
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (13) dict -> . LBRACE declares RBRACE
    (14) dict -> . LBRACE RBRACE
    (78) return -> . RETURN expr
    (21) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (20) input -> . INPUT
    (79) term -> . str
    (80) term -> . float
    (81) term -> . int
    (82) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN
    (24) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (94) var -> . WORD
    (91) str -> . STRING
    (89) float -> . FLOAT
    (83) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    AMPERSAND       shift and go to state 36
    PLUSMINUS       shift and go to state 13
    PRINT           shift and go to state 46
    VARIABLES       shift and go to state 22
    PYTHON          shift and go to state 73
    EXECFILE        shift and go to state 28
    BREAK           shift and go to state 88
    CURFILE         shift and go to state 17
    EXECTEXT        shift and go to state 71
    WORD            shift and go to state 92
    MLIST           shift and go to state 9
    YIELD           shift and go to state 5
    REPEAT          shift and go to state 48
    PASS            shift and go to state 19
    LBRACE          shift and go to state 74
    RETURN          shift and go to state 45
    MODULES         shift and go to state 8
    EXFILES         shift and go to state 51
    INPUT           shift and go to state 58
    ABSPATH         shift and go to state 84
    INVRELPATH      shift and go to state 78
    RELPATH         shift and go to state 2
    RELPATHBASE     shift and go to state 43
    LBRACKET        shift and go to state 33
    STRING          shift and go to state 65
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 14

    yield                          shift and go to state 3
    alg1                           shift and go to state 16
    var                            shift and go to state 91
    element                        shift and go to state 7
    dequal                         shift and go to state 75
    parttree                       shift and go to state 10
    python                         shift and go to state 50
    block                          shift and go to state 77
    alg0                           shift and go to state 54
    repeat                         shift and go to state 56
    return                         shift and go to state 34
    break                          shift and go to state 47
    equal                          shift and go to state 30
    mlist                          shift and go to state 60
    execfile                       shift and go to state 61
    invrelpath                     shift and go to state 62
    modules                        shift and go to state 49
    variables                      shift and go to state 23
    int                            shift and go to state 66
    curfile                        shift and go to state 24
    alg3                           shift and go to state 67
    relpathbase                    shift and go to state 68
    alg2                           shift and go to state 25
    exectext                       shift and go to state 26
    abspath                        shift and go to state 69
    relpath                        shift and go to state 70
    input                          shift and go to state 82
    print                          shift and go to state 76
    exfiles                        shift and go to state 79
    varvar                         shift and go to state 31
    float                          shift and go to state 80
    func                           shift and go to state 37
    term                           shift and go to state 53
    str                            shift and go to state 38
    expr                           shift and go to state 158
    pass                           shift and go to state 20
    expralg                        shift and go to state 42
    list                           shift and go to state 87
    dict                           shift and go to state 83

state 134

    (18) if -> IF expr QUESTION . expr COLON expr
    (47) expr -> . expralg
    (48) expr -> . parttree
    (49) expr -> . alg0
    (50) expr -> . print
    (51) expr -> . varvar
    (52) expr -> . variables
    (53) expr -> . python
    (54) expr -> . execfile
    (55) expr -> . break
    (56) expr -> . curfile
    (57) expr -> . exectext
    (58) expr -> . equal
    (59) expr -> . dequal
    (60) expr -> . element
    (61) expr -> . mlist
    (62) expr -> . yield
    (63) expr -> . repeat
    (64) expr -> . pass
    (65) expr -> . dict
    (66) expr -> . return
    (67) expr -> . modules
    (68) expr -> . exfiles
    (69) expr -> . input
    (70) expralg -> . term
    (71) expralg -> . abspath
    (72) expralg -> . invrelpath
    (73) expralg -> . relpath
    (74) expralg -> . relpathbase
    (75) expralg -> . func
    (76) expralg -> . block
    (77) expralg -> . list
    (39) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (8) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (84) python -> . PYTHON str
    (85) execfile -> . EXECFILE expr
    (38) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (44) equal -> . WORD EQUALS expr
    (45) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON dblock
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (13) dict -> . LBRACE declares RBRACE
    (14) dict -> . LBRACE RBRACE
    (78) return -> . RETURN expr
    (21) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (20) input -> . INPUT
    (79) term -> . str
    (80) term -> . float
    (81) term -> . int
    (82) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN
    (24) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (94) var -> . WORD
    (91) str -> . STRING
    (89) float -> . FLOAT
    (83) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    AMPERSAND       shift and go to state 36
    PLUSMINUS       shift and go to state 13
    PRINT           shift and go to state 46
    VARIABLES       shift and go to state 22
    PYTHON          shift and go to state 73
    EXECFILE        shift and go to state 28
    BREAK           shift and go to state 88
    CURFILE         shift and go to state 17
    EXECTEXT        shift and go to state 71
    WORD            shift and go to state 92
    MLIST           shift and go to state 9
    YIELD           shift and go to state 5
    REPEAT          shift and go to state 48
    PASS            shift and go to state 19
    LBRACE          shift and go to state 74
    RETURN          shift and go to state 45
    MODULES         shift and go to state 8
    EXFILES         shift and go to state 51
    INPUT           shift and go to state 58
    ABSPATH         shift and go to state 84
    INVRELPATH      shift and go to state 78
    RELPATH         shift and go to state 2
    RELPATHBASE     shift and go to state 43
    LBRACKET        shift and go to state 33
    STRING          shift and go to state 65
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 14

    yield                          shift and go to state 3
    alg1                           shift and go to state 16
    var                            shift and go to state 91
    element                        shift and go to state 7
    dequal                         shift and go to state 75
    parttree                       shift and go to state 10
    python                         shift and go to state 50
    block                          shift and go to state 77
    alg0                           shift and go to state 54
    repeat                         shift and go to state 56
    return                         shift and go to state 34
    break                          shift and go to state 47
    equal                          shift and go to state 30
    mlist                          shift and go to state 60
    execfile                       shift and go to state 61
    invrelpath                     shift and go to state 62
    modules                        shift and go to state 49
    variables                      shift and go to state 23
    int                            shift and go to state 66
    curfile                        shift and go to state 24
    alg3                           shift and go to state 67
    relpathbase                    shift and go to state 68
    alg2                           shift and go to state 25
    exectext                       shift and go to state 26
    abspath                        shift and go to state 69
    relpath                        shift and go to state 70
    input                          shift and go to state 82
    print                          shift and go to state 76
    exfiles                        shift and go to state 79
    varvar                         shift and go to state 31
    float                          shift and go to state 80
    func                           shift and go to state 37
    term                           shift and go to state 53
    str                            shift and go to state 38
    expr                           shift and go to state 159
    pass                           shift and go to state 20
    expralg                        shift and go to state 42
    list                           shift and go to state 87
    dict                           shift and go to state 83

state 135

    (45) dequal -> element EQUALS expr .
    (93) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    COLON           reduce using rule 45 (dequal -> element EQUALS expr .)
    DIVIDER         reduce using rule 45 (dequal -> element EQUALS expr .)
    $end            reduce using rule 45 (dequal -> element EQUALS expr .)
    QUESTION        reduce using rule 45 (dequal -> element EQUALS expr .)
    RBRACE          reduce using rule 45 (dequal -> element EQUALS expr .)
    RBRACKET        reduce using rule 45 (dequal -> element EQUALS expr .)
    COMMA           reduce using rule 45 (dequal -> element EQUALS expr .)
    RPAREN          reduce using rule 45 (dequal -> element EQUALS expr .)
    LBRACKET        shift and go to state 133

  ! LBRACKET        [ reduce using rule 45 (dequal -> element EQUALS expr .) ]


state 136

    (96) mlist -> MLIST COLON dblock .

    COLON           reduce using rule 96 (mlist -> MLIST COLON dblock .)
    LBRACKET        reduce using rule 96 (mlist -> MLIST COLON dblock .)
    DIVIDER         reduce using rule 96 (mlist -> MLIST COLON dblock .)
    $end            reduce using rule 96 (mlist -> MLIST COLON dblock .)
    QUESTION        reduce using rule 96 (mlist -> MLIST COLON dblock .)
    RBRACE          reduce using rule 96 (mlist -> MLIST COLON dblock .)
    RBRACKET        reduce using rule 96 (mlist -> MLIST COLON dblock .)
    COMMA           reduce using rule 96 (mlist -> MLIST COLON dblock .)
    RPAREN          reduce using rule 96 (mlist -> MLIST COLON dblock .)


state 137

    (1) dblock -> block .

    DIVIDER         reduce using rule 1 (dblock -> block .)
    $end            reduce using rule 1 (dblock -> block .)
    RBRACE          reduce using rule 1 (dblock -> block .)
    COLON           reduce using rule 1 (dblock -> block .)
    LBRACKET        reduce using rule 1 (dblock -> block .)
    QUESTION        reduce using rule 1 (dblock -> block .)
    RBRACKET        reduce using rule 1 (dblock -> block .)
    COMMA           reduce using rule 1 (dblock -> block .)
    RPAREN          reduce using rule 1 (dblock -> block .)


state 138

    (2) dblock -> divider . block
    (3) block -> . LBRACE inblock RBRACE

    LBRACE          shift and go to state 99

    block                          shift and go to state 160

state 139

    (111) alg1 -> alg1 DIVMUL alg2 .
    (113) alg2 -> alg2 . DPROD alg3

    DIVMUL          reduce using rule 111 (alg1 -> alg1 DIVMUL alg2 .)
    PLUSMINUS       reduce using rule 111 (alg1 -> alg1 DIVMUL alg2 .)
    QUESTION        reduce using rule 111 (alg1 -> alg1 DIVMUL alg2 .)
    LBRACKET        reduce using rule 111 (alg1 -> alg1 DIVMUL alg2 .)
    COLON           reduce using rule 111 (alg1 -> alg1 DIVMUL alg2 .)
    DIVIDER         reduce using rule 111 (alg1 -> alg1 DIVMUL alg2 .)
    $end            reduce using rule 111 (alg1 -> alg1 DIVMUL alg2 .)
    RBRACE          reduce using rule 111 (alg1 -> alg1 DIVMUL alg2 .)
    RBRACKET        reduce using rule 111 (alg1 -> alg1 DIVMUL alg2 .)
    COMMA           reduce using rule 111 (alg1 -> alg1 DIVMUL alg2 .)
    RPAREN          reduce using rule 111 (alg1 -> alg1 DIVMUL alg2 .)
    DPROD           shift and go to state 107


state 140

    (10) deffunc -> DEFFUNC func COLON . dblock
    (1) dblock -> . block
    (2) dblock -> . divider block
    (3) block -> . LBRACE inblock RBRACE
    (19) divider -> . DIVIDER

    LBRACE          shift and go to state 99
    DIVIDER         shift and go to state 35

    block                          shift and go to state 137
    dblock                         shift and go to state 161
    divider                        shift and go to state 138

state 141

    (113) alg2 -> alg2 DPROD alg3 .

    DPROD           reduce using rule 113 (alg2 -> alg2 DPROD alg3 .)
    DIVMUL          reduce using rule 113 (alg2 -> alg2 DPROD alg3 .)
    PLUSMINUS       reduce using rule 113 (alg2 -> alg2 DPROD alg3 .)
    LBRACKET        reduce using rule 113 (alg2 -> alg2 DPROD alg3 .)
    COMMA           reduce using rule 113 (alg2 -> alg2 DPROD alg3 .)
    RPAREN          reduce using rule 113 (alg2 -> alg2 DPROD alg3 .)
    COLON           reduce using rule 113 (alg2 -> alg2 DPROD alg3 .)
    DIVIDER         reduce using rule 113 (alg2 -> alg2 DPROD alg3 .)
    $end            reduce using rule 113 (alg2 -> alg2 DPROD alg3 .)
    QUESTION        reduce using rule 113 (alg2 -> alg2 DPROD alg3 .)
    RBRACE          reduce using rule 113 (alg2 -> alg2 DPROD alg3 .)
    RBRACKET        reduce using rule 113 (alg2 -> alg2 DPROD alg3 .)


state 142

    (98) varvar -> varvar POINT var .

    POINT           reduce using rule 98 (varvar -> varvar POINT var .)
    COLON           reduce using rule 98 (varvar -> varvar POINT var .)
    LBRACKET        reduce using rule 98 (varvar -> varvar POINT var .)
    DIVIDER         reduce using rule 98 (varvar -> varvar POINT var .)
    $end            reduce using rule 98 (varvar -> varvar POINT var .)
    QUESTION        reduce using rule 98 (varvar -> varvar POINT var .)
    RBRACE          reduce using rule 98 (varvar -> varvar POINT var .)
    RBRACKET        reduce using rule 98 (varvar -> varvar POINT var .)
    COMMA           reduce using rule 98 (varvar -> varvar POINT var .)
    RPAREN          reduce using rule 98 (varvar -> varvar POINT var .)


state 143

    (36) list -> LBRACKET comms RBRACKET .

    LBRACKET        reduce using rule 36 (list -> LBRACKET comms RBRACKET .)
    RBRACKET        reduce using rule 36 (list -> LBRACKET comms RBRACKET .)
    COMMA           reduce using rule 36 (list -> LBRACKET comms RBRACKET .)
    RPAREN          reduce using rule 36 (list -> LBRACKET comms RBRACKET .)
    DPROD           reduce using rule 36 (list -> LBRACKET comms RBRACKET .)
    DIVMUL          reduce using rule 36 (list -> LBRACKET comms RBRACKET .)
    PLUSMINUS       reduce using rule 36 (list -> LBRACKET comms RBRACKET .)
    COLON           reduce using rule 36 (list -> LBRACKET comms RBRACKET .)
    DIVIDER         reduce using rule 36 (list -> LBRACKET comms RBRACKET .)
    $end            reduce using rule 36 (list -> LBRACKET comms RBRACKET .)
    QUESTION        reduce using rule 36 (list -> LBRACKET comms RBRACKET .)
    RBRACE          reduce using rule 36 (list -> LBRACKET comms RBRACKET .)


state 144

    (43) comms -> comms COMMA . expr
    (47) expr -> . expralg
    (48) expr -> . parttree
    (49) expr -> . alg0
    (50) expr -> . print
    (51) expr -> . varvar
    (52) expr -> . variables
    (53) expr -> . python
    (54) expr -> . execfile
    (55) expr -> . break
    (56) expr -> . curfile
    (57) expr -> . exectext
    (58) expr -> . equal
    (59) expr -> . dequal
    (60) expr -> . element
    (61) expr -> . mlist
    (62) expr -> . yield
    (63) expr -> . repeat
    (64) expr -> . pass
    (65) expr -> . dict
    (66) expr -> . return
    (67) expr -> . modules
    (68) expr -> . exfiles
    (69) expr -> . input
    (70) expralg -> . term
    (71) expralg -> . abspath
    (72) expralg -> . invrelpath
    (73) expralg -> . relpath
    (74) expralg -> . relpathbase
    (75) expralg -> . func
    (76) expralg -> . block
    (77) expralg -> . list
    (39) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (8) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (84) python -> . PYTHON str
    (85) execfile -> . EXECFILE expr
    (38) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (44) equal -> . WORD EQUALS expr
    (45) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON dblock
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (13) dict -> . LBRACE declares RBRACE
    (14) dict -> . LBRACE RBRACE
    (78) return -> . RETURN expr
    (21) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (20) input -> . INPUT
    (79) term -> . str
    (80) term -> . float
    (81) term -> . int
    (82) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN
    (24) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (94) var -> . WORD
    (91) str -> . STRING
    (89) float -> . FLOAT
    (83) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    AMPERSAND       shift and go to state 36
    PLUSMINUS       shift and go to state 13
    PRINT           shift and go to state 46
    VARIABLES       shift and go to state 22
    PYTHON          shift and go to state 73
    EXECFILE        shift and go to state 28
    BREAK           shift and go to state 88
    CURFILE         shift and go to state 17
    EXECTEXT        shift and go to state 71
    WORD            shift and go to state 92
    MLIST           shift and go to state 9
    YIELD           shift and go to state 5
    REPEAT          shift and go to state 48
    PASS            shift and go to state 19
    LBRACE          shift and go to state 74
    RETURN          shift and go to state 45
    MODULES         shift and go to state 8
    EXFILES         shift and go to state 51
    INPUT           shift and go to state 58
    ABSPATH         shift and go to state 84
    INVRELPATH      shift and go to state 78
    RELPATH         shift and go to state 2
    RELPATHBASE     shift and go to state 43
    LBRACKET        shift and go to state 33
    STRING          shift and go to state 65
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 14

    yield                          shift and go to state 3
    alg1                           shift and go to state 16
    return                         shift and go to state 34
    element                        shift and go to state 7
    dequal                         shift and go to state 75
    parttree                       shift and go to state 10
    python                         shift and go to state 50
    abspath                        shift and go to state 69
    block                          shift and go to state 77
    alg0                           shift and go to state 54
    repeat                         shift and go to state 56
    var                            shift and go to state 91
    break                          shift and go to state 47
    equal                          shift and go to state 30
    mlist                          shift and go to state 60
    execfile                       shift and go to state 61
    invrelpath                     shift and go to state 62
    modules                        shift and go to state 49
    variables                      shift and go to state 23
    int                            shift and go to state 66
    curfile                        shift and go to state 24
    alg3                           shift and go to state 67
    relpathbase                    shift and go to state 68
    alg2                           shift and go to state 25
    exectext                       shift and go to state 26
    relpath                        shift and go to state 70
    input                          shift and go to state 82
    print                          shift and go to state 76
    exfiles                        shift and go to state 79
    varvar                         shift and go to state 31
    float                          shift and go to state 80
    func                           shift and go to state 37
    term                           shift and go to state 53
    str                            shift and go to state 38
    expr                           shift and go to state 162
    pass                           shift and go to state 20
    dict                           shift and go to state 83
    list                           shift and go to state 87
    expralg                        shift and go to state 42

state 145

    (5) inblock -> inblock divider metaexpr .

    RBRACE          reduce using rule 5 (inblock -> inblock divider metaexpr .)
    DIVIDER         reduce using rule 5 (inblock -> inblock divider metaexpr .)
    $end            reduce using rule 5 (inblock -> inblock divider metaexpr .)


state 146

    (9) module -> MODULE WORD COLON . dblock
    (1) dblock -> . block
    (2) dblock -> . divider block
    (3) block -> . LBRACE inblock RBRACE
    (19) divider -> . DIVIDER

    LBRACE          shift and go to state 99
    DIVIDER         shift and go to state 35

    block                          shift and go to state 137
    dblock                         shift and go to state 163
    divider                        shift and go to state 138

state 147

    (108) alg0 -> alg0 PLUSMINUS alg1 .
    (111) alg1 -> alg1 . DIVMUL alg2

    PLUSMINUS       reduce using rule 108 (alg0 -> alg0 PLUSMINUS alg1 .)
    COLON           reduce using rule 108 (alg0 -> alg0 PLUSMINUS alg1 .)
    LBRACKET        reduce using rule 108 (alg0 -> alg0 PLUSMINUS alg1 .)
    DIVIDER         reduce using rule 108 (alg0 -> alg0 PLUSMINUS alg1 .)
    $end            reduce using rule 108 (alg0 -> alg0 PLUSMINUS alg1 .)
    RBRACKET        reduce using rule 108 (alg0 -> alg0 PLUSMINUS alg1 .)
    COMMA           reduce using rule 108 (alg0 -> alg0 PLUSMINUS alg1 .)
    RPAREN          reduce using rule 108 (alg0 -> alg0 PLUSMINUS alg1 .)
    QUESTION        reduce using rule 108 (alg0 -> alg0 PLUSMINUS alg1 .)
    RBRACE          reduce using rule 108 (alg0 -> alg0 PLUSMINUS alg1 .)
    DIVMUL          shift and go to state 102


state 148

    (22) append -> var APPEND expr .
    (93) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    DIVIDER         reduce using rule 22 (append -> var APPEND expr .)
    $end            reduce using rule 22 (append -> var APPEND expr .)
    COLON           reduce using rule 22 (append -> var APPEND expr .)
    QUESTION        reduce using rule 22 (append -> var APPEND expr .)
    RBRACE          reduce using rule 22 (append -> var APPEND expr .)
    RBRACKET        reduce using rule 22 (append -> var APPEND expr .)
    COMMA           reduce using rule 22 (append -> var APPEND expr .)
    RPAREN          reduce using rule 22 (append -> var APPEND expr .)
    LBRACKET        shift and go to state 133

  ! LBRACKET        [ reduce using rule 22 (append -> var APPEND expr .) ]


state 149

    (12) define -> WORD DEFOP expr .
    (93) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    DIVIDER         reduce using rule 12 (define -> WORD DEFOP expr .)
    $end            reduce using rule 12 (define -> WORD DEFOP expr .)
    RBRACE          reduce using rule 12 (define -> WORD DEFOP expr .)
    COLON           reduce using rule 12 (define -> WORD DEFOP expr .)
    QUESTION        reduce using rule 12 (define -> WORD DEFOP expr .)
    RBRACKET        reduce using rule 12 (define -> WORD DEFOP expr .)
    COMMA           reduce using rule 12 (define -> WORD DEFOP expr .)
    RPAREN          reduce using rule 12 (define -> WORD DEFOP expr .)
    LBRACKET        shift and go to state 133

  ! LBRACKET        [ reduce using rule 12 (define -> WORD DEFOP expr .) ]


state 150

    (23) func -> WORD LPAREN args . RPAREN
    (24) func -> WORD LPAREN args . RPAREN block

    RPAREN          shift and go to state 164


state 151

    (41) args -> comms .
    (43) comms -> comms . COMMA expr

    RPAREN          reduce using rule 41 (args -> comms .)
    COMMA           shift and go to state 144


state 152

    (44) equal -> WORD EQUALS expr .
    (93) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    COLON           reduce using rule 44 (equal -> WORD EQUALS expr .)
    DIVIDER         reduce using rule 44 (equal -> WORD EQUALS expr .)
    $end            reduce using rule 44 (equal -> WORD EQUALS expr .)
    QUESTION        reduce using rule 44 (equal -> WORD EQUALS expr .)
    RBRACE          reduce using rule 44 (equal -> WORD EQUALS expr .)
    RBRACKET        reduce using rule 44 (equal -> WORD EQUALS expr .)
    COMMA           reduce using rule 44 (equal -> WORD EQUALS expr .)
    RPAREN          reduce using rule 44 (equal -> WORD EQUALS expr .)
    LBRACKET        shift and go to state 133

  ! LBRACKET        [ reduce using rule 44 (equal -> WORD EQUALS expr .) ]


state 153

    (11) define -> DEFINE WORD expr .
    (93) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    DIVIDER         reduce using rule 11 (define -> DEFINE WORD expr .)
    $end            reduce using rule 11 (define -> DEFINE WORD expr .)
    RBRACE          reduce using rule 11 (define -> DEFINE WORD expr .)
    COLON           reduce using rule 11 (define -> DEFINE WORD expr .)
    QUESTION        reduce using rule 11 (define -> DEFINE WORD expr .)
    RBRACKET        reduce using rule 11 (define -> DEFINE WORD expr .)
    COMMA           reduce using rule 11 (define -> DEFINE WORD expr .)
    RPAREN          reduce using rule 11 (define -> DEFINE WORD expr .)
    LBRACKET        shift and go to state 133

  ! LBRACKET        [ reduce using rule 11 (define -> DEFINE WORD expr .) ]


state 154

    (16) declares -> declares COMMA . declare
    (17) declare -> . expr COLON expr
    (47) expr -> . expralg
    (48) expr -> . parttree
    (49) expr -> . alg0
    (50) expr -> . print
    (51) expr -> . varvar
    (52) expr -> . variables
    (53) expr -> . python
    (54) expr -> . execfile
    (55) expr -> . break
    (56) expr -> . curfile
    (57) expr -> . exectext
    (58) expr -> . equal
    (59) expr -> . dequal
    (60) expr -> . element
    (61) expr -> . mlist
    (62) expr -> . yield
    (63) expr -> . repeat
    (64) expr -> . pass
    (65) expr -> . dict
    (66) expr -> . return
    (67) expr -> . modules
    (68) expr -> . exfiles
    (69) expr -> . input
    (70) expralg -> . term
    (71) expralg -> . abspath
    (72) expralg -> . invrelpath
    (73) expralg -> . relpath
    (74) expralg -> . relpathbase
    (75) expralg -> . func
    (76) expralg -> . block
    (77) expralg -> . list
    (39) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (8) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (84) python -> . PYTHON str
    (85) execfile -> . EXECFILE expr
    (38) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (44) equal -> . WORD EQUALS expr
    (45) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON dblock
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (13) dict -> . LBRACE declares RBRACE
    (14) dict -> . LBRACE RBRACE
    (78) return -> . RETURN expr
    (21) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (20) input -> . INPUT
    (79) term -> . str
    (80) term -> . float
    (81) term -> . int
    (82) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN
    (24) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (94) var -> . WORD
    (91) str -> . STRING
    (89) float -> . FLOAT
    (83) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    AMPERSAND       shift and go to state 36
    PLUSMINUS       shift and go to state 13
    PRINT           shift and go to state 46
    VARIABLES       shift and go to state 22
    PYTHON          shift and go to state 73
    EXECFILE        shift and go to state 28
    BREAK           shift and go to state 88
    CURFILE         shift and go to state 17
    EXECTEXT        shift and go to state 71
    WORD            shift and go to state 92
    MLIST           shift and go to state 9
    YIELD           shift and go to state 5
    REPEAT          shift and go to state 48
    PASS            shift and go to state 19
    LBRACE          shift and go to state 74
    RETURN          shift and go to state 45
    MODULES         shift and go to state 8
    EXFILES         shift and go to state 51
    INPUT           shift and go to state 58
    ABSPATH         shift and go to state 84
    INVRELPATH      shift and go to state 78
    RELPATH         shift and go to state 2
    RELPATHBASE     shift and go to state 43
    LBRACKET        shift and go to state 33
    STRING          shift and go to state 65
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 14

    yield                          shift and go to state 3
    alg1                           shift and go to state 16
    declare                        shift and go to state 165
    element                        shift and go to state 7
    dequal                         shift and go to state 75
    parttree                       shift and go to state 10
    python                         shift and go to state 50
    block                          shift and go to state 77
    alg0                           shift and go to state 54
    repeat                         shift and go to state 56
    var                            shift and go to state 91
    break                          shift and go to state 47
    equal                          shift and go to state 30
    mlist                          shift and go to state 60
    execfile                       shift and go to state 61
    invrelpath                     shift and go to state 62
    modules                        shift and go to state 49
    variables                      shift and go to state 23
    int                            shift and go to state 66
    curfile                        shift and go to state 24
    alg3                           shift and go to state 67
    relpathbase                    shift and go to state 68
    alg2                           shift and go to state 25
    exectext                       shift and go to state 26
    abspath                        shift and go to state 69
    varvar                         shift and go to state 31
    relpath                        shift and go to state 70
    input                          shift and go to state 82
    print                          shift and go to state 76
    exfiles                        shift and go to state 79
    return                         shift and go to state 34
    float                          shift and go to state 80
    func                           shift and go to state 37
    term                           shift and go to state 53
    str                            shift and go to state 38
    expr                           shift and go to state 166
    pass                           shift and go to state 20
    dict                           shift and go to state 83
    list                           shift and go to state 87
    expralg                        shift and go to state 42

state 155

    (13) dict -> LBRACE declares RBRACE .

    COLON           reduce using rule 13 (dict -> LBRACE declares RBRACE .)
    LBRACKET        reduce using rule 13 (dict -> LBRACE declares RBRACE .)
    DIVIDER         reduce using rule 13 (dict -> LBRACE declares RBRACE .)
    $end            reduce using rule 13 (dict -> LBRACE declares RBRACE .)
    QUESTION        reduce using rule 13 (dict -> LBRACE declares RBRACE .)
    RBRACE          reduce using rule 13 (dict -> LBRACE declares RBRACE .)
    RBRACKET        reduce using rule 13 (dict -> LBRACE declares RBRACE .)
    COMMA           reduce using rule 13 (dict -> LBRACE declares RBRACE .)
    RPAREN          reduce using rule 13 (dict -> LBRACE declares RBRACE .)


state 156

    (3) block -> LBRACE inblock RBRACE .

    COLON           reduce using rule 3 (block -> LBRACE inblock RBRACE .)
    LBRACKET        reduce using rule 3 (block -> LBRACE inblock RBRACE .)
    DIVIDER         reduce using rule 3 (block -> LBRACE inblock RBRACE .)
    $end            reduce using rule 3 (block -> LBRACE inblock RBRACE .)
    DPROD           reduce using rule 3 (block -> LBRACE inblock RBRACE .)
    DIVMUL          reduce using rule 3 (block -> LBRACE inblock RBRACE .)
    PLUSMINUS       reduce using rule 3 (block -> LBRACE inblock RBRACE .)
    QUESTION        reduce using rule 3 (block -> LBRACE inblock RBRACE .)
    RBRACE          reduce using rule 3 (block -> LBRACE inblock RBRACE .)
    RBRACKET        reduce using rule 3 (block -> LBRACE inblock RBRACE .)
    COMMA           reduce using rule 3 (block -> LBRACE inblock RBRACE .)
    RPAREN          reduce using rule 3 (block -> LBRACE inblock RBRACE .)


state 157

    (17) declare -> expr COLON expr .
    (93) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    DIVIDER         reduce using rule 17 (declare -> expr COLON expr .)
    $end            reduce using rule 17 (declare -> expr COLON expr .)
    RBRACE          reduce using rule 17 (declare -> expr COLON expr .)
    COMMA           reduce using rule 17 (declare -> expr COLON expr .)
    COLON           reduce using rule 17 (declare -> expr COLON expr .)
    QUESTION        reduce using rule 17 (declare -> expr COLON expr .)
    RBRACKET        reduce using rule 17 (declare -> expr COLON expr .)
    RPAREN          reduce using rule 17 (declare -> expr COLON expr .)
    LBRACKET        shift and go to state 133

  ! LBRACKET        [ reduce using rule 17 (declare -> expr COLON expr .) ]


state 158

    (93) element -> expr LBRACKET expr . RBRACKET
    (93) element -> expr . LBRACKET expr RBRACKET

    RBRACKET        shift and go to state 167
    LBRACKET        shift and go to state 133


state 159

    (18) if -> IF expr QUESTION expr . COLON expr
    (93) element -> expr . LBRACKET expr RBRACKET

    COLON           shift and go to state 168
    LBRACKET        shift and go to state 133


state 160

    (2) dblock -> divider block .

    DIVIDER         reduce using rule 2 (dblock -> divider block .)
    $end            reduce using rule 2 (dblock -> divider block .)
    RBRACE          reduce using rule 2 (dblock -> divider block .)
    COLON           reduce using rule 2 (dblock -> divider block .)
    LBRACKET        reduce using rule 2 (dblock -> divider block .)
    QUESTION        reduce using rule 2 (dblock -> divider block .)
    RBRACKET        reduce using rule 2 (dblock -> divider block .)
    COMMA           reduce using rule 2 (dblock -> divider block .)
    RPAREN          reduce using rule 2 (dblock -> divider block .)


state 161

    (10) deffunc -> DEFFUNC func COLON dblock .

    DIVIDER         reduce using rule 10 (deffunc -> DEFFUNC func COLON dblock .)
    $end            reduce using rule 10 (deffunc -> DEFFUNC func COLON dblock .)
    RBRACE          reduce using rule 10 (deffunc -> DEFFUNC func COLON dblock .)
    COLON           reduce using rule 10 (deffunc -> DEFFUNC func COLON dblock .)
    LBRACKET        reduce using rule 10 (deffunc -> DEFFUNC func COLON dblock .)
    QUESTION        reduce using rule 10 (deffunc -> DEFFUNC func COLON dblock .)
    RBRACKET        reduce using rule 10 (deffunc -> DEFFUNC func COLON dblock .)
    COMMA           reduce using rule 10 (deffunc -> DEFFUNC func COLON dblock .)
    RPAREN          reduce using rule 10 (deffunc -> DEFFUNC func COLON dblock .)


state 162

    (43) comms -> comms COMMA expr .
    (93) element -> expr . LBRACKET expr RBRACKET

    COMMA           reduce using rule 43 (comms -> comms COMMA expr .)
    RPAREN          reduce using rule 43 (comms -> comms COMMA expr .)
    RBRACKET        reduce using rule 43 (comms -> comms COMMA expr .)
    LBRACKET        shift and go to state 133


state 163

    (9) module -> MODULE WORD COLON dblock .

    RBRACE          reduce using rule 9 (module -> MODULE WORD COLON dblock .)
    DIVIDER         reduce using rule 9 (module -> MODULE WORD COLON dblock .)
    COLON           reduce using rule 9 (module -> MODULE WORD COLON dblock .)
    LBRACKET        reduce using rule 9 (module -> MODULE WORD COLON dblock .)
    $end            reduce using rule 9 (module -> MODULE WORD COLON dblock .)
    QUESTION        reduce using rule 9 (module -> MODULE WORD COLON dblock .)
    RBRACKET        reduce using rule 9 (module -> MODULE WORD COLON dblock .)
    COMMA           reduce using rule 9 (module -> MODULE WORD COLON dblock .)
    RPAREN          reduce using rule 9 (module -> MODULE WORD COLON dblock .)


state 164

    (23) func -> WORD LPAREN args RPAREN .
    (24) func -> WORD LPAREN args RPAREN . block
    (3) block -> . LBRACE inblock RBRACE

    COLON           reduce using rule 23 (func -> WORD LPAREN args RPAREN .)
    LBRACKET        reduce using rule 23 (func -> WORD LPAREN args RPAREN .)
    DIVIDER         reduce using rule 23 (func -> WORD LPAREN args RPAREN .)
    $end            reduce using rule 23 (func -> WORD LPAREN args RPAREN .)
    QUESTION        reduce using rule 23 (func -> WORD LPAREN args RPAREN .)
    RBRACE          reduce using rule 23 (func -> WORD LPAREN args RPAREN .)
    RBRACKET        reduce using rule 23 (func -> WORD LPAREN args RPAREN .)
    COMMA           reduce using rule 23 (func -> WORD LPAREN args RPAREN .)
    RPAREN          reduce using rule 23 (func -> WORD LPAREN args RPAREN .)
    DPROD           reduce using rule 23 (func -> WORD LPAREN args RPAREN .)
    DIVMUL          reduce using rule 23 (func -> WORD LPAREN args RPAREN .)
    PLUSMINUS       reduce using rule 23 (func -> WORD LPAREN args RPAREN .)
    LBRACE          shift and go to state 99

    block                          shift and go to state 169

state 165

    (16) declares -> declares COMMA declare .

    RBRACE          reduce using rule 16 (declares -> declares COMMA declare .)
    COMMA           reduce using rule 16 (declares -> declares COMMA declare .)


state 166

    (17) declare -> expr . COLON expr
    (93) element -> expr . LBRACKET expr RBRACKET

    COLON           shift and go to state 132
    LBRACKET        shift and go to state 133


state 167

    (93) element -> expr LBRACKET expr RBRACKET .

    EQUALS          reduce using rule 93 (element -> expr LBRACKET expr RBRACKET .)
    COLON           reduce using rule 93 (element -> expr LBRACKET expr RBRACKET .)
    LBRACKET        reduce using rule 93 (element -> expr LBRACKET expr RBRACKET .)
    DIVIDER         reduce using rule 93 (element -> expr LBRACKET expr RBRACKET .)
    $end            reduce using rule 93 (element -> expr LBRACKET expr RBRACKET .)
    QUESTION        reduce using rule 93 (element -> expr LBRACKET expr RBRACKET .)
    RBRACE          reduce using rule 93 (element -> expr LBRACKET expr RBRACKET .)
    RBRACKET        reduce using rule 93 (element -> expr LBRACKET expr RBRACKET .)
    COMMA           reduce using rule 93 (element -> expr LBRACKET expr RBRACKET .)
    RPAREN          reduce using rule 93 (element -> expr LBRACKET expr RBRACKET .)


state 168

    (18) if -> IF expr QUESTION expr COLON . expr
    (47) expr -> . expralg
    (48) expr -> . parttree
    (49) expr -> . alg0
    (50) expr -> . print
    (51) expr -> . varvar
    (52) expr -> . variables
    (53) expr -> . python
    (54) expr -> . execfile
    (55) expr -> . break
    (56) expr -> . curfile
    (57) expr -> . exectext
    (58) expr -> . equal
    (59) expr -> . dequal
    (60) expr -> . element
    (61) expr -> . mlist
    (62) expr -> . yield
    (63) expr -> . repeat
    (64) expr -> . pass
    (65) expr -> . dict
    (66) expr -> . return
    (67) expr -> . modules
    (68) expr -> . exfiles
    (69) expr -> . input
    (70) expralg -> . term
    (71) expralg -> . abspath
    (72) expralg -> . invrelpath
    (73) expralg -> . relpath
    (74) expralg -> . relpathbase
    (75) expralg -> . func
    (76) expralg -> . block
    (77) expralg -> . list
    (39) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (8) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (84) python -> . PYTHON str
    (85) execfile -> . EXECFILE expr
    (38) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (44) equal -> . WORD EQUALS expr
    (45) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON dblock
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (13) dict -> . LBRACE declares RBRACE
    (14) dict -> . LBRACE RBRACE
    (78) return -> . RETURN expr
    (21) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (20) input -> . INPUT
    (79) term -> . str
    (80) term -> . float
    (81) term -> . int
    (82) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN
    (24) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (94) var -> . WORD
    (91) str -> . STRING
    (89) float -> . FLOAT
    (83) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    AMPERSAND       shift and go to state 36
    PLUSMINUS       shift and go to state 13
    PRINT           shift and go to state 46
    VARIABLES       shift and go to state 22
    PYTHON          shift and go to state 73
    EXECFILE        shift and go to state 28
    BREAK           shift and go to state 88
    CURFILE         shift and go to state 17
    EXECTEXT        shift and go to state 71
    WORD            shift and go to state 92
    MLIST           shift and go to state 9
    YIELD           shift and go to state 5
    REPEAT          shift and go to state 48
    PASS            shift and go to state 19
    LBRACE          shift and go to state 74
    RETURN          shift and go to state 45
    MODULES         shift and go to state 8
    EXFILES         shift and go to state 51
    INPUT           shift and go to state 58
    ABSPATH         shift and go to state 84
    INVRELPATH      shift and go to state 78
    RELPATH         shift and go to state 2
    RELPATHBASE     shift and go to state 43
    LBRACKET        shift and go to state 33
    STRING          shift and go to state 65
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 14

    yield                          shift and go to state 3
    alg1                           shift and go to state 16
    var                            shift and go to state 91
    element                        shift and go to state 7
    dequal                         shift and go to state 75
    parttree                       shift and go to state 10
    python                         shift and go to state 50
    block                          shift and go to state 77
    alg0                           shift and go to state 54
    repeat                         shift and go to state 56
    return                         shift and go to state 34
    break                          shift and go to state 47
    equal                          shift and go to state 30
    mlist                          shift and go to state 60
    execfile                       shift and go to state 61
    invrelpath                     shift and go to state 62
    modules                        shift and go to state 49
    variables                      shift and go to state 23
    int                            shift and go to state 66
    curfile                        shift and go to state 24
    alg3                           shift and go to state 67
    relpathbase                    shift and go to state 68
    alg2                           shift and go to state 25
    exectext                       shift and go to state 26
    abspath                        shift and go to state 69
    relpath                        shift and go to state 70
    input                          shift and go to state 82
    print                          shift and go to state 76
    exfiles                        shift and go to state 79
    varvar                         shift and go to state 31
    float                          shift and go to state 80
    func                           shift and go to state 37
    term                           shift and go to state 53
    str                            shift and go to state 38
    expr                           shift and go to state 170
    pass                           shift and go to state 20
    expralg                        shift and go to state 42
    list                           shift and go to state 87
    dict                           shift and go to state 83

state 169

    (24) func -> WORD LPAREN args RPAREN block .

    COLON           reduce using rule 24 (func -> WORD LPAREN args RPAREN block .)
    LBRACKET        reduce using rule 24 (func -> WORD LPAREN args RPAREN block .)
    DIVIDER         reduce using rule 24 (func -> WORD LPAREN args RPAREN block .)
    $end            reduce using rule 24 (func -> WORD LPAREN args RPAREN block .)
    QUESTION        reduce using rule 24 (func -> WORD LPAREN args RPAREN block .)
    RBRACE          reduce using rule 24 (func -> WORD LPAREN args RPAREN block .)
    RBRACKET        reduce using rule 24 (func -> WORD LPAREN args RPAREN block .)
    COMMA           reduce using rule 24 (func -> WORD LPAREN args RPAREN block .)
    RPAREN          reduce using rule 24 (func -> WORD LPAREN args RPAREN block .)
    DPROD           reduce using rule 24 (func -> WORD LPAREN args RPAREN block .)
    DIVMUL          reduce using rule 24 (func -> WORD LPAREN args RPAREN block .)
    PLUSMINUS       reduce using rule 24 (func -> WORD LPAREN args RPAREN block .)


state 170

    (18) if -> IF expr QUESTION expr COLON expr .
    (93) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    RBRACE          reduce using rule 18 (if -> IF expr QUESTION expr COLON expr .)
    DIVIDER         reduce using rule 18 (if -> IF expr QUESTION expr COLON expr .)
    $end            reduce using rule 18 (if -> IF expr QUESTION expr COLON expr .)
    COLON           reduce using rule 18 (if -> IF expr QUESTION expr COLON expr .)
    QUESTION        reduce using rule 18 (if -> IF expr QUESTION expr COLON expr .)
    RBRACKET        reduce using rule 18 (if -> IF expr QUESTION expr COLON expr .)
    COMMA           reduce using rule 18 (if -> IF expr QUESTION expr COLON expr .)
    RPAREN          reduce using rule 18 (if -> IF expr QUESTION expr COLON expr .)
    LBRACKET        shift and go to state 133

  ! LBRACKET        [ reduce using rule 18 (if -> IF expr QUESTION expr COLON expr .) ]

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COLON in state 81 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 81 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 96 resolved as shift
WARNING: shift/reduce conflict for DIVIDER in state 103 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 106 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 108 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 115 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 116 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 120 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 124 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 135 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 148 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 149 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 152 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 153 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 157 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 170 resolved as shift
WARNING: reduce/reduce conflict in state 42 resolved using rule (expr -> expralg)
WARNING: rejected rule (alg3 -> expralg) in state 42
WARNING: reduce/reduce conflict in state 57 resolved using rule (term -> var)
WARNING: rejected rule (varvar -> var) in state 57
WARNING: reduce/reduce conflict in state 91 resolved using rule (term -> var)
WARNING: rejected rule (varvar -> var) in state 91
WARNING: reduce/reduce conflict in state 128 resolved using rule (declares -> declare)
WARNING: rejected rule (metaexpr -> declare) in state 128
