Created by PLY version 3.7 (http://www.dabeaz.com/ply)

Unused terminals:

    SUPERWORD
    APLICATION
    HEXNUMBER
    IN
    WRONGSTRING
    SEMI
    DOUBLECOLON
    MPROD
    BINNUMBER
    OR

Grammar

Rule 0     S' -> inblock
Rule 1     dblock -> block
Rule 2     dblock -> divider block
Rule 3     block -> LBRACE inblock RBRACE
Rule 4     inblock -> <empty>
Rule 5     inblock -> metaexpr
Rule 6     inblock -> inblock divider metaexpr
Rule 7     inblock -> divider inblock
Rule 8     inblock -> inblock divider
Rule 9     print -> PRINT expr
Rule 10    module -> MODULE WORD COLON dblock
Rule 11    deffunc -> DEFFUNC func COLON dblock
Rule 12    define -> DEFINE WORD expr
Rule 13    declare -> WORD COLON expr
Rule 14    if -> IF expr QUESTION expr COLON expr
Rule 15    divider -> DIVIDER
Rule 16    input -> INPUT
Rule 17    modules -> MODULES
Rule 18    append -> var APPEND expr
Rule 19    func -> WORD LPAREN args RPAREN
Rule 20    func -> WORD LPAREN args RPAREN block
Rule 21    metaexpr -> expr
Rule 22    metaexpr -> deffunc
Rule 23    metaexpr -> module
Rule 24    metaexpr -> declare
Rule 25    metaexpr -> append
Rule 26    metaexpr -> define
Rule 27    metaexpr -> execscan
Rule 28    metaexpr -> application
Rule 29    metaexpr -> compile
Rule 30    metaexpr -> downlevel
Rule 31    metaexpr -> if
Rule 32    list -> LBRACKET comms RBRACKET
Rule 33    list -> LBRACKET RBRACKET
Rule 34    break -> BREAK
Rule 35    parttree -> AMPERSAND metaexpr
Rule 36    args -> <empty>
Rule 37    args -> comms
Rule 38    comms -> expr
Rule 39    comms -> comms COMMA expr
Rule 40    equal -> WORD EQUALS expr
Rule 41    application -> APPLICATION var
Rule 42    expr -> expralg
Rule 43    expr -> parttree
Rule 44    expr -> alg0
Rule 45    expr -> print
Rule 46    expr -> varvar
Rule 47    expr -> variables
Rule 48    expr -> python
Rule 49    expr -> execfile
Rule 50    expr -> break
Rule 51    expr -> curfile
Rule 52    expr -> exectext
Rule 53    expr -> equal
Rule 54    expr -> element
Rule 55    expr -> mlist
Rule 56    expr -> yield
Rule 57    expr -> repeat
Rule 58    expr -> return
Rule 59    expr -> modules
Rule 60    expr -> exfiles
Rule 61    expr -> input
Rule 62    expralg -> term
Rule 63    expralg -> abspath
Rule 64    expralg -> invrelpath
Rule 65    expralg -> relpath
Rule 66    expralg -> relpathbase
Rule 67    expralg -> func
Rule 68    expralg -> block
Rule 69    expralg -> list
Rule 70    return -> RETURN expr
Rule 71    term -> str
Rule 72    term -> float
Rule 73    term -> int
Rule 74    term -> var
Rule 75    int -> NUMBER
Rule 76    python -> PYTHON str
Rule 77    execfile -> EXECFILE expr
Rule 78    execscan -> EXECSCAN expr
Rule 79    exectext -> EXECTEXT expr
Rule 80    downlevel -> DOWNLEVEL expr
Rule 81    float -> FLOAT
Rule 82    yield -> YIELD
Rule 83    str -> STRING
Rule 84    repeat -> REPEAT
Rule 85    element -> expr LBRACKET expr RBRACKET
Rule 86    var -> WORD
Rule 87    variables -> VARIABLES expr
Rule 88    mlist -> MLIST COLON dblock
Rule 89    varvar -> var
Rule 90    varvar -> varvar POINT var
Rule 91    curfile -> CURFILE
Rule 92    relpath -> RELPATH
Rule 93    exfiles -> EXFILES
Rule 94    relpathbase -> RELPATHBASE
Rule 95    compile -> COMPILE
Rule 96    invrelpath -> INVRELPATH
Rule 97    abspath -> ABSPATH
Rule 98    alg0 -> alg1
Rule 99    alg0 -> alg0 PLUSMINUS alg1
Rule 100   alg0 -> PLUSMINUS alg1
Rule 101   alg1 -> alg2
Rule 102   alg1 -> alg1 DIVMUL alg2
Rule 103   alg2 -> alg3
Rule 104   alg2 -> alg2 DPROD alg3
Rule 105   alg3 -> expralg

Terminals, with rules where they appear

ABSPATH              : 97
AMPERSAND            : 35
APLICATION           : 
APPEND               : 18
APPLICATION          : 41
BINNUMBER            : 
BREAK                : 34
COLON                : 10 11 13 14 88
COMMA                : 39
COMPILE              : 95
CURFILE              : 91
DEFFUNC              : 11
DEFINE               : 12
DIVIDER              : 15
DIVMUL               : 102
DOUBLECOLON          : 
DOWNLEVEL            : 80
DPROD                : 104
EQUALS               : 40
EXECFILE             : 77
EXECSCAN             : 78
EXECTEXT             : 79
EXFILES              : 93
FLOAT                : 81
HEXNUMBER            : 
IF                   : 14
IN                   : 
INPUT                : 16
INVRELPATH           : 96
LBRACE               : 3
LBRACKET             : 32 33 85
LPAREN               : 19 20
MLIST                : 88
MODULE               : 10
MODULES              : 17
MPROD                : 
NUMBER               : 75
OR                   : 
PLUSMINUS            : 99 100
POINT                : 90
PRINT                : 9
PYTHON               : 76
QUESTION             : 14
RBRACE               : 3
RBRACKET             : 32 33 85
RELPATH              : 92
RELPATHBASE          : 94
REPEAT               : 84
RETURN               : 70
RPAREN               : 19 20
SEMI                 : 
STRING               : 83
SUPERWORD            : 
VARIABLES            : 87
WORD                 : 10 12 13 19 20 40 86
WRONGSTRING          : 
YIELD                : 82
error                : 

Nonterminals, with rules where they appear

abspath              : 63
alg0                 : 44 99
alg1                 : 98 99 100 102
alg2                 : 101 102 104
alg3                 : 103 104
append               : 25
application          : 28
args                 : 19 20
block                : 1 2 20 68
break                : 50
comms                : 32 37 39
compile              : 29
curfile              : 51
dblock               : 10 11 88
declare              : 24
deffunc              : 22
define               : 26
divider              : 2 6 7 8
downlevel            : 30
element              : 54
equal                : 53
execfile             : 49
execscan             : 27
exectext             : 52
exfiles              : 60
expr                 : 9 12 13 14 14 14 18 21 38 39 40 70 77 78 79 80 85 85 87
expralg              : 42 105
float                : 72
func                 : 11 67
if                   : 31
inblock              : 3 6 7 8 0
input                : 61
int                  : 73
invrelpath           : 64
list                 : 69
metaexpr             : 5 6 35
mlist                : 55
module               : 23
modules              : 59
parttree             : 43
print                : 45
python               : 48
relpath              : 65
relpathbase          : 66
repeat               : 57
return               : 58
str                  : 71 76
term                 : 62
var                  : 18 41 74 89 90
variables            : 47
varvar               : 46 90
yield                : 56

Parsing method: LALR

state 0

    (0) S' -> . inblock
    (4) inblock -> .
    (5) inblock -> . metaexpr
    (6) inblock -> . inblock divider metaexpr
    (7) inblock -> . divider inblock
    (8) inblock -> . inblock divider
    (21) metaexpr -> . expr
    (22) metaexpr -> . deffunc
    (23) metaexpr -> . module
    (24) metaexpr -> . declare
    (25) metaexpr -> . append
    (26) metaexpr -> . define
    (27) metaexpr -> . execscan
    (28) metaexpr -> . application
    (29) metaexpr -> . compile
    (30) metaexpr -> . downlevel
    (31) metaexpr -> . if
    (15) divider -> . DIVIDER
    (42) expr -> . expralg
    (43) expr -> . parttree
    (44) expr -> . alg0
    (45) expr -> . print
    (46) expr -> . varvar
    (47) expr -> . variables
    (48) expr -> . python
    (49) expr -> . execfile
    (50) expr -> . break
    (51) expr -> . curfile
    (52) expr -> . exectext
    (53) expr -> . equal
    (54) expr -> . element
    (55) expr -> . mlist
    (56) expr -> . yield
    (57) expr -> . repeat
    (58) expr -> . return
    (59) expr -> . modules
    (60) expr -> . exfiles
    (61) expr -> . input
    (11) deffunc -> . DEFFUNC func COLON dblock
    (10) module -> . MODULE WORD COLON dblock
    (13) declare -> . WORD COLON expr
    (18) append -> . var APPEND expr
    (12) define -> . DEFINE WORD expr
    (78) execscan -> . EXECSCAN expr
    (41) application -> . APPLICATION var
    (95) compile -> . COMPILE
    (80) downlevel -> . DOWNLEVEL expr
    (14) if -> . IF expr QUESTION expr COLON expr
    (62) expralg -> . term
    (63) expralg -> . abspath
    (64) expralg -> . invrelpath
    (65) expralg -> . relpath
    (66) expralg -> . relpathbase
    (67) expralg -> . func
    (68) expralg -> . block
    (69) expralg -> . list
    (35) parttree -> . AMPERSAND metaexpr
    (98) alg0 -> . alg1
    (99) alg0 -> . alg0 PLUSMINUS alg1
    (100) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (89) varvar -> . var
    (90) varvar -> . varvar POINT var
    (87) variables -> . VARIABLES expr
    (76) python -> . PYTHON str
    (77) execfile -> . EXECFILE expr
    (34) break -> . BREAK
    (91) curfile -> . CURFILE
    (79) exectext -> . EXECTEXT expr
    (40) equal -> . WORD EQUALS expr
    (85) element -> . expr LBRACKET expr RBRACKET
    (88) mlist -> . MLIST COLON dblock
    (82) yield -> . YIELD
    (84) repeat -> . REPEAT
    (70) return -> . RETURN expr
    (17) modules -> . MODULES
    (93) exfiles -> . EXFILES
    (16) input -> . INPUT
    (86) var -> . WORD
    (71) term -> . str
    (72) term -> . float
    (73) term -> . int
    (74) term -> . var
    (97) abspath -> . ABSPATH
    (96) invrelpath -> . INVRELPATH
    (92) relpath -> . RELPATH
    (94) relpathbase -> . RELPATHBASE
    (19) func -> . WORD LPAREN args RPAREN
    (20) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (32) list -> . LBRACKET comms RBRACKET
    (33) list -> . LBRACKET RBRACKET
    (101) alg1 -> . alg2
    (102) alg1 -> . alg1 DIVMUL alg2
    (83) str -> . STRING
    (81) float -> . FLOAT
    (75) int -> . NUMBER
    (103) alg2 -> . alg3
    (104) alg2 -> . alg2 DPROD alg3
    (105) alg3 -> . expralg

  ! shift/reduce conflict for DIVIDER resolved as shift
    $end            reduce using rule 4 (inblock -> .)
    DIVIDER         shift and go to state 72
    DEFFUNC         shift and go to state 74
    MODULE          shift and go to state 6
    WORD            shift and go to state 70
    DEFINE          shift and go to state 58
    EXECSCAN        shift and go to state 10
    APPLICATION     shift and go to state 55
    COMPILE         shift and go to state 34
    DOWNLEVEL       shift and go to state 30
    IF              shift and go to state 25
    AMPERSAND       shift and go to state 19
    PLUSMINUS       shift and go to state 8
    PRINT           shift and go to state 51
    VARIABLES       shift and go to state 1
    PYTHON          shift and go to state 2
    EXECFILE        shift and go to state 27
    BREAK           shift and go to state 44
    CURFILE         shift and go to state 45
    EXECTEXT        shift and go to state 66
    MLIST           shift and go to state 75
    YIELD           shift and go to state 16
    REPEAT          shift and go to state 65
    RETURN          shift and go to state 71
    MODULES         shift and go to state 78
    EXFILES         shift and go to state 60
    INPUT           shift and go to state 22
    ABSPATH         shift and go to state 41
    INVRELPATH      shift and go to state 57
    RELPATH         shift and go to state 28
    RELPATHBASE     shift and go to state 15
    LBRACE          shift and go to state 14
    LBRACKET        shift and go to state 53
    STRING          shift and go to state 12
    FLOAT           shift and go to state 54
    NUMBER          shift and go to state 67

  ! DIVIDER         [ reduce using rule 4 (inblock -> .) ]

    list                           shift and go to state 35
    relpathbase                    shift and go to state 36
    exfiles                        shift and go to state 5
    str                            shift and go to state 37
    break                          shift and go to state 38
    if                             shift and go to state 59
    application                    shift and go to state 3
    expr                           shift and go to state 40
    invrelpath                     shift and go to state 4
    term                           shift and go to state 42
    relpath                        shift and go to state 43
    python                         shift and go to state 46
    metaexpr                       shift and go to state 47
    execfile                       shift and go to state 48
    append                         shift and go to state 49
    yield                          shift and go to state 11
    float                          shift and go to state 50
    repeat                         shift and go to state 26
    mlist                          shift and go to state 61
    expralg                        shift and go to state 52
    compile                        shift and go to state 9
    inblock                        shift and go to state 13
    print                          shift and go to state 39
    execscan                       shift and go to state 82
    block                          shift and go to state 69
    equal                          shift and go to state 17
    declare                        shift and go to state 64
    module                         shift and go to state 62
    return                         shift and go to state 63
    deffunc                        shift and go to state 20
    exectext                       shift and go to state 21
    parttree                       shift and go to state 68
    curfile                        shift and go to state 23
    modules                        shift and go to state 24
    input                          shift and go to state 7
    varvar                         shift and go to state 76
    alg0                           shift and go to state 29
    var                            shift and go to state 77
    variables                      shift and go to state 18
    divider                        shift and go to state 31
    alg1                           shift and go to state 32
    alg2                           shift and go to state 79
    alg3                           shift and go to state 33
    int                            shift and go to state 56
    abspath                        shift and go to state 81
    define                         shift and go to state 73
    func                           shift and go to state 83
    element                        shift and go to state 84
    downlevel                      shift and go to state 80

state 1

    (87) variables -> VARIABLES . expr
    (42) expr -> . expralg
    (43) expr -> . parttree
    (44) expr -> . alg0
    (45) expr -> . print
    (46) expr -> . varvar
    (47) expr -> . variables
    (48) expr -> . python
    (49) expr -> . execfile
    (50) expr -> . break
    (51) expr -> . curfile
    (52) expr -> . exectext
    (53) expr -> . equal
    (54) expr -> . element
    (55) expr -> . mlist
    (56) expr -> . yield
    (57) expr -> . repeat
    (58) expr -> . return
    (59) expr -> . modules
    (60) expr -> . exfiles
    (61) expr -> . input
    (62) expralg -> . term
    (63) expralg -> . abspath
    (64) expralg -> . invrelpath
    (65) expralg -> . relpath
    (66) expralg -> . relpathbase
    (67) expralg -> . func
    (68) expralg -> . block
    (69) expralg -> . list
    (35) parttree -> . AMPERSAND metaexpr
    (98) alg0 -> . alg1
    (99) alg0 -> . alg0 PLUSMINUS alg1
    (100) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (89) varvar -> . var
    (90) varvar -> . varvar POINT var
    (87) variables -> . VARIABLES expr
    (76) python -> . PYTHON str
    (77) execfile -> . EXECFILE expr
    (34) break -> . BREAK
    (91) curfile -> . CURFILE
    (79) exectext -> . EXECTEXT expr
    (40) equal -> . WORD EQUALS expr
    (85) element -> . expr LBRACKET expr RBRACKET
    (88) mlist -> . MLIST COLON dblock
    (82) yield -> . YIELD
    (84) repeat -> . REPEAT
    (70) return -> . RETURN expr
    (17) modules -> . MODULES
    (93) exfiles -> . EXFILES
    (16) input -> . INPUT
    (71) term -> . str
    (72) term -> . float
    (73) term -> . int
    (74) term -> . var
    (97) abspath -> . ABSPATH
    (96) invrelpath -> . INVRELPATH
    (92) relpath -> . RELPATH
    (94) relpathbase -> . RELPATHBASE
    (19) func -> . WORD LPAREN args RPAREN
    (20) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (32) list -> . LBRACKET comms RBRACKET
    (33) list -> . LBRACKET RBRACKET
    (101) alg1 -> . alg2
    (102) alg1 -> . alg1 DIVMUL alg2
    (86) var -> . WORD
    (83) str -> . STRING
    (81) float -> . FLOAT
    (75) int -> . NUMBER
    (103) alg2 -> . alg3
    (104) alg2 -> . alg2 DPROD alg3
    (105) alg3 -> . expralg

    AMPERSAND       shift and go to state 19
    PLUSMINUS       shift and go to state 8
    PRINT           shift and go to state 51
    VARIABLES       shift and go to state 1
    PYTHON          shift and go to state 2
    EXECFILE        shift and go to state 27
    BREAK           shift and go to state 44
    CURFILE         shift and go to state 45
    EXECTEXT        shift and go to state 66
    WORD            shift and go to state 86
    MLIST           shift and go to state 75
    YIELD           shift and go to state 16
    REPEAT          shift and go to state 65
    RETURN          shift and go to state 71
    MODULES         shift and go to state 78
    EXFILES         shift and go to state 60
    INPUT           shift and go to state 22
    ABSPATH         shift and go to state 41
    INVRELPATH      shift and go to state 57
    RELPATH         shift and go to state 28
    RELPATHBASE     shift and go to state 15
    LBRACE          shift and go to state 14
    LBRACKET        shift and go to state 53
    STRING          shift and go to state 12
    FLOAT           shift and go to state 54
    NUMBER          shift and go to state 67

    list                           shift and go to state 35
    yield                          shift and go to state 11
    relpathbase                    shift and go to state 36
    relpath                        shift and go to state 43
    exectext                       shift and go to state 21
    break                          shift and go to state 38
    parttree                       shift and go to state 68
    block                          shift and go to state 69
    curfile                        shift and go to state 23
    expr                           shift and go to state 85
    invrelpath                     shift and go to state 4
    modules                        shift and go to state 24
    input                          shift and go to state 7
    term                           shift and go to state 42
    exfiles                        shift and go to state 5
    execfile                       shift and go to state 48
    python                         shift and go to state 46
    varvar                         shift and go to state 76
    alg0                           shift and go to state 29
    str                            shift and go to state 37
    var                            shift and go to state 87
    variables                      shift and go to state 18
    expralg                        shift and go to state 52
    element                        shift and go to state 84
    alg1                           shift and go to state 32
    alg2                           shift and go to state 79
    abspath                        shift and go to state 81
    alg3                           shift and go to state 33
    int                            shift and go to state 56
    print                          shift and go to state 39
    repeat                         shift and go to state 26
    mlist                          shift and go to state 61
    equal                          shift and go to state 17
    func                           shift and go to state 83
    float                          shift and go to state 50
    return                         shift and go to state 63

state 2

    (76) python -> PYTHON . str
    (83) str -> . STRING

    STRING          shift and go to state 12

    str                            shift and go to state 88

state 3

    (28) metaexpr -> application .

    RBRACE          reduce using rule 28 (metaexpr -> application .)
    DIVIDER         reduce using rule 28 (metaexpr -> application .)
    $end            reduce using rule 28 (metaexpr -> application .)
    LBRACKET        reduce using rule 28 (metaexpr -> application .)
    QUESTION        reduce using rule 28 (metaexpr -> application .)
    RBRACKET        reduce using rule 28 (metaexpr -> application .)
    COMMA           reduce using rule 28 (metaexpr -> application .)
    RPAREN          reduce using rule 28 (metaexpr -> application .)
    COLON           reduce using rule 28 (metaexpr -> application .)


state 4

    (64) expralg -> invrelpath .

    LBRACKET        reduce using rule 64 (expralg -> invrelpath .)
    DIVIDER         reduce using rule 64 (expralg -> invrelpath .)
    $end            reduce using rule 64 (expralg -> invrelpath .)
    RBRACE          reduce using rule 64 (expralg -> invrelpath .)
    QUESTION        reduce using rule 64 (expralg -> invrelpath .)
    RBRACKET        reduce using rule 64 (expralg -> invrelpath .)
    COMMA           reduce using rule 64 (expralg -> invrelpath .)
    RPAREN          reduce using rule 64 (expralg -> invrelpath .)
    COLON           reduce using rule 64 (expralg -> invrelpath .)
    DPROD           reduce using rule 64 (expralg -> invrelpath .)
    DIVMUL          reduce using rule 64 (expralg -> invrelpath .)
    PLUSMINUS       reduce using rule 64 (expralg -> invrelpath .)


state 5

    (60) expr -> exfiles .

    LBRACKET        reduce using rule 60 (expr -> exfiles .)
    DIVIDER         reduce using rule 60 (expr -> exfiles .)
    $end            reduce using rule 60 (expr -> exfiles .)
    RBRACE          reduce using rule 60 (expr -> exfiles .)
    QUESTION        reduce using rule 60 (expr -> exfiles .)
    RBRACKET        reduce using rule 60 (expr -> exfiles .)
    COMMA           reduce using rule 60 (expr -> exfiles .)
    RPAREN          reduce using rule 60 (expr -> exfiles .)
    COLON           reduce using rule 60 (expr -> exfiles .)


state 6

    (10) module -> MODULE . WORD COLON dblock

    WORD            shift and go to state 89


state 7

    (61) expr -> input .

    LBRACKET        reduce using rule 61 (expr -> input .)
    DIVIDER         reduce using rule 61 (expr -> input .)
    $end            reduce using rule 61 (expr -> input .)
    RBRACE          reduce using rule 61 (expr -> input .)
    QUESTION        reduce using rule 61 (expr -> input .)
    RBRACKET        reduce using rule 61 (expr -> input .)
    COMMA           reduce using rule 61 (expr -> input .)
    RPAREN          reduce using rule 61 (expr -> input .)
    COLON           reduce using rule 61 (expr -> input .)


state 8

    (100) alg0 -> PLUSMINUS . alg1
    (101) alg1 -> . alg2
    (102) alg1 -> . alg1 DIVMUL alg2
    (103) alg2 -> . alg3
    (104) alg2 -> . alg2 DPROD alg3
    (105) alg3 -> . expralg
    (62) expralg -> . term
    (63) expralg -> . abspath
    (64) expralg -> . invrelpath
    (65) expralg -> . relpath
    (66) expralg -> . relpathbase
    (67) expralg -> . func
    (68) expralg -> . block
    (69) expralg -> . list
    (71) term -> . str
    (72) term -> . float
    (73) term -> . int
    (74) term -> . var
    (97) abspath -> . ABSPATH
    (96) invrelpath -> . INVRELPATH
    (92) relpath -> . RELPATH
    (94) relpathbase -> . RELPATHBASE
    (19) func -> . WORD LPAREN args RPAREN
    (20) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (32) list -> . LBRACKET comms RBRACKET
    (33) list -> . LBRACKET RBRACKET
    (83) str -> . STRING
    (81) float -> . FLOAT
    (75) int -> . NUMBER
    (86) var -> . WORD

    ABSPATH         shift and go to state 41
    INVRELPATH      shift and go to state 57
    RELPATH         shift and go to state 28
    RELPATHBASE     shift and go to state 15
    WORD            shift and go to state 91
    LBRACE          shift and go to state 14
    LBRACKET        shift and go to state 53
    STRING          shift and go to state 12
    FLOAT           shift and go to state 54
    NUMBER          shift and go to state 67

    list                           shift and go to state 35
    float                          shift and go to state 50
    relpathbase                    shift and go to state 36
    str                            shift and go to state 37
    var                            shift and go to state 90
    expralg                        shift and go to state 92
    block                          shift and go to state 69
    alg1                           shift and go to state 93
    alg2                           shift and go to state 79
    alg3                           shift and go to state 33
    invrelpath                     shift and go to state 4
    int                            shift and go to state 56
    abspath                        shift and go to state 81
    term                           shift and go to state 42
    relpath                        shift and go to state 43
    func                           shift and go to state 83

state 9

    (29) metaexpr -> compile .

    RBRACE          reduce using rule 29 (metaexpr -> compile .)
    DIVIDER         reduce using rule 29 (metaexpr -> compile .)
    $end            reduce using rule 29 (metaexpr -> compile .)
    LBRACKET        reduce using rule 29 (metaexpr -> compile .)
    QUESTION        reduce using rule 29 (metaexpr -> compile .)
    RBRACKET        reduce using rule 29 (metaexpr -> compile .)
    COMMA           reduce using rule 29 (metaexpr -> compile .)
    RPAREN          reduce using rule 29 (metaexpr -> compile .)
    COLON           reduce using rule 29 (metaexpr -> compile .)


state 10

    (78) execscan -> EXECSCAN . expr
    (42) expr -> . expralg
    (43) expr -> . parttree
    (44) expr -> . alg0
    (45) expr -> . print
    (46) expr -> . varvar
    (47) expr -> . variables
    (48) expr -> . python
    (49) expr -> . execfile
    (50) expr -> . break
    (51) expr -> . curfile
    (52) expr -> . exectext
    (53) expr -> . equal
    (54) expr -> . element
    (55) expr -> . mlist
    (56) expr -> . yield
    (57) expr -> . repeat
    (58) expr -> . return
    (59) expr -> . modules
    (60) expr -> . exfiles
    (61) expr -> . input
    (62) expralg -> . term
    (63) expralg -> . abspath
    (64) expralg -> . invrelpath
    (65) expralg -> . relpath
    (66) expralg -> . relpathbase
    (67) expralg -> . func
    (68) expralg -> . block
    (69) expralg -> . list
    (35) parttree -> . AMPERSAND metaexpr
    (98) alg0 -> . alg1
    (99) alg0 -> . alg0 PLUSMINUS alg1
    (100) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (89) varvar -> . var
    (90) varvar -> . varvar POINT var
    (87) variables -> . VARIABLES expr
    (76) python -> . PYTHON str
    (77) execfile -> . EXECFILE expr
    (34) break -> . BREAK
    (91) curfile -> . CURFILE
    (79) exectext -> . EXECTEXT expr
    (40) equal -> . WORD EQUALS expr
    (85) element -> . expr LBRACKET expr RBRACKET
    (88) mlist -> . MLIST COLON dblock
    (82) yield -> . YIELD
    (84) repeat -> . REPEAT
    (70) return -> . RETURN expr
    (17) modules -> . MODULES
    (93) exfiles -> . EXFILES
    (16) input -> . INPUT
    (71) term -> . str
    (72) term -> . float
    (73) term -> . int
    (74) term -> . var
    (97) abspath -> . ABSPATH
    (96) invrelpath -> . INVRELPATH
    (92) relpath -> . RELPATH
    (94) relpathbase -> . RELPATHBASE
    (19) func -> . WORD LPAREN args RPAREN
    (20) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (32) list -> . LBRACKET comms RBRACKET
    (33) list -> . LBRACKET RBRACKET
    (101) alg1 -> . alg2
    (102) alg1 -> . alg1 DIVMUL alg2
    (86) var -> . WORD
    (83) str -> . STRING
    (81) float -> . FLOAT
    (75) int -> . NUMBER
    (103) alg2 -> . alg3
    (104) alg2 -> . alg2 DPROD alg3
    (105) alg3 -> . expralg

    AMPERSAND       shift and go to state 19
    PLUSMINUS       shift and go to state 8
    PRINT           shift and go to state 51
    VARIABLES       shift and go to state 1
    PYTHON          shift and go to state 2
    EXECFILE        shift and go to state 27
    BREAK           shift and go to state 44
    CURFILE         shift and go to state 45
    EXECTEXT        shift and go to state 66
    WORD            shift and go to state 86
    MLIST           shift and go to state 75
    YIELD           shift and go to state 16
    REPEAT          shift and go to state 65
    RETURN          shift and go to state 71
    MODULES         shift and go to state 78
    EXFILES         shift and go to state 60
    INPUT           shift and go to state 22
    ABSPATH         shift and go to state 41
    INVRELPATH      shift and go to state 57
    RELPATH         shift and go to state 28
    RELPATHBASE     shift and go to state 15
    LBRACE          shift and go to state 14
    LBRACKET        shift and go to state 53
    STRING          shift and go to state 12
    FLOAT           shift and go to state 54
    NUMBER          shift and go to state 67

    list                           shift and go to state 35
    yield                          shift and go to state 11
    relpathbase                    shift and go to state 36
    relpath                        shift and go to state 43
    exectext                       shift and go to state 21
    break                          shift and go to state 38
    parttree                       shift and go to state 68
    block                          shift and go to state 69
    curfile                        shift and go to state 23
    expr                           shift and go to state 94
    invrelpath                     shift and go to state 4
    modules                        shift and go to state 24
    input                          shift and go to state 7
    term                           shift and go to state 42
    exfiles                        shift and go to state 5
    execfile                       shift and go to state 48
    python                         shift and go to state 46
    varvar                         shift and go to state 76
    alg0                           shift and go to state 29
    str                            shift and go to state 37
    var                            shift and go to state 87
    variables                      shift and go to state 18
    expralg                        shift and go to state 52
    element                        shift and go to state 84
    alg1                           shift and go to state 32
    alg2                           shift and go to state 79
    abspath                        shift and go to state 81
    alg3                           shift and go to state 33
    int                            shift and go to state 56
    print                          shift and go to state 39
    repeat                         shift and go to state 26
    mlist                          shift and go to state 61
    equal                          shift and go to state 17
    func                           shift and go to state 83
    float                          shift and go to state 50
    return                         shift and go to state 63

state 11

    (56) expr -> yield .

    LBRACKET        reduce using rule 56 (expr -> yield .)
    DIVIDER         reduce using rule 56 (expr -> yield .)
    $end            reduce using rule 56 (expr -> yield .)
    RBRACE          reduce using rule 56 (expr -> yield .)
    QUESTION        reduce using rule 56 (expr -> yield .)
    RBRACKET        reduce using rule 56 (expr -> yield .)
    COMMA           reduce using rule 56 (expr -> yield .)
    RPAREN          reduce using rule 56 (expr -> yield .)
    COLON           reduce using rule 56 (expr -> yield .)


state 12

    (83) str -> STRING .

    LBRACKET        reduce using rule 83 (str -> STRING .)
    DIVIDER         reduce using rule 83 (str -> STRING .)
    $end            reduce using rule 83 (str -> STRING .)
    RBRACE          reduce using rule 83 (str -> STRING .)
    QUESTION        reduce using rule 83 (str -> STRING .)
    RBRACKET        reduce using rule 83 (str -> STRING .)
    COMMA           reduce using rule 83 (str -> STRING .)
    RPAREN          reduce using rule 83 (str -> STRING .)
    COLON           reduce using rule 83 (str -> STRING .)
    DPROD           reduce using rule 83 (str -> STRING .)
    DIVMUL          reduce using rule 83 (str -> STRING .)
    PLUSMINUS       reduce using rule 83 (str -> STRING .)


state 13

    (0) S' -> inblock .
    (6) inblock -> inblock . divider metaexpr
    (8) inblock -> inblock . divider
    (15) divider -> . DIVIDER

    DIVIDER         shift and go to state 72

    divider                        shift and go to state 95

state 14

    (3) block -> LBRACE . inblock RBRACE
    (4) inblock -> .
    (5) inblock -> . metaexpr
    (6) inblock -> . inblock divider metaexpr
    (7) inblock -> . divider inblock
    (8) inblock -> . inblock divider
    (21) metaexpr -> . expr
    (22) metaexpr -> . deffunc
    (23) metaexpr -> . module
    (24) metaexpr -> . declare
    (25) metaexpr -> . append
    (26) metaexpr -> . define
    (27) metaexpr -> . execscan
    (28) metaexpr -> . application
    (29) metaexpr -> . compile
    (30) metaexpr -> . downlevel
    (31) metaexpr -> . if
    (15) divider -> . DIVIDER
    (42) expr -> . expralg
    (43) expr -> . parttree
    (44) expr -> . alg0
    (45) expr -> . print
    (46) expr -> . varvar
    (47) expr -> . variables
    (48) expr -> . python
    (49) expr -> . execfile
    (50) expr -> . break
    (51) expr -> . curfile
    (52) expr -> . exectext
    (53) expr -> . equal
    (54) expr -> . element
    (55) expr -> . mlist
    (56) expr -> . yield
    (57) expr -> . repeat
    (58) expr -> . return
    (59) expr -> . modules
    (60) expr -> . exfiles
    (61) expr -> . input
    (11) deffunc -> . DEFFUNC func COLON dblock
    (10) module -> . MODULE WORD COLON dblock
    (13) declare -> . WORD COLON expr
    (18) append -> . var APPEND expr
    (12) define -> . DEFINE WORD expr
    (78) execscan -> . EXECSCAN expr
    (41) application -> . APPLICATION var
    (95) compile -> . COMPILE
    (80) downlevel -> . DOWNLEVEL expr
    (14) if -> . IF expr QUESTION expr COLON expr
    (62) expralg -> . term
    (63) expralg -> . abspath
    (64) expralg -> . invrelpath
    (65) expralg -> . relpath
    (66) expralg -> . relpathbase
    (67) expralg -> . func
    (68) expralg -> . block
    (69) expralg -> . list
    (35) parttree -> . AMPERSAND metaexpr
    (98) alg0 -> . alg1
    (99) alg0 -> . alg0 PLUSMINUS alg1
    (100) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (89) varvar -> . var
    (90) varvar -> . varvar POINT var
    (87) variables -> . VARIABLES expr
    (76) python -> . PYTHON str
    (77) execfile -> . EXECFILE expr
    (34) break -> . BREAK
    (91) curfile -> . CURFILE
    (79) exectext -> . EXECTEXT expr
    (40) equal -> . WORD EQUALS expr
    (85) element -> . expr LBRACKET expr RBRACKET
    (88) mlist -> . MLIST COLON dblock
    (82) yield -> . YIELD
    (84) repeat -> . REPEAT
    (70) return -> . RETURN expr
    (17) modules -> . MODULES
    (93) exfiles -> . EXFILES
    (16) input -> . INPUT
    (86) var -> . WORD
    (71) term -> . str
    (72) term -> . float
    (73) term -> . int
    (74) term -> . var
    (97) abspath -> . ABSPATH
    (96) invrelpath -> . INVRELPATH
    (92) relpath -> . RELPATH
    (94) relpathbase -> . RELPATHBASE
    (19) func -> . WORD LPAREN args RPAREN
    (20) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (32) list -> . LBRACKET comms RBRACKET
    (33) list -> . LBRACKET RBRACKET
    (101) alg1 -> . alg2
    (102) alg1 -> . alg1 DIVMUL alg2
    (83) str -> . STRING
    (81) float -> . FLOAT
    (75) int -> . NUMBER
    (103) alg2 -> . alg3
    (104) alg2 -> . alg2 DPROD alg3
    (105) alg3 -> . expralg

  ! shift/reduce conflict for DIVIDER resolved as shift
    RBRACE          reduce using rule 4 (inblock -> .)
    DIVIDER         shift and go to state 72
    DEFFUNC         shift and go to state 74
    MODULE          shift and go to state 6
    WORD            shift and go to state 70
    DEFINE          shift and go to state 58
    EXECSCAN        shift and go to state 10
    APPLICATION     shift and go to state 55
    COMPILE         shift and go to state 34
    DOWNLEVEL       shift and go to state 30
    IF              shift and go to state 25
    AMPERSAND       shift and go to state 19
    PLUSMINUS       shift and go to state 8
    PRINT           shift and go to state 51
    VARIABLES       shift and go to state 1
    PYTHON          shift and go to state 2
    EXECFILE        shift and go to state 27
    BREAK           shift and go to state 44
    CURFILE         shift and go to state 45
    EXECTEXT        shift and go to state 66
    MLIST           shift and go to state 75
    YIELD           shift and go to state 16
    REPEAT          shift and go to state 65
    RETURN          shift and go to state 71
    MODULES         shift and go to state 78
    EXFILES         shift and go to state 60
    INPUT           shift and go to state 22
    ABSPATH         shift and go to state 41
    INVRELPATH      shift and go to state 57
    RELPATH         shift and go to state 28
    RELPATHBASE     shift and go to state 15
    LBRACE          shift and go to state 14
    LBRACKET        shift and go to state 53
    STRING          shift and go to state 12
    FLOAT           shift and go to state 54
    NUMBER          shift and go to state 67

  ! DIVIDER         [ reduce using rule 4 (inblock -> .) ]

    list                           shift and go to state 35
    relpathbase                    shift and go to state 36
    exfiles                        shift and go to state 5
    str                            shift and go to state 37
    break                          shift and go to state 38
    if                             shift and go to state 59
    application                    shift and go to state 3
    expr                           shift and go to state 40
    invrelpath                     shift and go to state 4
    term                           shift and go to state 42
    relpath                        shift and go to state 43
    python                         shift and go to state 46
    metaexpr                       shift and go to state 47
    execfile                       shift and go to state 48
    append                         shift and go to state 49
    yield                          shift and go to state 11
    float                          shift and go to state 50
    repeat                         shift and go to state 26
    mlist                          shift and go to state 61
    expralg                        shift and go to state 52
    compile                        shift and go to state 9
    inblock                        shift and go to state 96
    print                          shift and go to state 39
    execscan                       shift and go to state 82
    block                          shift and go to state 69
    equal                          shift and go to state 17
    declare                        shift and go to state 64
    module                         shift and go to state 62
    return                         shift and go to state 63
    deffunc                        shift and go to state 20
    exectext                       shift and go to state 21
    parttree                       shift and go to state 68
    curfile                        shift and go to state 23
    modules                        shift and go to state 24
    input                          shift and go to state 7
    varvar                         shift and go to state 76
    alg0                           shift and go to state 29
    var                            shift and go to state 77
    variables                      shift and go to state 18
    divider                        shift and go to state 31
    alg1                           shift and go to state 32
    alg2                           shift and go to state 79
    alg3                           shift and go to state 33
    int                            shift and go to state 56
    abspath                        shift and go to state 81
    define                         shift and go to state 73
    func                           shift and go to state 83
    element                        shift and go to state 84
    downlevel                      shift and go to state 80

state 15

    (94) relpathbase -> RELPATHBASE .

    RBRACKET        reduce using rule 94 (relpathbase -> RELPATHBASE .)
    LBRACKET        reduce using rule 94 (relpathbase -> RELPATHBASE .)
    DPROD           reduce using rule 94 (relpathbase -> RELPATHBASE .)
    DIVMUL          reduce using rule 94 (relpathbase -> RELPATHBASE .)
    PLUSMINUS       reduce using rule 94 (relpathbase -> RELPATHBASE .)
    DIVIDER         reduce using rule 94 (relpathbase -> RELPATHBASE .)
    $end            reduce using rule 94 (relpathbase -> RELPATHBASE .)
    RBRACE          reduce using rule 94 (relpathbase -> RELPATHBASE .)
    QUESTION        reduce using rule 94 (relpathbase -> RELPATHBASE .)
    COMMA           reduce using rule 94 (relpathbase -> RELPATHBASE .)
    RPAREN          reduce using rule 94 (relpathbase -> RELPATHBASE .)
    COLON           reduce using rule 94 (relpathbase -> RELPATHBASE .)


state 16

    (82) yield -> YIELD .

    LBRACKET        reduce using rule 82 (yield -> YIELD .)
    DIVIDER         reduce using rule 82 (yield -> YIELD .)
    $end            reduce using rule 82 (yield -> YIELD .)
    RBRACE          reduce using rule 82 (yield -> YIELD .)
    QUESTION        reduce using rule 82 (yield -> YIELD .)
    RBRACKET        reduce using rule 82 (yield -> YIELD .)
    COMMA           reduce using rule 82 (yield -> YIELD .)
    RPAREN          reduce using rule 82 (yield -> YIELD .)
    COLON           reduce using rule 82 (yield -> YIELD .)


state 17

    (53) expr -> equal .

    LBRACKET        reduce using rule 53 (expr -> equal .)
    DIVIDER         reduce using rule 53 (expr -> equal .)
    $end            reduce using rule 53 (expr -> equal .)
    RBRACE          reduce using rule 53 (expr -> equal .)
    QUESTION        reduce using rule 53 (expr -> equal .)
    RBRACKET        reduce using rule 53 (expr -> equal .)
    COMMA           reduce using rule 53 (expr -> equal .)
    RPAREN          reduce using rule 53 (expr -> equal .)
    COLON           reduce using rule 53 (expr -> equal .)


state 18

    (47) expr -> variables .

    LBRACKET        reduce using rule 47 (expr -> variables .)
    DIVIDER         reduce using rule 47 (expr -> variables .)
    $end            reduce using rule 47 (expr -> variables .)
    RBRACE          reduce using rule 47 (expr -> variables .)
    QUESTION        reduce using rule 47 (expr -> variables .)
    RBRACKET        reduce using rule 47 (expr -> variables .)
    COMMA           reduce using rule 47 (expr -> variables .)
    RPAREN          reduce using rule 47 (expr -> variables .)
    COLON           reduce using rule 47 (expr -> variables .)


state 19

    (35) parttree -> AMPERSAND . metaexpr
    (21) metaexpr -> . expr
    (22) metaexpr -> . deffunc
    (23) metaexpr -> . module
    (24) metaexpr -> . declare
    (25) metaexpr -> . append
    (26) metaexpr -> . define
    (27) metaexpr -> . execscan
    (28) metaexpr -> . application
    (29) metaexpr -> . compile
    (30) metaexpr -> . downlevel
    (31) metaexpr -> . if
    (42) expr -> . expralg
    (43) expr -> . parttree
    (44) expr -> . alg0
    (45) expr -> . print
    (46) expr -> . varvar
    (47) expr -> . variables
    (48) expr -> . python
    (49) expr -> . execfile
    (50) expr -> . break
    (51) expr -> . curfile
    (52) expr -> . exectext
    (53) expr -> . equal
    (54) expr -> . element
    (55) expr -> . mlist
    (56) expr -> . yield
    (57) expr -> . repeat
    (58) expr -> . return
    (59) expr -> . modules
    (60) expr -> . exfiles
    (61) expr -> . input
    (11) deffunc -> . DEFFUNC func COLON dblock
    (10) module -> . MODULE WORD COLON dblock
    (13) declare -> . WORD COLON expr
    (18) append -> . var APPEND expr
    (12) define -> . DEFINE WORD expr
    (78) execscan -> . EXECSCAN expr
    (41) application -> . APPLICATION var
    (95) compile -> . COMPILE
    (80) downlevel -> . DOWNLEVEL expr
    (14) if -> . IF expr QUESTION expr COLON expr
    (62) expralg -> . term
    (63) expralg -> . abspath
    (64) expralg -> . invrelpath
    (65) expralg -> . relpath
    (66) expralg -> . relpathbase
    (67) expralg -> . func
    (68) expralg -> . block
    (69) expralg -> . list
    (35) parttree -> . AMPERSAND metaexpr
    (98) alg0 -> . alg1
    (99) alg0 -> . alg0 PLUSMINUS alg1
    (100) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (89) varvar -> . var
    (90) varvar -> . varvar POINT var
    (87) variables -> . VARIABLES expr
    (76) python -> . PYTHON str
    (77) execfile -> . EXECFILE expr
    (34) break -> . BREAK
    (91) curfile -> . CURFILE
    (79) exectext -> . EXECTEXT expr
    (40) equal -> . WORD EQUALS expr
    (85) element -> . expr LBRACKET expr RBRACKET
    (88) mlist -> . MLIST COLON dblock
    (82) yield -> . YIELD
    (84) repeat -> . REPEAT
    (70) return -> . RETURN expr
    (17) modules -> . MODULES
    (93) exfiles -> . EXFILES
    (16) input -> . INPUT
    (86) var -> . WORD
    (71) term -> . str
    (72) term -> . float
    (73) term -> . int
    (74) term -> . var
    (97) abspath -> . ABSPATH
    (96) invrelpath -> . INVRELPATH
    (92) relpath -> . RELPATH
    (94) relpathbase -> . RELPATHBASE
    (19) func -> . WORD LPAREN args RPAREN
    (20) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (32) list -> . LBRACKET comms RBRACKET
    (33) list -> . LBRACKET RBRACKET
    (101) alg1 -> . alg2
    (102) alg1 -> . alg1 DIVMUL alg2
    (83) str -> . STRING
    (81) float -> . FLOAT
    (75) int -> . NUMBER
    (103) alg2 -> . alg3
    (104) alg2 -> . alg2 DPROD alg3
    (105) alg3 -> . expralg

    DEFFUNC         shift and go to state 74
    MODULE          shift and go to state 6
    WORD            shift and go to state 70
    DEFINE          shift and go to state 58
    EXECSCAN        shift and go to state 10
    APPLICATION     shift and go to state 55
    COMPILE         shift and go to state 34
    DOWNLEVEL       shift and go to state 30
    IF              shift and go to state 25
    AMPERSAND       shift and go to state 19
    PLUSMINUS       shift and go to state 8
    PRINT           shift and go to state 51
    VARIABLES       shift and go to state 1
    PYTHON          shift and go to state 2
    EXECFILE        shift and go to state 27
    BREAK           shift and go to state 44
    CURFILE         shift and go to state 45
    EXECTEXT        shift and go to state 66
    MLIST           shift and go to state 75
    YIELD           shift and go to state 16
    REPEAT          shift and go to state 65
    RETURN          shift and go to state 71
    MODULES         shift and go to state 78
    EXFILES         shift and go to state 60
    INPUT           shift and go to state 22
    ABSPATH         shift and go to state 41
    INVRELPATH      shift and go to state 57
    RELPATH         shift and go to state 28
    RELPATHBASE     shift and go to state 15
    LBRACE          shift and go to state 14
    LBRACKET        shift and go to state 53
    STRING          shift and go to state 12
    FLOAT           shift and go to state 54
    NUMBER          shift and go to state 67

    list                           shift and go to state 35
    relpathbase                    shift and go to state 36
    exfiles                        shift and go to state 5
    str                            shift and go to state 37
    break                          shift and go to state 38
    if                             shift and go to state 59
    application                    shift and go to state 3
    expr                           shift and go to state 40
    invrelpath                     shift and go to state 4
    term                           shift and go to state 42
    relpath                        shift and go to state 43
    execfile                       shift and go to state 48
    metaexpr                       shift and go to state 97
    python                         shift and go to state 46
    append                         shift and go to state 49
    yield                          shift and go to state 11
    float                          shift and go to state 50
    repeat                         shift and go to state 26
    mlist                          shift and go to state 61
    expralg                        shift and go to state 52
    compile                        shift and go to state 9
    print                          shift and go to state 39
    execscan                       shift and go to state 82
    block                          shift and go to state 69
    equal                          shift and go to state 17
    declare                        shift and go to state 64
    module                         shift and go to state 62
    return                         shift and go to state 63
    deffunc                        shift and go to state 20
    exectext                       shift and go to state 21
    parttree                       shift and go to state 68
    curfile                        shift and go to state 23
    modules                        shift and go to state 24
    input                          shift and go to state 7
    varvar                         shift and go to state 76
    alg0                           shift and go to state 29
    var                            shift and go to state 77
    variables                      shift and go to state 18
    alg1                           shift and go to state 32
    alg2                           shift and go to state 79
    alg3                           shift and go to state 33
    int                            shift and go to state 56
    abspath                        shift and go to state 81
    define                         shift and go to state 73
    func                           shift and go to state 83
    element                        shift and go to state 84
    downlevel                      shift and go to state 80

state 20

    (22) metaexpr -> deffunc .

    RBRACE          reduce using rule 22 (metaexpr -> deffunc .)
    DIVIDER         reduce using rule 22 (metaexpr -> deffunc .)
    $end            reduce using rule 22 (metaexpr -> deffunc .)
    LBRACKET        reduce using rule 22 (metaexpr -> deffunc .)
    QUESTION        reduce using rule 22 (metaexpr -> deffunc .)
    RBRACKET        reduce using rule 22 (metaexpr -> deffunc .)
    COMMA           reduce using rule 22 (metaexpr -> deffunc .)
    RPAREN          reduce using rule 22 (metaexpr -> deffunc .)
    COLON           reduce using rule 22 (metaexpr -> deffunc .)


state 21

    (52) expr -> exectext .

    LBRACKET        reduce using rule 52 (expr -> exectext .)
    DIVIDER         reduce using rule 52 (expr -> exectext .)
    $end            reduce using rule 52 (expr -> exectext .)
    RBRACE          reduce using rule 52 (expr -> exectext .)
    QUESTION        reduce using rule 52 (expr -> exectext .)
    RBRACKET        reduce using rule 52 (expr -> exectext .)
    COMMA           reduce using rule 52 (expr -> exectext .)
    RPAREN          reduce using rule 52 (expr -> exectext .)
    COLON           reduce using rule 52 (expr -> exectext .)


state 22

    (16) input -> INPUT .

    LBRACKET        reduce using rule 16 (input -> INPUT .)
    DIVIDER         reduce using rule 16 (input -> INPUT .)
    $end            reduce using rule 16 (input -> INPUT .)
    RBRACE          reduce using rule 16 (input -> INPUT .)
    QUESTION        reduce using rule 16 (input -> INPUT .)
    RBRACKET        reduce using rule 16 (input -> INPUT .)
    COMMA           reduce using rule 16 (input -> INPUT .)
    RPAREN          reduce using rule 16 (input -> INPUT .)
    COLON           reduce using rule 16 (input -> INPUT .)


state 23

    (51) expr -> curfile .

    LBRACKET        reduce using rule 51 (expr -> curfile .)
    DIVIDER         reduce using rule 51 (expr -> curfile .)
    $end            reduce using rule 51 (expr -> curfile .)
    RBRACE          reduce using rule 51 (expr -> curfile .)
    QUESTION        reduce using rule 51 (expr -> curfile .)
    RBRACKET        reduce using rule 51 (expr -> curfile .)
    COMMA           reduce using rule 51 (expr -> curfile .)
    RPAREN          reduce using rule 51 (expr -> curfile .)
    COLON           reduce using rule 51 (expr -> curfile .)


state 24

    (59) expr -> modules .

    LBRACKET        reduce using rule 59 (expr -> modules .)
    DIVIDER         reduce using rule 59 (expr -> modules .)
    $end            reduce using rule 59 (expr -> modules .)
    RBRACE          reduce using rule 59 (expr -> modules .)
    QUESTION        reduce using rule 59 (expr -> modules .)
    RBRACKET        reduce using rule 59 (expr -> modules .)
    COMMA           reduce using rule 59 (expr -> modules .)
    RPAREN          reduce using rule 59 (expr -> modules .)
    COLON           reduce using rule 59 (expr -> modules .)


state 25

    (14) if -> IF . expr QUESTION expr COLON expr
    (42) expr -> . expralg
    (43) expr -> . parttree
    (44) expr -> . alg0
    (45) expr -> . print
    (46) expr -> . varvar
    (47) expr -> . variables
    (48) expr -> . python
    (49) expr -> . execfile
    (50) expr -> . break
    (51) expr -> . curfile
    (52) expr -> . exectext
    (53) expr -> . equal
    (54) expr -> . element
    (55) expr -> . mlist
    (56) expr -> . yield
    (57) expr -> . repeat
    (58) expr -> . return
    (59) expr -> . modules
    (60) expr -> . exfiles
    (61) expr -> . input
    (62) expralg -> . term
    (63) expralg -> . abspath
    (64) expralg -> . invrelpath
    (65) expralg -> . relpath
    (66) expralg -> . relpathbase
    (67) expralg -> . func
    (68) expralg -> . block
    (69) expralg -> . list
    (35) parttree -> . AMPERSAND metaexpr
    (98) alg0 -> . alg1
    (99) alg0 -> . alg0 PLUSMINUS alg1
    (100) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (89) varvar -> . var
    (90) varvar -> . varvar POINT var
    (87) variables -> . VARIABLES expr
    (76) python -> . PYTHON str
    (77) execfile -> . EXECFILE expr
    (34) break -> . BREAK
    (91) curfile -> . CURFILE
    (79) exectext -> . EXECTEXT expr
    (40) equal -> . WORD EQUALS expr
    (85) element -> . expr LBRACKET expr RBRACKET
    (88) mlist -> . MLIST COLON dblock
    (82) yield -> . YIELD
    (84) repeat -> . REPEAT
    (70) return -> . RETURN expr
    (17) modules -> . MODULES
    (93) exfiles -> . EXFILES
    (16) input -> . INPUT
    (71) term -> . str
    (72) term -> . float
    (73) term -> . int
    (74) term -> . var
    (97) abspath -> . ABSPATH
    (96) invrelpath -> . INVRELPATH
    (92) relpath -> . RELPATH
    (94) relpathbase -> . RELPATHBASE
    (19) func -> . WORD LPAREN args RPAREN
    (20) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (32) list -> . LBRACKET comms RBRACKET
    (33) list -> . LBRACKET RBRACKET
    (101) alg1 -> . alg2
    (102) alg1 -> . alg1 DIVMUL alg2
    (86) var -> . WORD
    (83) str -> . STRING
    (81) float -> . FLOAT
    (75) int -> . NUMBER
    (103) alg2 -> . alg3
    (104) alg2 -> . alg2 DPROD alg3
    (105) alg3 -> . expralg

    AMPERSAND       shift and go to state 19
    PLUSMINUS       shift and go to state 8
    PRINT           shift and go to state 51
    VARIABLES       shift and go to state 1
    PYTHON          shift and go to state 2
    EXECFILE        shift and go to state 27
    BREAK           shift and go to state 44
    CURFILE         shift and go to state 45
    EXECTEXT        shift and go to state 66
    WORD            shift and go to state 86
    MLIST           shift and go to state 75
    YIELD           shift and go to state 16
    REPEAT          shift and go to state 65
    RETURN          shift and go to state 71
    MODULES         shift and go to state 78
    EXFILES         shift and go to state 60
    INPUT           shift and go to state 22
    ABSPATH         shift and go to state 41
    INVRELPATH      shift and go to state 57
    RELPATH         shift and go to state 28
    RELPATHBASE     shift and go to state 15
    LBRACE          shift and go to state 14
    LBRACKET        shift and go to state 53
    STRING          shift and go to state 12
    FLOAT           shift and go to state 54
    NUMBER          shift and go to state 67

    list                           shift and go to state 35
    yield                          shift and go to state 11
    relpathbase                    shift and go to state 36
    relpath                        shift and go to state 43
    exectext                       shift and go to state 21
    break                          shift and go to state 38
    parttree                       shift and go to state 68
    block                          shift and go to state 69
    curfile                        shift and go to state 23
    expr                           shift and go to state 98
    invrelpath                     shift and go to state 4
    modules                        shift and go to state 24
    input                          shift and go to state 7
    term                           shift and go to state 42
    exfiles                        shift and go to state 5
    execfile                       shift and go to state 48
    python                         shift and go to state 46
    varvar                         shift and go to state 76
    alg0                           shift and go to state 29
    str                            shift and go to state 37
    var                            shift and go to state 87
    variables                      shift and go to state 18
    expralg                        shift and go to state 52
    element                        shift and go to state 84
    alg1                           shift and go to state 32
    alg2                           shift and go to state 79
    abspath                        shift and go to state 81
    alg3                           shift and go to state 33
    int                            shift and go to state 56
    print                          shift and go to state 39
    repeat                         shift and go to state 26
    mlist                          shift and go to state 61
    equal                          shift and go to state 17
    func                           shift and go to state 83
    float                          shift and go to state 50
    return                         shift and go to state 63

state 26

    (57) expr -> repeat .

    LBRACKET        reduce using rule 57 (expr -> repeat .)
    DIVIDER         reduce using rule 57 (expr -> repeat .)
    $end            reduce using rule 57 (expr -> repeat .)
    RBRACE          reduce using rule 57 (expr -> repeat .)
    QUESTION        reduce using rule 57 (expr -> repeat .)
    RBRACKET        reduce using rule 57 (expr -> repeat .)
    COMMA           reduce using rule 57 (expr -> repeat .)
    RPAREN          reduce using rule 57 (expr -> repeat .)
    COLON           reduce using rule 57 (expr -> repeat .)


state 27

    (77) execfile -> EXECFILE . expr
    (42) expr -> . expralg
    (43) expr -> . parttree
    (44) expr -> . alg0
    (45) expr -> . print
    (46) expr -> . varvar
    (47) expr -> . variables
    (48) expr -> . python
    (49) expr -> . execfile
    (50) expr -> . break
    (51) expr -> . curfile
    (52) expr -> . exectext
    (53) expr -> . equal
    (54) expr -> . element
    (55) expr -> . mlist
    (56) expr -> . yield
    (57) expr -> . repeat
    (58) expr -> . return
    (59) expr -> . modules
    (60) expr -> . exfiles
    (61) expr -> . input
    (62) expralg -> . term
    (63) expralg -> . abspath
    (64) expralg -> . invrelpath
    (65) expralg -> . relpath
    (66) expralg -> . relpathbase
    (67) expralg -> . func
    (68) expralg -> . block
    (69) expralg -> . list
    (35) parttree -> . AMPERSAND metaexpr
    (98) alg0 -> . alg1
    (99) alg0 -> . alg0 PLUSMINUS alg1
    (100) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (89) varvar -> . var
    (90) varvar -> . varvar POINT var
    (87) variables -> . VARIABLES expr
    (76) python -> . PYTHON str
    (77) execfile -> . EXECFILE expr
    (34) break -> . BREAK
    (91) curfile -> . CURFILE
    (79) exectext -> . EXECTEXT expr
    (40) equal -> . WORD EQUALS expr
    (85) element -> . expr LBRACKET expr RBRACKET
    (88) mlist -> . MLIST COLON dblock
    (82) yield -> . YIELD
    (84) repeat -> . REPEAT
    (70) return -> . RETURN expr
    (17) modules -> . MODULES
    (93) exfiles -> . EXFILES
    (16) input -> . INPUT
    (71) term -> . str
    (72) term -> . float
    (73) term -> . int
    (74) term -> . var
    (97) abspath -> . ABSPATH
    (96) invrelpath -> . INVRELPATH
    (92) relpath -> . RELPATH
    (94) relpathbase -> . RELPATHBASE
    (19) func -> . WORD LPAREN args RPAREN
    (20) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (32) list -> . LBRACKET comms RBRACKET
    (33) list -> . LBRACKET RBRACKET
    (101) alg1 -> . alg2
    (102) alg1 -> . alg1 DIVMUL alg2
    (86) var -> . WORD
    (83) str -> . STRING
    (81) float -> . FLOAT
    (75) int -> . NUMBER
    (103) alg2 -> . alg3
    (104) alg2 -> . alg2 DPROD alg3
    (105) alg3 -> . expralg

    AMPERSAND       shift and go to state 19
    PLUSMINUS       shift and go to state 8
    PRINT           shift and go to state 51
    VARIABLES       shift and go to state 1
    PYTHON          shift and go to state 2
    EXECFILE        shift and go to state 27
    BREAK           shift and go to state 44
    CURFILE         shift and go to state 45
    EXECTEXT        shift and go to state 66
    WORD            shift and go to state 86
    MLIST           shift and go to state 75
    YIELD           shift and go to state 16
    REPEAT          shift and go to state 65
    RETURN          shift and go to state 71
    MODULES         shift and go to state 78
    EXFILES         shift and go to state 60
    INPUT           shift and go to state 22
    ABSPATH         shift and go to state 41
    INVRELPATH      shift and go to state 57
    RELPATH         shift and go to state 28
    RELPATHBASE     shift and go to state 15
    LBRACE          shift and go to state 14
    LBRACKET        shift and go to state 53
    STRING          shift and go to state 12
    FLOAT           shift and go to state 54
    NUMBER          shift and go to state 67

    list                           shift and go to state 35
    yield                          shift and go to state 11
    relpathbase                    shift and go to state 36
    relpath                        shift and go to state 43
    exectext                       shift and go to state 21
    break                          shift and go to state 38
    parttree                       shift and go to state 68
    block                          shift and go to state 69
    curfile                        shift and go to state 23
    expr                           shift and go to state 99
    invrelpath                     shift and go to state 4
    modules                        shift and go to state 24
    input                          shift and go to state 7
    term                           shift and go to state 42
    exfiles                        shift and go to state 5
    execfile                       shift and go to state 48
    python                         shift and go to state 46
    varvar                         shift and go to state 76
    alg0                           shift and go to state 29
    str                            shift and go to state 37
    var                            shift and go to state 87
    variables                      shift and go to state 18
    expralg                        shift and go to state 52
    element                        shift and go to state 84
    alg1                           shift and go to state 32
    alg2                           shift and go to state 79
    abspath                        shift and go to state 81
    alg3                           shift and go to state 33
    int                            shift and go to state 56
    print                          shift and go to state 39
    repeat                         shift and go to state 26
    mlist                          shift and go to state 61
    equal                          shift and go to state 17
    func                           shift and go to state 83
    float                          shift and go to state 50
    return                         shift and go to state 63

state 28

    (92) relpath -> RELPATH .

    DPROD           reduce using rule 92 (relpath -> RELPATH .)
    DIVMUL          reduce using rule 92 (relpath -> RELPATH .)
    PLUSMINUS       reduce using rule 92 (relpath -> RELPATH .)
    LBRACKET        reduce using rule 92 (relpath -> RELPATH .)
    DIVIDER         reduce using rule 92 (relpath -> RELPATH .)
    $end            reduce using rule 92 (relpath -> RELPATH .)
    RBRACE          reduce using rule 92 (relpath -> RELPATH .)
    QUESTION        reduce using rule 92 (relpath -> RELPATH .)
    RBRACKET        reduce using rule 92 (relpath -> RELPATH .)
    COMMA           reduce using rule 92 (relpath -> RELPATH .)
    RPAREN          reduce using rule 92 (relpath -> RELPATH .)
    COLON           reduce using rule 92 (relpath -> RELPATH .)


state 29

    (44) expr -> alg0 .
    (99) alg0 -> alg0 . PLUSMINUS alg1

    LBRACKET        reduce using rule 44 (expr -> alg0 .)
    DIVIDER         reduce using rule 44 (expr -> alg0 .)
    $end            reduce using rule 44 (expr -> alg0 .)
    RBRACE          reduce using rule 44 (expr -> alg0 .)
    QUESTION        reduce using rule 44 (expr -> alg0 .)
    RBRACKET        reduce using rule 44 (expr -> alg0 .)
    COMMA           reduce using rule 44 (expr -> alg0 .)
    RPAREN          reduce using rule 44 (expr -> alg0 .)
    COLON           reduce using rule 44 (expr -> alg0 .)
    PLUSMINUS       shift and go to state 100


state 30

    (80) downlevel -> DOWNLEVEL . expr
    (42) expr -> . expralg
    (43) expr -> . parttree
    (44) expr -> . alg0
    (45) expr -> . print
    (46) expr -> . varvar
    (47) expr -> . variables
    (48) expr -> . python
    (49) expr -> . execfile
    (50) expr -> . break
    (51) expr -> . curfile
    (52) expr -> . exectext
    (53) expr -> . equal
    (54) expr -> . element
    (55) expr -> . mlist
    (56) expr -> . yield
    (57) expr -> . repeat
    (58) expr -> . return
    (59) expr -> . modules
    (60) expr -> . exfiles
    (61) expr -> . input
    (62) expralg -> . term
    (63) expralg -> . abspath
    (64) expralg -> . invrelpath
    (65) expralg -> . relpath
    (66) expralg -> . relpathbase
    (67) expralg -> . func
    (68) expralg -> . block
    (69) expralg -> . list
    (35) parttree -> . AMPERSAND metaexpr
    (98) alg0 -> . alg1
    (99) alg0 -> . alg0 PLUSMINUS alg1
    (100) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (89) varvar -> . var
    (90) varvar -> . varvar POINT var
    (87) variables -> . VARIABLES expr
    (76) python -> . PYTHON str
    (77) execfile -> . EXECFILE expr
    (34) break -> . BREAK
    (91) curfile -> . CURFILE
    (79) exectext -> . EXECTEXT expr
    (40) equal -> . WORD EQUALS expr
    (85) element -> . expr LBRACKET expr RBRACKET
    (88) mlist -> . MLIST COLON dblock
    (82) yield -> . YIELD
    (84) repeat -> . REPEAT
    (70) return -> . RETURN expr
    (17) modules -> . MODULES
    (93) exfiles -> . EXFILES
    (16) input -> . INPUT
    (71) term -> . str
    (72) term -> . float
    (73) term -> . int
    (74) term -> . var
    (97) abspath -> . ABSPATH
    (96) invrelpath -> . INVRELPATH
    (92) relpath -> . RELPATH
    (94) relpathbase -> . RELPATHBASE
    (19) func -> . WORD LPAREN args RPAREN
    (20) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (32) list -> . LBRACKET comms RBRACKET
    (33) list -> . LBRACKET RBRACKET
    (101) alg1 -> . alg2
    (102) alg1 -> . alg1 DIVMUL alg2
    (86) var -> . WORD
    (83) str -> . STRING
    (81) float -> . FLOAT
    (75) int -> . NUMBER
    (103) alg2 -> . alg3
    (104) alg2 -> . alg2 DPROD alg3
    (105) alg3 -> . expralg

    AMPERSAND       shift and go to state 19
    PLUSMINUS       shift and go to state 8
    PRINT           shift and go to state 51
    VARIABLES       shift and go to state 1
    PYTHON          shift and go to state 2
    EXECFILE        shift and go to state 27
    BREAK           shift and go to state 44
    CURFILE         shift and go to state 45
    EXECTEXT        shift and go to state 66
    WORD            shift and go to state 86
    MLIST           shift and go to state 75
    YIELD           shift and go to state 16
    REPEAT          shift and go to state 65
    RETURN          shift and go to state 71
    MODULES         shift and go to state 78
    EXFILES         shift and go to state 60
    INPUT           shift and go to state 22
    ABSPATH         shift and go to state 41
    INVRELPATH      shift and go to state 57
    RELPATH         shift and go to state 28
    RELPATHBASE     shift and go to state 15
    LBRACE          shift and go to state 14
    LBRACKET        shift and go to state 53
    STRING          shift and go to state 12
    FLOAT           shift and go to state 54
    NUMBER          shift and go to state 67

    list                           shift and go to state 35
    yield                          shift and go to state 11
    relpathbase                    shift and go to state 36
    relpath                        shift and go to state 43
    exectext                       shift and go to state 21
    break                          shift and go to state 38
    parttree                       shift and go to state 68
    block                          shift and go to state 69
    curfile                        shift and go to state 23
    expr                           shift and go to state 101
    invrelpath                     shift and go to state 4
    modules                        shift and go to state 24
    input                          shift and go to state 7
    term                           shift and go to state 42
    exfiles                        shift and go to state 5
    execfile                       shift and go to state 48
    python                         shift and go to state 46
    varvar                         shift and go to state 76
    alg0                           shift and go to state 29
    str                            shift and go to state 37
    var                            shift and go to state 87
    variables                      shift and go to state 18
    expralg                        shift and go to state 52
    element                        shift and go to state 84
    alg1                           shift and go to state 32
    alg2                           shift and go to state 79
    abspath                        shift and go to state 81
    alg3                           shift and go to state 33
    int                            shift and go to state 56
    print                          shift and go to state 39
    repeat                         shift and go to state 26
    mlist                          shift and go to state 61
    equal                          shift and go to state 17
    func                           shift and go to state 83
    float                          shift and go to state 50
    return                         shift and go to state 63

state 31

    (7) inblock -> divider . inblock
    (4) inblock -> .
    (5) inblock -> . metaexpr
    (6) inblock -> . inblock divider metaexpr
    (7) inblock -> . divider inblock
    (8) inblock -> . inblock divider
    (21) metaexpr -> . expr
    (22) metaexpr -> . deffunc
    (23) metaexpr -> . module
    (24) metaexpr -> . declare
    (25) metaexpr -> . append
    (26) metaexpr -> . define
    (27) metaexpr -> . execscan
    (28) metaexpr -> . application
    (29) metaexpr -> . compile
    (30) metaexpr -> . downlevel
    (31) metaexpr -> . if
    (15) divider -> . DIVIDER
    (42) expr -> . expralg
    (43) expr -> . parttree
    (44) expr -> . alg0
    (45) expr -> . print
    (46) expr -> . varvar
    (47) expr -> . variables
    (48) expr -> . python
    (49) expr -> . execfile
    (50) expr -> . break
    (51) expr -> . curfile
    (52) expr -> . exectext
    (53) expr -> . equal
    (54) expr -> . element
    (55) expr -> . mlist
    (56) expr -> . yield
    (57) expr -> . repeat
    (58) expr -> . return
    (59) expr -> . modules
    (60) expr -> . exfiles
    (61) expr -> . input
    (11) deffunc -> . DEFFUNC func COLON dblock
    (10) module -> . MODULE WORD COLON dblock
    (13) declare -> . WORD COLON expr
    (18) append -> . var APPEND expr
    (12) define -> . DEFINE WORD expr
    (78) execscan -> . EXECSCAN expr
    (41) application -> . APPLICATION var
    (95) compile -> . COMPILE
    (80) downlevel -> . DOWNLEVEL expr
    (14) if -> . IF expr QUESTION expr COLON expr
    (62) expralg -> . term
    (63) expralg -> . abspath
    (64) expralg -> . invrelpath
    (65) expralg -> . relpath
    (66) expralg -> . relpathbase
    (67) expralg -> . func
    (68) expralg -> . block
    (69) expralg -> . list
    (35) parttree -> . AMPERSAND metaexpr
    (98) alg0 -> . alg1
    (99) alg0 -> . alg0 PLUSMINUS alg1
    (100) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (89) varvar -> . var
    (90) varvar -> . varvar POINT var
    (87) variables -> . VARIABLES expr
    (76) python -> . PYTHON str
    (77) execfile -> . EXECFILE expr
    (34) break -> . BREAK
    (91) curfile -> . CURFILE
    (79) exectext -> . EXECTEXT expr
    (40) equal -> . WORD EQUALS expr
    (85) element -> . expr LBRACKET expr RBRACKET
    (88) mlist -> . MLIST COLON dblock
    (82) yield -> . YIELD
    (84) repeat -> . REPEAT
    (70) return -> . RETURN expr
    (17) modules -> . MODULES
    (93) exfiles -> . EXFILES
    (16) input -> . INPUT
    (86) var -> . WORD
    (71) term -> . str
    (72) term -> . float
    (73) term -> . int
    (74) term -> . var
    (97) abspath -> . ABSPATH
    (96) invrelpath -> . INVRELPATH
    (92) relpath -> . RELPATH
    (94) relpathbase -> . RELPATHBASE
    (19) func -> . WORD LPAREN args RPAREN
    (20) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (32) list -> . LBRACKET comms RBRACKET
    (33) list -> . LBRACKET RBRACKET
    (101) alg1 -> . alg2
    (102) alg1 -> . alg1 DIVMUL alg2
    (83) str -> . STRING
    (81) float -> . FLOAT
    (75) int -> . NUMBER
    (103) alg2 -> . alg3
    (104) alg2 -> . alg2 DPROD alg3
    (105) alg3 -> . expralg

  ! shift/reduce conflict for DIVIDER resolved as shift
    $end            reduce using rule 4 (inblock -> .)
    RBRACE          reduce using rule 4 (inblock -> .)
    DIVIDER         shift and go to state 72
    DEFFUNC         shift and go to state 74
    MODULE          shift and go to state 6
    WORD            shift and go to state 70
    DEFINE          shift and go to state 58
    EXECSCAN        shift and go to state 10
    APPLICATION     shift and go to state 55
    COMPILE         shift and go to state 34
    DOWNLEVEL       shift and go to state 30
    IF              shift and go to state 25
    AMPERSAND       shift and go to state 19
    PLUSMINUS       shift and go to state 8
    PRINT           shift and go to state 51
    VARIABLES       shift and go to state 1
    PYTHON          shift and go to state 2
    EXECFILE        shift and go to state 27
    BREAK           shift and go to state 44
    CURFILE         shift and go to state 45
    EXECTEXT        shift and go to state 66
    MLIST           shift and go to state 75
    YIELD           shift and go to state 16
    REPEAT          shift and go to state 65
    RETURN          shift and go to state 71
    MODULES         shift and go to state 78
    EXFILES         shift and go to state 60
    INPUT           shift and go to state 22
    ABSPATH         shift and go to state 41
    INVRELPATH      shift and go to state 57
    RELPATH         shift and go to state 28
    RELPATHBASE     shift and go to state 15
    LBRACE          shift and go to state 14
    LBRACKET        shift and go to state 53
    STRING          shift and go to state 12
    FLOAT           shift and go to state 54
    NUMBER          shift and go to state 67

  ! DIVIDER         [ reduce using rule 4 (inblock -> .) ]

    list                           shift and go to state 35
    relpathbase                    shift and go to state 36
    exfiles                        shift and go to state 5
    str                            shift and go to state 37
    break                          shift and go to state 38
    if                             shift and go to state 59
    application                    shift and go to state 3
    expr                           shift and go to state 40
    invrelpath                     shift and go to state 4
    term                           shift and go to state 42
    relpath                        shift and go to state 43
    python                         shift and go to state 46
    metaexpr                       shift and go to state 47
    execfile                       shift and go to state 48
    append                         shift and go to state 49
    yield                          shift and go to state 11
    float                          shift and go to state 50
    repeat                         shift and go to state 26
    mlist                          shift and go to state 61
    expralg                        shift and go to state 52
    compile                        shift and go to state 9
    inblock                        shift and go to state 102
    print                          shift and go to state 39
    execscan                       shift and go to state 82
    block                          shift and go to state 69
    equal                          shift and go to state 17
    declare                        shift and go to state 64
    module                         shift and go to state 62
    return                         shift and go to state 63
    deffunc                        shift and go to state 20
    exectext                       shift and go to state 21
    parttree                       shift and go to state 68
    curfile                        shift and go to state 23
    modules                        shift and go to state 24
    input                          shift and go to state 7
    varvar                         shift and go to state 76
    alg0                           shift and go to state 29
    var                            shift and go to state 77
    variables                      shift and go to state 18
    divider                        shift and go to state 31
    alg1                           shift and go to state 32
    alg2                           shift and go to state 79
    alg3                           shift and go to state 33
    int                            shift and go to state 56
    abspath                        shift and go to state 81
    define                         shift and go to state 73
    func                           shift and go to state 83
    element                        shift and go to state 84
    downlevel                      shift and go to state 80

state 32

    (98) alg0 -> alg1 .
    (102) alg1 -> alg1 . DIVMUL alg2

    PLUSMINUS       reduce using rule 98 (alg0 -> alg1 .)
    LBRACKET        reduce using rule 98 (alg0 -> alg1 .)
    RBRACKET        reduce using rule 98 (alg0 -> alg1 .)
    COMMA           reduce using rule 98 (alg0 -> alg1 .)
    DIVIDER         reduce using rule 98 (alg0 -> alg1 .)
    $end            reduce using rule 98 (alg0 -> alg1 .)
    RBRACE          reduce using rule 98 (alg0 -> alg1 .)
    QUESTION        reduce using rule 98 (alg0 -> alg1 .)
    RPAREN          reduce using rule 98 (alg0 -> alg1 .)
    COLON           reduce using rule 98 (alg0 -> alg1 .)
    DIVMUL          shift and go to state 103


state 33

    (103) alg2 -> alg3 .

    DPROD           reduce using rule 103 (alg2 -> alg3 .)
    DIVMUL          reduce using rule 103 (alg2 -> alg3 .)
    PLUSMINUS       reduce using rule 103 (alg2 -> alg3 .)
    LBRACKET        reduce using rule 103 (alg2 -> alg3 .)
    DIVIDER         reduce using rule 103 (alg2 -> alg3 .)
    $end            reduce using rule 103 (alg2 -> alg3 .)
    RBRACE          reduce using rule 103 (alg2 -> alg3 .)
    QUESTION        reduce using rule 103 (alg2 -> alg3 .)
    RBRACKET        reduce using rule 103 (alg2 -> alg3 .)
    COMMA           reduce using rule 103 (alg2 -> alg3 .)
    RPAREN          reduce using rule 103 (alg2 -> alg3 .)
    COLON           reduce using rule 103 (alg2 -> alg3 .)


state 34

    (95) compile -> COMPILE .

    DIVIDER         reduce using rule 95 (compile -> COMPILE .)
    $end            reduce using rule 95 (compile -> COMPILE .)
    RBRACE          reduce using rule 95 (compile -> COMPILE .)
    LBRACKET        reduce using rule 95 (compile -> COMPILE .)
    QUESTION        reduce using rule 95 (compile -> COMPILE .)
    RBRACKET        reduce using rule 95 (compile -> COMPILE .)
    COMMA           reduce using rule 95 (compile -> COMPILE .)
    RPAREN          reduce using rule 95 (compile -> COMPILE .)
    COLON           reduce using rule 95 (compile -> COMPILE .)


state 35

    (69) expralg -> list .

    LBRACKET        reduce using rule 69 (expralg -> list .)
    DIVIDER         reduce using rule 69 (expralg -> list .)
    $end            reduce using rule 69 (expralg -> list .)
    RBRACE          reduce using rule 69 (expralg -> list .)
    QUESTION        reduce using rule 69 (expralg -> list .)
    RBRACKET        reduce using rule 69 (expralg -> list .)
    COMMA           reduce using rule 69 (expralg -> list .)
    RPAREN          reduce using rule 69 (expralg -> list .)
    COLON           reduce using rule 69 (expralg -> list .)
    DPROD           reduce using rule 69 (expralg -> list .)
    DIVMUL          reduce using rule 69 (expralg -> list .)
    PLUSMINUS       reduce using rule 69 (expralg -> list .)


state 36

    (66) expralg -> relpathbase .

    LBRACKET        reduce using rule 66 (expralg -> relpathbase .)
    DIVIDER         reduce using rule 66 (expralg -> relpathbase .)
    $end            reduce using rule 66 (expralg -> relpathbase .)
    RBRACE          reduce using rule 66 (expralg -> relpathbase .)
    QUESTION        reduce using rule 66 (expralg -> relpathbase .)
    RBRACKET        reduce using rule 66 (expralg -> relpathbase .)
    COMMA           reduce using rule 66 (expralg -> relpathbase .)
    RPAREN          reduce using rule 66 (expralg -> relpathbase .)
    COLON           reduce using rule 66 (expralg -> relpathbase .)
    DPROD           reduce using rule 66 (expralg -> relpathbase .)
    DIVMUL          reduce using rule 66 (expralg -> relpathbase .)
    PLUSMINUS       reduce using rule 66 (expralg -> relpathbase .)


state 37

    (71) term -> str .

    RBRACKET        reduce using rule 71 (term -> str .)
    LBRACKET        reduce using rule 71 (term -> str .)
    DPROD           reduce using rule 71 (term -> str .)
    DIVMUL          reduce using rule 71 (term -> str .)
    PLUSMINUS       reduce using rule 71 (term -> str .)
    DIVIDER         reduce using rule 71 (term -> str .)
    $end            reduce using rule 71 (term -> str .)
    RBRACE          reduce using rule 71 (term -> str .)
    QUESTION        reduce using rule 71 (term -> str .)
    COMMA           reduce using rule 71 (term -> str .)
    RPAREN          reduce using rule 71 (term -> str .)
    COLON           reduce using rule 71 (term -> str .)


state 38

    (50) expr -> break .

    LBRACKET        reduce using rule 50 (expr -> break .)
    DIVIDER         reduce using rule 50 (expr -> break .)
    $end            reduce using rule 50 (expr -> break .)
    RBRACE          reduce using rule 50 (expr -> break .)
    QUESTION        reduce using rule 50 (expr -> break .)
    RBRACKET        reduce using rule 50 (expr -> break .)
    COMMA           reduce using rule 50 (expr -> break .)
    RPAREN          reduce using rule 50 (expr -> break .)
    COLON           reduce using rule 50 (expr -> break .)


state 39

    (45) expr -> print .

    LBRACKET        reduce using rule 45 (expr -> print .)
    DIVIDER         reduce using rule 45 (expr -> print .)
    $end            reduce using rule 45 (expr -> print .)
    RBRACE          reduce using rule 45 (expr -> print .)
    QUESTION        reduce using rule 45 (expr -> print .)
    RBRACKET        reduce using rule 45 (expr -> print .)
    COMMA           reduce using rule 45 (expr -> print .)
    RPAREN          reduce using rule 45 (expr -> print .)
    COLON           reduce using rule 45 (expr -> print .)


state 40

    (21) metaexpr -> expr .
    (85) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    RBRACE          reduce using rule 21 (metaexpr -> expr .)
    DIVIDER         reduce using rule 21 (metaexpr -> expr .)
    $end            reduce using rule 21 (metaexpr -> expr .)
    QUESTION        reduce using rule 21 (metaexpr -> expr .)
    RBRACKET        reduce using rule 21 (metaexpr -> expr .)
    COMMA           reduce using rule 21 (metaexpr -> expr .)
    RPAREN          reduce using rule 21 (metaexpr -> expr .)
    COLON           reduce using rule 21 (metaexpr -> expr .)
    LBRACKET        shift and go to state 104

  ! LBRACKET        [ reduce using rule 21 (metaexpr -> expr .) ]


state 41

    (97) abspath -> ABSPATH .

    DPROD           reduce using rule 97 (abspath -> ABSPATH .)
    DIVMUL          reduce using rule 97 (abspath -> ABSPATH .)
    PLUSMINUS       reduce using rule 97 (abspath -> ABSPATH .)
    LBRACKET        reduce using rule 97 (abspath -> ABSPATH .)
    DIVIDER         reduce using rule 97 (abspath -> ABSPATH .)
    $end            reduce using rule 97 (abspath -> ABSPATH .)
    RBRACE          reduce using rule 97 (abspath -> ABSPATH .)
    QUESTION        reduce using rule 97 (abspath -> ABSPATH .)
    RBRACKET        reduce using rule 97 (abspath -> ABSPATH .)
    COMMA           reduce using rule 97 (abspath -> ABSPATH .)
    RPAREN          reduce using rule 97 (abspath -> ABSPATH .)
    COLON           reduce using rule 97 (abspath -> ABSPATH .)


state 42

    (62) expralg -> term .

    LBRACKET        reduce using rule 62 (expralg -> term .)
    DIVIDER         reduce using rule 62 (expralg -> term .)
    $end            reduce using rule 62 (expralg -> term .)
    RBRACE          reduce using rule 62 (expralg -> term .)
    QUESTION        reduce using rule 62 (expralg -> term .)
    RBRACKET        reduce using rule 62 (expralg -> term .)
    COMMA           reduce using rule 62 (expralg -> term .)
    RPAREN          reduce using rule 62 (expralg -> term .)
    COLON           reduce using rule 62 (expralg -> term .)
    DPROD           reduce using rule 62 (expralg -> term .)
    DIVMUL          reduce using rule 62 (expralg -> term .)
    PLUSMINUS       reduce using rule 62 (expralg -> term .)


state 43

    (65) expralg -> relpath .

    LBRACKET        reduce using rule 65 (expralg -> relpath .)
    DIVIDER         reduce using rule 65 (expralg -> relpath .)
    $end            reduce using rule 65 (expralg -> relpath .)
    RBRACE          reduce using rule 65 (expralg -> relpath .)
    QUESTION        reduce using rule 65 (expralg -> relpath .)
    RBRACKET        reduce using rule 65 (expralg -> relpath .)
    COMMA           reduce using rule 65 (expralg -> relpath .)
    RPAREN          reduce using rule 65 (expralg -> relpath .)
    COLON           reduce using rule 65 (expralg -> relpath .)
    DPROD           reduce using rule 65 (expralg -> relpath .)
    DIVMUL          reduce using rule 65 (expralg -> relpath .)
    PLUSMINUS       reduce using rule 65 (expralg -> relpath .)


state 44

    (34) break -> BREAK .

    LBRACKET        reduce using rule 34 (break -> BREAK .)
    RBRACKET        reduce using rule 34 (break -> BREAK .)
    COMMA           reduce using rule 34 (break -> BREAK .)
    DIVIDER         reduce using rule 34 (break -> BREAK .)
    $end            reduce using rule 34 (break -> BREAK .)
    RBRACE          reduce using rule 34 (break -> BREAK .)
    QUESTION        reduce using rule 34 (break -> BREAK .)
    RPAREN          reduce using rule 34 (break -> BREAK .)
    COLON           reduce using rule 34 (break -> BREAK .)


state 45

    (91) curfile -> CURFILE .

    LBRACKET        reduce using rule 91 (curfile -> CURFILE .)
    DIVIDER         reduce using rule 91 (curfile -> CURFILE .)
    $end            reduce using rule 91 (curfile -> CURFILE .)
    RBRACE          reduce using rule 91 (curfile -> CURFILE .)
    QUESTION        reduce using rule 91 (curfile -> CURFILE .)
    RBRACKET        reduce using rule 91 (curfile -> CURFILE .)
    COMMA           reduce using rule 91 (curfile -> CURFILE .)
    RPAREN          reduce using rule 91 (curfile -> CURFILE .)
    COLON           reduce using rule 91 (curfile -> CURFILE .)


state 46

    (48) expr -> python .

    LBRACKET        reduce using rule 48 (expr -> python .)
    DIVIDER         reduce using rule 48 (expr -> python .)
    $end            reduce using rule 48 (expr -> python .)
    RBRACE          reduce using rule 48 (expr -> python .)
    QUESTION        reduce using rule 48 (expr -> python .)
    RBRACKET        reduce using rule 48 (expr -> python .)
    COMMA           reduce using rule 48 (expr -> python .)
    RPAREN          reduce using rule 48 (expr -> python .)
    COLON           reduce using rule 48 (expr -> python .)


state 47

    (5) inblock -> metaexpr .

    DIVIDER         reduce using rule 5 (inblock -> metaexpr .)
    $end            reduce using rule 5 (inblock -> metaexpr .)
    RBRACE          reduce using rule 5 (inblock -> metaexpr .)


state 48

    (49) expr -> execfile .

    LBRACKET        reduce using rule 49 (expr -> execfile .)
    DIVIDER         reduce using rule 49 (expr -> execfile .)
    $end            reduce using rule 49 (expr -> execfile .)
    RBRACE          reduce using rule 49 (expr -> execfile .)
    QUESTION        reduce using rule 49 (expr -> execfile .)
    RBRACKET        reduce using rule 49 (expr -> execfile .)
    COMMA           reduce using rule 49 (expr -> execfile .)
    RPAREN          reduce using rule 49 (expr -> execfile .)
    COLON           reduce using rule 49 (expr -> execfile .)


state 49

    (25) metaexpr -> append .

    RBRACE          reduce using rule 25 (metaexpr -> append .)
    DIVIDER         reduce using rule 25 (metaexpr -> append .)
    $end            reduce using rule 25 (metaexpr -> append .)
    LBRACKET        reduce using rule 25 (metaexpr -> append .)
    QUESTION        reduce using rule 25 (metaexpr -> append .)
    RBRACKET        reduce using rule 25 (metaexpr -> append .)
    COMMA           reduce using rule 25 (metaexpr -> append .)
    RPAREN          reduce using rule 25 (metaexpr -> append .)
    COLON           reduce using rule 25 (metaexpr -> append .)


state 50

    (72) term -> float .

    RBRACKET        reduce using rule 72 (term -> float .)
    LBRACKET        reduce using rule 72 (term -> float .)
    DPROD           reduce using rule 72 (term -> float .)
    DIVMUL          reduce using rule 72 (term -> float .)
    PLUSMINUS       reduce using rule 72 (term -> float .)
    DIVIDER         reduce using rule 72 (term -> float .)
    $end            reduce using rule 72 (term -> float .)
    RBRACE          reduce using rule 72 (term -> float .)
    QUESTION        reduce using rule 72 (term -> float .)
    COMMA           reduce using rule 72 (term -> float .)
    RPAREN          reduce using rule 72 (term -> float .)
    COLON           reduce using rule 72 (term -> float .)


state 51

    (9) print -> PRINT . expr
    (42) expr -> . expralg
    (43) expr -> . parttree
    (44) expr -> . alg0
    (45) expr -> . print
    (46) expr -> . varvar
    (47) expr -> . variables
    (48) expr -> . python
    (49) expr -> . execfile
    (50) expr -> . break
    (51) expr -> . curfile
    (52) expr -> . exectext
    (53) expr -> . equal
    (54) expr -> . element
    (55) expr -> . mlist
    (56) expr -> . yield
    (57) expr -> . repeat
    (58) expr -> . return
    (59) expr -> . modules
    (60) expr -> . exfiles
    (61) expr -> . input
    (62) expralg -> . term
    (63) expralg -> . abspath
    (64) expralg -> . invrelpath
    (65) expralg -> . relpath
    (66) expralg -> . relpathbase
    (67) expralg -> . func
    (68) expralg -> . block
    (69) expralg -> . list
    (35) parttree -> . AMPERSAND metaexpr
    (98) alg0 -> . alg1
    (99) alg0 -> . alg0 PLUSMINUS alg1
    (100) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (89) varvar -> . var
    (90) varvar -> . varvar POINT var
    (87) variables -> . VARIABLES expr
    (76) python -> . PYTHON str
    (77) execfile -> . EXECFILE expr
    (34) break -> . BREAK
    (91) curfile -> . CURFILE
    (79) exectext -> . EXECTEXT expr
    (40) equal -> . WORD EQUALS expr
    (85) element -> . expr LBRACKET expr RBRACKET
    (88) mlist -> . MLIST COLON dblock
    (82) yield -> . YIELD
    (84) repeat -> . REPEAT
    (70) return -> . RETURN expr
    (17) modules -> . MODULES
    (93) exfiles -> . EXFILES
    (16) input -> . INPUT
    (71) term -> . str
    (72) term -> . float
    (73) term -> . int
    (74) term -> . var
    (97) abspath -> . ABSPATH
    (96) invrelpath -> . INVRELPATH
    (92) relpath -> . RELPATH
    (94) relpathbase -> . RELPATHBASE
    (19) func -> . WORD LPAREN args RPAREN
    (20) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (32) list -> . LBRACKET comms RBRACKET
    (33) list -> . LBRACKET RBRACKET
    (101) alg1 -> . alg2
    (102) alg1 -> . alg1 DIVMUL alg2
    (86) var -> . WORD
    (83) str -> . STRING
    (81) float -> . FLOAT
    (75) int -> . NUMBER
    (103) alg2 -> . alg3
    (104) alg2 -> . alg2 DPROD alg3
    (105) alg3 -> . expralg

    AMPERSAND       shift and go to state 19
    PLUSMINUS       shift and go to state 8
    PRINT           shift and go to state 51
    VARIABLES       shift and go to state 1
    PYTHON          shift and go to state 2
    EXECFILE        shift and go to state 27
    BREAK           shift and go to state 44
    CURFILE         shift and go to state 45
    EXECTEXT        shift and go to state 66
    WORD            shift and go to state 86
    MLIST           shift and go to state 75
    YIELD           shift and go to state 16
    REPEAT          shift and go to state 65
    RETURN          shift and go to state 71
    MODULES         shift and go to state 78
    EXFILES         shift and go to state 60
    INPUT           shift and go to state 22
    ABSPATH         shift and go to state 41
    INVRELPATH      shift and go to state 57
    RELPATH         shift and go to state 28
    RELPATHBASE     shift and go to state 15
    LBRACE          shift and go to state 14
    LBRACKET        shift and go to state 53
    STRING          shift and go to state 12
    FLOAT           shift and go to state 54
    NUMBER          shift and go to state 67

    list                           shift and go to state 35
    yield                          shift and go to state 11
    relpathbase                    shift and go to state 36
    relpath                        shift and go to state 43
    exectext                       shift and go to state 21
    break                          shift and go to state 38
    parttree                       shift and go to state 68
    block                          shift and go to state 69
    curfile                        shift and go to state 23
    expr                           shift and go to state 105
    invrelpath                     shift and go to state 4
    modules                        shift and go to state 24
    input                          shift and go to state 7
    term                           shift and go to state 42
    exfiles                        shift and go to state 5
    execfile                       shift and go to state 48
    python                         shift and go to state 46
    varvar                         shift and go to state 76
    alg0                           shift and go to state 29
    str                            shift and go to state 37
    var                            shift and go to state 87
    variables                      shift and go to state 18
    expralg                        shift and go to state 52
    element                        shift and go to state 84
    alg1                           shift and go to state 32
    alg2                           shift and go to state 79
    abspath                        shift and go to state 81
    alg3                           shift and go to state 33
    int                            shift and go to state 56
    print                          shift and go to state 39
    repeat                         shift and go to state 26
    mlist                          shift and go to state 61
    equal                          shift and go to state 17
    func                           shift and go to state 83
    float                          shift and go to state 50
    return                         shift and go to state 63

state 52

    (42) expr -> expralg .
    (105) alg3 -> expralg .

  ! reduce/reduce conflict for LBRACKET resolved using rule 42 (expr -> expralg .)
  ! reduce/reduce conflict for DIVIDER resolved using rule 42 (expr -> expralg .)
  ! reduce/reduce conflict for $end resolved using rule 42 (expr -> expralg .)
  ! reduce/reduce conflict for RBRACE resolved using rule 42 (expr -> expralg .)
  ! reduce/reduce conflict for QUESTION resolved using rule 42 (expr -> expralg .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 42 (expr -> expralg .)
  ! reduce/reduce conflict for COMMA resolved using rule 42 (expr -> expralg .)
  ! reduce/reduce conflict for RPAREN resolved using rule 42 (expr -> expralg .)
  ! reduce/reduce conflict for COLON resolved using rule 42 (expr -> expralg .)
    LBRACKET        reduce using rule 42 (expr -> expralg .)
    DIVIDER         reduce using rule 42 (expr -> expralg .)
    $end            reduce using rule 42 (expr -> expralg .)
    RBRACE          reduce using rule 42 (expr -> expralg .)
    QUESTION        reduce using rule 42 (expr -> expralg .)
    RBRACKET        reduce using rule 42 (expr -> expralg .)
    COMMA           reduce using rule 42 (expr -> expralg .)
    RPAREN          reduce using rule 42 (expr -> expralg .)
    COLON           reduce using rule 42 (expr -> expralg .)
    DPROD           reduce using rule 105 (alg3 -> expralg .)
    DIVMUL          reduce using rule 105 (alg3 -> expralg .)
    PLUSMINUS       reduce using rule 105 (alg3 -> expralg .)

  ! LBRACKET        [ reduce using rule 105 (alg3 -> expralg .) ]
  ! DIVIDER         [ reduce using rule 105 (alg3 -> expralg .) ]
  ! $end            [ reduce using rule 105 (alg3 -> expralg .) ]
  ! RBRACE          [ reduce using rule 105 (alg3 -> expralg .) ]
  ! QUESTION        [ reduce using rule 105 (alg3 -> expralg .) ]
  ! RBRACKET        [ reduce using rule 105 (alg3 -> expralg .) ]
  ! COMMA           [ reduce using rule 105 (alg3 -> expralg .) ]
  ! RPAREN          [ reduce using rule 105 (alg3 -> expralg .) ]
  ! COLON           [ reduce using rule 105 (alg3 -> expralg .) ]


state 53

    (32) list -> LBRACKET . comms RBRACKET
    (33) list -> LBRACKET . RBRACKET
    (38) comms -> . expr
    (39) comms -> . comms COMMA expr
    (42) expr -> . expralg
    (43) expr -> . parttree
    (44) expr -> . alg0
    (45) expr -> . print
    (46) expr -> . varvar
    (47) expr -> . variables
    (48) expr -> . python
    (49) expr -> . execfile
    (50) expr -> . break
    (51) expr -> . curfile
    (52) expr -> . exectext
    (53) expr -> . equal
    (54) expr -> . element
    (55) expr -> . mlist
    (56) expr -> . yield
    (57) expr -> . repeat
    (58) expr -> . return
    (59) expr -> . modules
    (60) expr -> . exfiles
    (61) expr -> . input
    (62) expralg -> . term
    (63) expralg -> . abspath
    (64) expralg -> . invrelpath
    (65) expralg -> . relpath
    (66) expralg -> . relpathbase
    (67) expralg -> . func
    (68) expralg -> . block
    (69) expralg -> . list
    (35) parttree -> . AMPERSAND metaexpr
    (98) alg0 -> . alg1
    (99) alg0 -> . alg0 PLUSMINUS alg1
    (100) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (89) varvar -> . var
    (90) varvar -> . varvar POINT var
    (87) variables -> . VARIABLES expr
    (76) python -> . PYTHON str
    (77) execfile -> . EXECFILE expr
    (34) break -> . BREAK
    (91) curfile -> . CURFILE
    (79) exectext -> . EXECTEXT expr
    (40) equal -> . WORD EQUALS expr
    (85) element -> . expr LBRACKET expr RBRACKET
    (88) mlist -> . MLIST COLON dblock
    (82) yield -> . YIELD
    (84) repeat -> . REPEAT
    (70) return -> . RETURN expr
    (17) modules -> . MODULES
    (93) exfiles -> . EXFILES
    (16) input -> . INPUT
    (71) term -> . str
    (72) term -> . float
    (73) term -> . int
    (74) term -> . var
    (97) abspath -> . ABSPATH
    (96) invrelpath -> . INVRELPATH
    (92) relpath -> . RELPATH
    (94) relpathbase -> . RELPATHBASE
    (19) func -> . WORD LPAREN args RPAREN
    (20) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (32) list -> . LBRACKET comms RBRACKET
    (33) list -> . LBRACKET RBRACKET
    (101) alg1 -> . alg2
    (102) alg1 -> . alg1 DIVMUL alg2
    (86) var -> . WORD
    (83) str -> . STRING
    (81) float -> . FLOAT
    (75) int -> . NUMBER
    (103) alg2 -> . alg3
    (104) alg2 -> . alg2 DPROD alg3
    (105) alg3 -> . expralg

    RBRACKET        shift and go to state 107
    AMPERSAND       shift and go to state 19
    PLUSMINUS       shift and go to state 8
    PRINT           shift and go to state 51
    VARIABLES       shift and go to state 1
    PYTHON          shift and go to state 2
    EXECFILE        shift and go to state 27
    BREAK           shift and go to state 44
    CURFILE         shift and go to state 45
    EXECTEXT        shift and go to state 66
    WORD            shift and go to state 86
    MLIST           shift and go to state 75
    YIELD           shift and go to state 16
    REPEAT          shift and go to state 65
    RETURN          shift and go to state 71
    MODULES         shift and go to state 78
    EXFILES         shift and go to state 60
    INPUT           shift and go to state 22
    ABSPATH         shift and go to state 41
    INVRELPATH      shift and go to state 57
    RELPATH         shift and go to state 28
    RELPATHBASE     shift and go to state 15
    LBRACE          shift and go to state 14
    LBRACKET        shift and go to state 53
    STRING          shift and go to state 12
    FLOAT           shift and go to state 54
    NUMBER          shift and go to state 67

    list                           shift and go to state 35
    yield                          shift and go to state 11
    relpathbase                    shift and go to state 36
    relpath                        shift and go to state 43
    exectext                       shift and go to state 21
    break                          shift and go to state 38
    parttree                       shift and go to state 68
    block                          shift and go to state 69
    curfile                        shift and go to state 23
    expr                           shift and go to state 106
    invrelpath                     shift and go to state 4
    modules                        shift and go to state 24
    repeat                         shift and go to state 26
    term                           shift and go to state 42
    exfiles                        shift and go to state 5
    execfile                       shift and go to state 48
    comms                          shift and go to state 108
    python                         shift and go to state 46
    varvar                         shift and go to state 76
    alg0                           shift and go to state 29
    str                            shift and go to state 37
    var                            shift and go to state 87
    variables                      shift and go to state 18
    expralg                        shift and go to state 52
    element                        shift and go to state 84
    alg1                           shift and go to state 32
    alg2                           shift and go to state 79
    abspath                        shift and go to state 81
    alg3                           shift and go to state 33
    int                            shift and go to state 56
    print                          shift and go to state 39
    input                          shift and go to state 7
    mlist                          shift and go to state 61
    equal                          shift and go to state 17
    func                           shift and go to state 83
    float                          shift and go to state 50
    return                         shift and go to state 63

state 54

    (81) float -> FLOAT .

    LBRACKET        reduce using rule 81 (float -> FLOAT .)
    DIVIDER         reduce using rule 81 (float -> FLOAT .)
    $end            reduce using rule 81 (float -> FLOAT .)
    RBRACE          reduce using rule 81 (float -> FLOAT .)
    QUESTION        reduce using rule 81 (float -> FLOAT .)
    RBRACKET        reduce using rule 81 (float -> FLOAT .)
    COMMA           reduce using rule 81 (float -> FLOAT .)
    RPAREN          reduce using rule 81 (float -> FLOAT .)
    COLON           reduce using rule 81 (float -> FLOAT .)
    DPROD           reduce using rule 81 (float -> FLOAT .)
    DIVMUL          reduce using rule 81 (float -> FLOAT .)
    PLUSMINUS       reduce using rule 81 (float -> FLOAT .)


state 55

    (41) application -> APPLICATION . var
    (86) var -> . WORD

    WORD            shift and go to state 109

    var                            shift and go to state 110

state 56

    (73) term -> int .

    RBRACKET        reduce using rule 73 (term -> int .)
    LBRACKET        reduce using rule 73 (term -> int .)
    DPROD           reduce using rule 73 (term -> int .)
    DIVMUL          reduce using rule 73 (term -> int .)
    PLUSMINUS       reduce using rule 73 (term -> int .)
    DIVIDER         reduce using rule 73 (term -> int .)
    $end            reduce using rule 73 (term -> int .)
    RBRACE          reduce using rule 73 (term -> int .)
    QUESTION        reduce using rule 73 (term -> int .)
    COMMA           reduce using rule 73 (term -> int .)
    RPAREN          reduce using rule 73 (term -> int .)
    COLON           reduce using rule 73 (term -> int .)


state 57

    (96) invrelpath -> INVRELPATH .

    DPROD           reduce using rule 96 (invrelpath -> INVRELPATH .)
    DIVMUL          reduce using rule 96 (invrelpath -> INVRELPATH .)
    PLUSMINUS       reduce using rule 96 (invrelpath -> INVRELPATH .)
    LBRACKET        reduce using rule 96 (invrelpath -> INVRELPATH .)
    DIVIDER         reduce using rule 96 (invrelpath -> INVRELPATH .)
    $end            reduce using rule 96 (invrelpath -> INVRELPATH .)
    RBRACE          reduce using rule 96 (invrelpath -> INVRELPATH .)
    QUESTION        reduce using rule 96 (invrelpath -> INVRELPATH .)
    RBRACKET        reduce using rule 96 (invrelpath -> INVRELPATH .)
    COMMA           reduce using rule 96 (invrelpath -> INVRELPATH .)
    RPAREN          reduce using rule 96 (invrelpath -> INVRELPATH .)
    COLON           reduce using rule 96 (invrelpath -> INVRELPATH .)


state 58

    (12) define -> DEFINE . WORD expr

    WORD            shift and go to state 111


state 59

    (31) metaexpr -> if .

    RBRACE          reduce using rule 31 (metaexpr -> if .)
    DIVIDER         reduce using rule 31 (metaexpr -> if .)
    $end            reduce using rule 31 (metaexpr -> if .)
    LBRACKET        reduce using rule 31 (metaexpr -> if .)
    QUESTION        reduce using rule 31 (metaexpr -> if .)
    RBRACKET        reduce using rule 31 (metaexpr -> if .)
    COMMA           reduce using rule 31 (metaexpr -> if .)
    RPAREN          reduce using rule 31 (metaexpr -> if .)
    COLON           reduce using rule 31 (metaexpr -> if .)


state 60

    (93) exfiles -> EXFILES .

    LBRACKET        reduce using rule 93 (exfiles -> EXFILES .)
    DIVIDER         reduce using rule 93 (exfiles -> EXFILES .)
    $end            reduce using rule 93 (exfiles -> EXFILES .)
    RBRACE          reduce using rule 93 (exfiles -> EXFILES .)
    QUESTION        reduce using rule 93 (exfiles -> EXFILES .)
    RBRACKET        reduce using rule 93 (exfiles -> EXFILES .)
    COMMA           reduce using rule 93 (exfiles -> EXFILES .)
    RPAREN          reduce using rule 93 (exfiles -> EXFILES .)
    COLON           reduce using rule 93 (exfiles -> EXFILES .)


state 61

    (55) expr -> mlist .

    LBRACKET        reduce using rule 55 (expr -> mlist .)
    DIVIDER         reduce using rule 55 (expr -> mlist .)
    $end            reduce using rule 55 (expr -> mlist .)
    RBRACE          reduce using rule 55 (expr -> mlist .)
    QUESTION        reduce using rule 55 (expr -> mlist .)
    RBRACKET        reduce using rule 55 (expr -> mlist .)
    COMMA           reduce using rule 55 (expr -> mlist .)
    RPAREN          reduce using rule 55 (expr -> mlist .)
    COLON           reduce using rule 55 (expr -> mlist .)


state 62

    (23) metaexpr -> module .

    RBRACE          reduce using rule 23 (metaexpr -> module .)
    DIVIDER         reduce using rule 23 (metaexpr -> module .)
    $end            reduce using rule 23 (metaexpr -> module .)
    LBRACKET        reduce using rule 23 (metaexpr -> module .)
    QUESTION        reduce using rule 23 (metaexpr -> module .)
    RBRACKET        reduce using rule 23 (metaexpr -> module .)
    COMMA           reduce using rule 23 (metaexpr -> module .)
    RPAREN          reduce using rule 23 (metaexpr -> module .)
    COLON           reduce using rule 23 (metaexpr -> module .)


state 63

    (58) expr -> return .

    LBRACKET        reduce using rule 58 (expr -> return .)
    DIVIDER         reduce using rule 58 (expr -> return .)
    $end            reduce using rule 58 (expr -> return .)
    RBRACE          reduce using rule 58 (expr -> return .)
    QUESTION        reduce using rule 58 (expr -> return .)
    RBRACKET        reduce using rule 58 (expr -> return .)
    COMMA           reduce using rule 58 (expr -> return .)
    RPAREN          reduce using rule 58 (expr -> return .)
    COLON           reduce using rule 58 (expr -> return .)


state 64

    (24) metaexpr -> declare .

    RBRACE          reduce using rule 24 (metaexpr -> declare .)
    DIVIDER         reduce using rule 24 (metaexpr -> declare .)
    $end            reduce using rule 24 (metaexpr -> declare .)
    LBRACKET        reduce using rule 24 (metaexpr -> declare .)
    QUESTION        reduce using rule 24 (metaexpr -> declare .)
    RBRACKET        reduce using rule 24 (metaexpr -> declare .)
    COMMA           reduce using rule 24 (metaexpr -> declare .)
    RPAREN          reduce using rule 24 (metaexpr -> declare .)
    COLON           reduce using rule 24 (metaexpr -> declare .)


state 65

    (84) repeat -> REPEAT .

    LBRACKET        reduce using rule 84 (repeat -> REPEAT .)
    DIVIDER         reduce using rule 84 (repeat -> REPEAT .)
    $end            reduce using rule 84 (repeat -> REPEAT .)
    RBRACE          reduce using rule 84 (repeat -> REPEAT .)
    QUESTION        reduce using rule 84 (repeat -> REPEAT .)
    RBRACKET        reduce using rule 84 (repeat -> REPEAT .)
    COMMA           reduce using rule 84 (repeat -> REPEAT .)
    RPAREN          reduce using rule 84 (repeat -> REPEAT .)
    COLON           reduce using rule 84 (repeat -> REPEAT .)


state 66

    (79) exectext -> EXECTEXT . expr
    (42) expr -> . expralg
    (43) expr -> . parttree
    (44) expr -> . alg0
    (45) expr -> . print
    (46) expr -> . varvar
    (47) expr -> . variables
    (48) expr -> . python
    (49) expr -> . execfile
    (50) expr -> . break
    (51) expr -> . curfile
    (52) expr -> . exectext
    (53) expr -> . equal
    (54) expr -> . element
    (55) expr -> . mlist
    (56) expr -> . yield
    (57) expr -> . repeat
    (58) expr -> . return
    (59) expr -> . modules
    (60) expr -> . exfiles
    (61) expr -> . input
    (62) expralg -> . term
    (63) expralg -> . abspath
    (64) expralg -> . invrelpath
    (65) expralg -> . relpath
    (66) expralg -> . relpathbase
    (67) expralg -> . func
    (68) expralg -> . block
    (69) expralg -> . list
    (35) parttree -> . AMPERSAND metaexpr
    (98) alg0 -> . alg1
    (99) alg0 -> . alg0 PLUSMINUS alg1
    (100) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (89) varvar -> . var
    (90) varvar -> . varvar POINT var
    (87) variables -> . VARIABLES expr
    (76) python -> . PYTHON str
    (77) execfile -> . EXECFILE expr
    (34) break -> . BREAK
    (91) curfile -> . CURFILE
    (79) exectext -> . EXECTEXT expr
    (40) equal -> . WORD EQUALS expr
    (85) element -> . expr LBRACKET expr RBRACKET
    (88) mlist -> . MLIST COLON dblock
    (82) yield -> . YIELD
    (84) repeat -> . REPEAT
    (70) return -> . RETURN expr
    (17) modules -> . MODULES
    (93) exfiles -> . EXFILES
    (16) input -> . INPUT
    (71) term -> . str
    (72) term -> . float
    (73) term -> . int
    (74) term -> . var
    (97) abspath -> . ABSPATH
    (96) invrelpath -> . INVRELPATH
    (92) relpath -> . RELPATH
    (94) relpathbase -> . RELPATHBASE
    (19) func -> . WORD LPAREN args RPAREN
    (20) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (32) list -> . LBRACKET comms RBRACKET
    (33) list -> . LBRACKET RBRACKET
    (101) alg1 -> . alg2
    (102) alg1 -> . alg1 DIVMUL alg2
    (86) var -> . WORD
    (83) str -> . STRING
    (81) float -> . FLOAT
    (75) int -> . NUMBER
    (103) alg2 -> . alg3
    (104) alg2 -> . alg2 DPROD alg3
    (105) alg3 -> . expralg

    AMPERSAND       shift and go to state 19
    PLUSMINUS       shift and go to state 8
    PRINT           shift and go to state 51
    VARIABLES       shift and go to state 1
    PYTHON          shift and go to state 2
    EXECFILE        shift and go to state 27
    BREAK           shift and go to state 44
    CURFILE         shift and go to state 45
    EXECTEXT        shift and go to state 66
    WORD            shift and go to state 86
    MLIST           shift and go to state 75
    YIELD           shift and go to state 16
    REPEAT          shift and go to state 65
    RETURN          shift and go to state 71
    MODULES         shift and go to state 78
    EXFILES         shift and go to state 60
    INPUT           shift and go to state 22
    ABSPATH         shift and go to state 41
    INVRELPATH      shift and go to state 57
    RELPATH         shift and go to state 28
    RELPATHBASE     shift and go to state 15
    LBRACE          shift and go to state 14
    LBRACKET        shift and go to state 53
    STRING          shift and go to state 12
    FLOAT           shift and go to state 54
    NUMBER          shift and go to state 67

    list                           shift and go to state 35
    yield                          shift and go to state 11
    relpathbase                    shift and go to state 36
    relpath                        shift and go to state 43
    exectext                       shift and go to state 21
    break                          shift and go to state 38
    parttree                       shift and go to state 68
    block                          shift and go to state 69
    curfile                        shift and go to state 23
    expr                           shift and go to state 112
    invrelpath                     shift and go to state 4
    modules                        shift and go to state 24
    input                          shift and go to state 7
    term                           shift and go to state 42
    exfiles                        shift and go to state 5
    execfile                       shift and go to state 48
    python                         shift and go to state 46
    varvar                         shift and go to state 76
    alg0                           shift and go to state 29
    str                            shift and go to state 37
    var                            shift and go to state 87
    variables                      shift and go to state 18
    expralg                        shift and go to state 52
    element                        shift and go to state 84
    alg1                           shift and go to state 32
    alg2                           shift and go to state 79
    abspath                        shift and go to state 81
    alg3                           shift and go to state 33
    int                            shift and go to state 56
    print                          shift and go to state 39
    repeat                         shift and go to state 26
    mlist                          shift and go to state 61
    equal                          shift and go to state 17
    func                           shift and go to state 83
    float                          shift and go to state 50
    return                         shift and go to state 63

state 67

    (75) int -> NUMBER .

    DPROD           reduce using rule 75 (int -> NUMBER .)
    DIVMUL          reduce using rule 75 (int -> NUMBER .)
    PLUSMINUS       reduce using rule 75 (int -> NUMBER .)
    LBRACKET        reduce using rule 75 (int -> NUMBER .)
    DIVIDER         reduce using rule 75 (int -> NUMBER .)
    $end            reduce using rule 75 (int -> NUMBER .)
    RBRACE          reduce using rule 75 (int -> NUMBER .)
    QUESTION        reduce using rule 75 (int -> NUMBER .)
    RBRACKET        reduce using rule 75 (int -> NUMBER .)
    COMMA           reduce using rule 75 (int -> NUMBER .)
    RPAREN          reduce using rule 75 (int -> NUMBER .)
    COLON           reduce using rule 75 (int -> NUMBER .)


state 68

    (43) expr -> parttree .

    LBRACKET        reduce using rule 43 (expr -> parttree .)
    DIVIDER         reduce using rule 43 (expr -> parttree .)
    $end            reduce using rule 43 (expr -> parttree .)
    RBRACE          reduce using rule 43 (expr -> parttree .)
    QUESTION        reduce using rule 43 (expr -> parttree .)
    RBRACKET        reduce using rule 43 (expr -> parttree .)
    COMMA           reduce using rule 43 (expr -> parttree .)
    RPAREN          reduce using rule 43 (expr -> parttree .)
    COLON           reduce using rule 43 (expr -> parttree .)


state 69

    (68) expralg -> block .

    LBRACKET        reduce using rule 68 (expralg -> block .)
    DIVIDER         reduce using rule 68 (expralg -> block .)
    $end            reduce using rule 68 (expralg -> block .)
    RBRACE          reduce using rule 68 (expralg -> block .)
    QUESTION        reduce using rule 68 (expralg -> block .)
    RBRACKET        reduce using rule 68 (expralg -> block .)
    COMMA           reduce using rule 68 (expralg -> block .)
    RPAREN          reduce using rule 68 (expralg -> block .)
    COLON           reduce using rule 68 (expralg -> block .)
    DPROD           reduce using rule 68 (expralg -> block .)
    DIVMUL          reduce using rule 68 (expralg -> block .)
    PLUSMINUS       reduce using rule 68 (expralg -> block .)


state 70

    (13) declare -> WORD . COLON expr
    (40) equal -> WORD . EQUALS expr
    (86) var -> WORD .
    (19) func -> WORD . LPAREN args RPAREN
    (20) func -> WORD . LPAREN args RPAREN block

  ! shift/reduce conflict for COLON resolved as shift
    COLON           shift and go to state 115
    EQUALS          shift and go to state 114
    APPEND          reduce using rule 86 (var -> WORD .)
    POINT           reduce using rule 86 (var -> WORD .)
    LBRACKET        reduce using rule 86 (var -> WORD .)
    DIVIDER         reduce using rule 86 (var -> WORD .)
    $end            reduce using rule 86 (var -> WORD .)
    RBRACE          reduce using rule 86 (var -> WORD .)
    QUESTION        reduce using rule 86 (var -> WORD .)
    RBRACKET        reduce using rule 86 (var -> WORD .)
    COMMA           reduce using rule 86 (var -> WORD .)
    RPAREN          reduce using rule 86 (var -> WORD .)
    DPROD           reduce using rule 86 (var -> WORD .)
    DIVMUL          reduce using rule 86 (var -> WORD .)
    PLUSMINUS       reduce using rule 86 (var -> WORD .)
    LPAREN          shift and go to state 113

  ! COLON           [ reduce using rule 86 (var -> WORD .) ]


state 71

    (70) return -> RETURN . expr
    (42) expr -> . expralg
    (43) expr -> . parttree
    (44) expr -> . alg0
    (45) expr -> . print
    (46) expr -> . varvar
    (47) expr -> . variables
    (48) expr -> . python
    (49) expr -> . execfile
    (50) expr -> . break
    (51) expr -> . curfile
    (52) expr -> . exectext
    (53) expr -> . equal
    (54) expr -> . element
    (55) expr -> . mlist
    (56) expr -> . yield
    (57) expr -> . repeat
    (58) expr -> . return
    (59) expr -> . modules
    (60) expr -> . exfiles
    (61) expr -> . input
    (62) expralg -> . term
    (63) expralg -> . abspath
    (64) expralg -> . invrelpath
    (65) expralg -> . relpath
    (66) expralg -> . relpathbase
    (67) expralg -> . func
    (68) expralg -> . block
    (69) expralg -> . list
    (35) parttree -> . AMPERSAND metaexpr
    (98) alg0 -> . alg1
    (99) alg0 -> . alg0 PLUSMINUS alg1
    (100) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (89) varvar -> . var
    (90) varvar -> . varvar POINT var
    (87) variables -> . VARIABLES expr
    (76) python -> . PYTHON str
    (77) execfile -> . EXECFILE expr
    (34) break -> . BREAK
    (91) curfile -> . CURFILE
    (79) exectext -> . EXECTEXT expr
    (40) equal -> . WORD EQUALS expr
    (85) element -> . expr LBRACKET expr RBRACKET
    (88) mlist -> . MLIST COLON dblock
    (82) yield -> . YIELD
    (84) repeat -> . REPEAT
    (70) return -> . RETURN expr
    (17) modules -> . MODULES
    (93) exfiles -> . EXFILES
    (16) input -> . INPUT
    (71) term -> . str
    (72) term -> . float
    (73) term -> . int
    (74) term -> . var
    (97) abspath -> . ABSPATH
    (96) invrelpath -> . INVRELPATH
    (92) relpath -> . RELPATH
    (94) relpathbase -> . RELPATHBASE
    (19) func -> . WORD LPAREN args RPAREN
    (20) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (32) list -> . LBRACKET comms RBRACKET
    (33) list -> . LBRACKET RBRACKET
    (101) alg1 -> . alg2
    (102) alg1 -> . alg1 DIVMUL alg2
    (86) var -> . WORD
    (83) str -> . STRING
    (81) float -> . FLOAT
    (75) int -> . NUMBER
    (103) alg2 -> . alg3
    (104) alg2 -> . alg2 DPROD alg3
    (105) alg3 -> . expralg

    AMPERSAND       shift and go to state 19
    PLUSMINUS       shift and go to state 8
    PRINT           shift and go to state 51
    VARIABLES       shift and go to state 1
    PYTHON          shift and go to state 2
    EXECFILE        shift and go to state 27
    BREAK           shift and go to state 44
    CURFILE         shift and go to state 45
    EXECTEXT        shift and go to state 66
    WORD            shift and go to state 86
    MLIST           shift and go to state 75
    YIELD           shift and go to state 16
    REPEAT          shift and go to state 65
    RETURN          shift and go to state 71
    MODULES         shift and go to state 78
    EXFILES         shift and go to state 60
    INPUT           shift and go to state 22
    ABSPATH         shift and go to state 41
    INVRELPATH      shift and go to state 57
    RELPATH         shift and go to state 28
    RELPATHBASE     shift and go to state 15
    LBRACE          shift and go to state 14
    LBRACKET        shift and go to state 53
    STRING          shift and go to state 12
    FLOAT           shift and go to state 54
    NUMBER          shift and go to state 67

    list                           shift and go to state 35
    yield                          shift and go to state 11
    relpathbase                    shift and go to state 36
    relpath                        shift and go to state 43
    exectext                       shift and go to state 21
    break                          shift and go to state 38
    parttree                       shift and go to state 68
    block                          shift and go to state 69
    curfile                        shift and go to state 23
    expr                           shift and go to state 116
    invrelpath                     shift and go to state 4
    modules                        shift and go to state 24
    input                          shift and go to state 7
    term                           shift and go to state 42
    exfiles                        shift and go to state 5
    execfile                       shift and go to state 48
    python                         shift and go to state 46
    varvar                         shift and go to state 76
    alg0                           shift and go to state 29
    str                            shift and go to state 37
    var                            shift and go to state 87
    variables                      shift and go to state 18
    expralg                        shift and go to state 52
    element                        shift and go to state 84
    alg1                           shift and go to state 32
    alg2                           shift and go to state 79
    abspath                        shift and go to state 81
    alg3                           shift and go to state 33
    int                            shift and go to state 56
    print                          shift and go to state 39
    repeat                         shift and go to state 26
    mlist                          shift and go to state 61
    equal                          shift and go to state 17
    func                           shift and go to state 83
    float                          shift and go to state 50
    return                         shift and go to state 63

state 72

    (15) divider -> DIVIDER .

    DIVIDER         reduce using rule 15 (divider -> DIVIDER .)
    DEFFUNC         reduce using rule 15 (divider -> DIVIDER .)
    MODULE          reduce using rule 15 (divider -> DIVIDER .)
    WORD            reduce using rule 15 (divider -> DIVIDER .)
    DEFINE          reduce using rule 15 (divider -> DIVIDER .)
    EXECSCAN        reduce using rule 15 (divider -> DIVIDER .)
    APPLICATION     reduce using rule 15 (divider -> DIVIDER .)
    COMPILE         reduce using rule 15 (divider -> DIVIDER .)
    DOWNLEVEL       reduce using rule 15 (divider -> DIVIDER .)
    IF              reduce using rule 15 (divider -> DIVIDER .)
    AMPERSAND       reduce using rule 15 (divider -> DIVIDER .)
    PLUSMINUS       reduce using rule 15 (divider -> DIVIDER .)
    PRINT           reduce using rule 15 (divider -> DIVIDER .)
    VARIABLES       reduce using rule 15 (divider -> DIVIDER .)
    PYTHON          reduce using rule 15 (divider -> DIVIDER .)
    EXECFILE        reduce using rule 15 (divider -> DIVIDER .)
    BREAK           reduce using rule 15 (divider -> DIVIDER .)
    CURFILE         reduce using rule 15 (divider -> DIVIDER .)
    EXECTEXT        reduce using rule 15 (divider -> DIVIDER .)
    MLIST           reduce using rule 15 (divider -> DIVIDER .)
    YIELD           reduce using rule 15 (divider -> DIVIDER .)
    REPEAT          reduce using rule 15 (divider -> DIVIDER .)
    RETURN          reduce using rule 15 (divider -> DIVIDER .)
    MODULES         reduce using rule 15 (divider -> DIVIDER .)
    EXFILES         reduce using rule 15 (divider -> DIVIDER .)
    INPUT           reduce using rule 15 (divider -> DIVIDER .)
    ABSPATH         reduce using rule 15 (divider -> DIVIDER .)
    INVRELPATH      reduce using rule 15 (divider -> DIVIDER .)
    RELPATH         reduce using rule 15 (divider -> DIVIDER .)
    RELPATHBASE     reduce using rule 15 (divider -> DIVIDER .)
    LBRACE          reduce using rule 15 (divider -> DIVIDER .)
    LBRACKET        reduce using rule 15 (divider -> DIVIDER .)
    STRING          reduce using rule 15 (divider -> DIVIDER .)
    FLOAT           reduce using rule 15 (divider -> DIVIDER .)
    NUMBER          reduce using rule 15 (divider -> DIVIDER .)
    RBRACE          reduce using rule 15 (divider -> DIVIDER .)
    $end            reduce using rule 15 (divider -> DIVIDER .)


state 73

    (26) metaexpr -> define .

    RBRACE          reduce using rule 26 (metaexpr -> define .)
    DIVIDER         reduce using rule 26 (metaexpr -> define .)
    $end            reduce using rule 26 (metaexpr -> define .)
    LBRACKET        reduce using rule 26 (metaexpr -> define .)
    QUESTION        reduce using rule 26 (metaexpr -> define .)
    RBRACKET        reduce using rule 26 (metaexpr -> define .)
    COMMA           reduce using rule 26 (metaexpr -> define .)
    RPAREN          reduce using rule 26 (metaexpr -> define .)
    COLON           reduce using rule 26 (metaexpr -> define .)


state 74

    (11) deffunc -> DEFFUNC . func COLON dblock
    (19) func -> . WORD LPAREN args RPAREN
    (20) func -> . WORD LPAREN args RPAREN block

    WORD            shift and go to state 117

    func                           shift and go to state 118

state 75

    (88) mlist -> MLIST . COLON dblock

    COLON           shift and go to state 119


state 76

    (46) expr -> varvar .
    (90) varvar -> varvar . POINT var

    LBRACKET        reduce using rule 46 (expr -> varvar .)
    DIVIDER         reduce using rule 46 (expr -> varvar .)
    $end            reduce using rule 46 (expr -> varvar .)
    RBRACE          reduce using rule 46 (expr -> varvar .)
    QUESTION        reduce using rule 46 (expr -> varvar .)
    RBRACKET        reduce using rule 46 (expr -> varvar .)
    COMMA           reduce using rule 46 (expr -> varvar .)
    RPAREN          reduce using rule 46 (expr -> varvar .)
    COLON           reduce using rule 46 (expr -> varvar .)
    POINT           shift and go to state 120


state 77

    (18) append -> var . APPEND expr
    (89) varvar -> var .
    (74) term -> var .

  ! reduce/reduce conflict for LBRACKET resolved using rule 74 (term -> var .)
  ! reduce/reduce conflict for RBRACE resolved using rule 74 (term -> var .)
  ! reduce/reduce conflict for DIVIDER resolved using rule 74 (term -> var .)
  ! reduce/reduce conflict for $end resolved using rule 74 (term -> var .)
  ! reduce/reduce conflict for QUESTION resolved using rule 74 (term -> var .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 74 (term -> var .)
  ! reduce/reduce conflict for COMMA resolved using rule 74 (term -> var .)
  ! reduce/reduce conflict for RPAREN resolved using rule 74 (term -> var .)
  ! reduce/reduce conflict for COLON resolved using rule 74 (term -> var .)
    APPEND          shift and go to state 121
    POINT           reduce using rule 89 (varvar -> var .)
    LBRACKET        reduce using rule 74 (term -> var .)
    RBRACE          reduce using rule 74 (term -> var .)
    DIVIDER         reduce using rule 74 (term -> var .)
    DPROD           reduce using rule 74 (term -> var .)
    DIVMUL          reduce using rule 74 (term -> var .)
    PLUSMINUS       reduce using rule 74 (term -> var .)
    $end            reduce using rule 74 (term -> var .)
    QUESTION        reduce using rule 74 (term -> var .)
    RBRACKET        reduce using rule 74 (term -> var .)
    COMMA           reduce using rule 74 (term -> var .)
    RPAREN          reduce using rule 74 (term -> var .)
    COLON           reduce using rule 74 (term -> var .)

  ! LBRACKET        [ reduce using rule 89 (varvar -> var .) ]
  ! DIVIDER         [ reduce using rule 89 (varvar -> var .) ]
  ! $end            [ reduce using rule 89 (varvar -> var .) ]
  ! RBRACE          [ reduce using rule 89 (varvar -> var .) ]
  ! QUESTION        [ reduce using rule 89 (varvar -> var .) ]
  ! RBRACKET        [ reduce using rule 89 (varvar -> var .) ]
  ! COMMA           [ reduce using rule 89 (varvar -> var .) ]
  ! RPAREN          [ reduce using rule 89 (varvar -> var .) ]
  ! COLON           [ reduce using rule 89 (varvar -> var .) ]


state 78

    (17) modules -> MODULES .

    QUESTION        reduce using rule 17 (modules -> MODULES .)
    LBRACKET        reduce using rule 17 (modules -> MODULES .)
    DIVIDER         reduce using rule 17 (modules -> MODULES .)
    $end            reduce using rule 17 (modules -> MODULES .)
    RBRACE          reduce using rule 17 (modules -> MODULES .)
    RBRACKET        reduce using rule 17 (modules -> MODULES .)
    COMMA           reduce using rule 17 (modules -> MODULES .)
    RPAREN          reduce using rule 17 (modules -> MODULES .)
    COLON           reduce using rule 17 (modules -> MODULES .)


state 79

    (101) alg1 -> alg2 .
    (104) alg2 -> alg2 . DPROD alg3

    DIVMUL          reduce using rule 101 (alg1 -> alg2 .)
    PLUSMINUS       reduce using rule 101 (alg1 -> alg2 .)
    LBRACKET        reduce using rule 101 (alg1 -> alg2 .)
    COMMA           reduce using rule 101 (alg1 -> alg2 .)
    RPAREN          reduce using rule 101 (alg1 -> alg2 .)
    DIVIDER         reduce using rule 101 (alg1 -> alg2 .)
    $end            reduce using rule 101 (alg1 -> alg2 .)
    RBRACE          reduce using rule 101 (alg1 -> alg2 .)
    QUESTION        reduce using rule 101 (alg1 -> alg2 .)
    RBRACKET        reduce using rule 101 (alg1 -> alg2 .)
    COLON           reduce using rule 101 (alg1 -> alg2 .)
    DPROD           shift and go to state 122


state 80

    (30) metaexpr -> downlevel .

    RBRACE          reduce using rule 30 (metaexpr -> downlevel .)
    DIVIDER         reduce using rule 30 (metaexpr -> downlevel .)
    $end            reduce using rule 30 (metaexpr -> downlevel .)
    LBRACKET        reduce using rule 30 (metaexpr -> downlevel .)
    QUESTION        reduce using rule 30 (metaexpr -> downlevel .)
    RBRACKET        reduce using rule 30 (metaexpr -> downlevel .)
    COMMA           reduce using rule 30 (metaexpr -> downlevel .)
    RPAREN          reduce using rule 30 (metaexpr -> downlevel .)
    COLON           reduce using rule 30 (metaexpr -> downlevel .)


state 81

    (63) expralg -> abspath .

    LBRACKET        reduce using rule 63 (expralg -> abspath .)
    DIVIDER         reduce using rule 63 (expralg -> abspath .)
    $end            reduce using rule 63 (expralg -> abspath .)
    RBRACE          reduce using rule 63 (expralg -> abspath .)
    QUESTION        reduce using rule 63 (expralg -> abspath .)
    RBRACKET        reduce using rule 63 (expralg -> abspath .)
    COMMA           reduce using rule 63 (expralg -> abspath .)
    RPAREN          reduce using rule 63 (expralg -> abspath .)
    COLON           reduce using rule 63 (expralg -> abspath .)
    DPROD           reduce using rule 63 (expralg -> abspath .)
    DIVMUL          reduce using rule 63 (expralg -> abspath .)
    PLUSMINUS       reduce using rule 63 (expralg -> abspath .)


state 82

    (27) metaexpr -> execscan .

    RBRACE          reduce using rule 27 (metaexpr -> execscan .)
    DIVIDER         reduce using rule 27 (metaexpr -> execscan .)
    $end            reduce using rule 27 (metaexpr -> execscan .)
    LBRACKET        reduce using rule 27 (metaexpr -> execscan .)
    QUESTION        reduce using rule 27 (metaexpr -> execscan .)
    RBRACKET        reduce using rule 27 (metaexpr -> execscan .)
    COMMA           reduce using rule 27 (metaexpr -> execscan .)
    RPAREN          reduce using rule 27 (metaexpr -> execscan .)
    COLON           reduce using rule 27 (metaexpr -> execscan .)


state 83

    (67) expralg -> func .

    LBRACKET        reduce using rule 67 (expralg -> func .)
    DIVIDER         reduce using rule 67 (expralg -> func .)
    $end            reduce using rule 67 (expralg -> func .)
    RBRACE          reduce using rule 67 (expralg -> func .)
    QUESTION        reduce using rule 67 (expralg -> func .)
    RBRACKET        reduce using rule 67 (expralg -> func .)
    COMMA           reduce using rule 67 (expralg -> func .)
    RPAREN          reduce using rule 67 (expralg -> func .)
    COLON           reduce using rule 67 (expralg -> func .)
    DPROD           reduce using rule 67 (expralg -> func .)
    DIVMUL          reduce using rule 67 (expralg -> func .)
    PLUSMINUS       reduce using rule 67 (expralg -> func .)


state 84

    (54) expr -> element .

    LBRACKET        reduce using rule 54 (expr -> element .)
    DIVIDER         reduce using rule 54 (expr -> element .)
    $end            reduce using rule 54 (expr -> element .)
    RBRACE          reduce using rule 54 (expr -> element .)
    QUESTION        reduce using rule 54 (expr -> element .)
    RBRACKET        reduce using rule 54 (expr -> element .)
    COMMA           reduce using rule 54 (expr -> element .)
    RPAREN          reduce using rule 54 (expr -> element .)
    COLON           reduce using rule 54 (expr -> element .)


state 85

    (87) variables -> VARIABLES expr .
    (85) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    RBRACE          reduce using rule 87 (variables -> VARIABLES expr .)
    DIVIDER         reduce using rule 87 (variables -> VARIABLES expr .)
    RBRACKET        reduce using rule 87 (variables -> VARIABLES expr .)
    COMMA           reduce using rule 87 (variables -> VARIABLES expr .)
    RPAREN          reduce using rule 87 (variables -> VARIABLES expr .)
    QUESTION        reduce using rule 87 (variables -> VARIABLES expr .)
    $end            reduce using rule 87 (variables -> VARIABLES expr .)
    COLON           reduce using rule 87 (variables -> VARIABLES expr .)
    LBRACKET        shift and go to state 104

  ! LBRACKET        [ reduce using rule 87 (variables -> VARIABLES expr .) ]


state 86

    (40) equal -> WORD . EQUALS expr
    (19) func -> WORD . LPAREN args RPAREN
    (20) func -> WORD . LPAREN args RPAREN block
    (86) var -> WORD .

    EQUALS          shift and go to state 114
    LPAREN          shift and go to state 113
    POINT           reduce using rule 86 (var -> WORD .)
    LBRACKET        reduce using rule 86 (var -> WORD .)
    DIVIDER         reduce using rule 86 (var -> WORD .)
    $end            reduce using rule 86 (var -> WORD .)
    RBRACE          reduce using rule 86 (var -> WORD .)
    QUESTION        reduce using rule 86 (var -> WORD .)
    RBRACKET        reduce using rule 86 (var -> WORD .)
    COMMA           reduce using rule 86 (var -> WORD .)
    RPAREN          reduce using rule 86 (var -> WORD .)
    COLON           reduce using rule 86 (var -> WORD .)
    DPROD           reduce using rule 86 (var -> WORD .)
    DIVMUL          reduce using rule 86 (var -> WORD .)
    PLUSMINUS       reduce using rule 86 (var -> WORD .)


state 87

    (89) varvar -> var .
    (74) term -> var .

  ! reduce/reduce conflict for RBRACKET resolved using rule 74 (term -> var .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 74 (term -> var .)
  ! reduce/reduce conflict for DIVIDER resolved using rule 74 (term -> var .)
  ! reduce/reduce conflict for $end resolved using rule 74 (term -> var .)
  ! reduce/reduce conflict for RBRACE resolved using rule 74 (term -> var .)
  ! reduce/reduce conflict for QUESTION resolved using rule 74 (term -> var .)
  ! reduce/reduce conflict for COMMA resolved using rule 74 (term -> var .)
  ! reduce/reduce conflict for RPAREN resolved using rule 74 (term -> var .)
  ! reduce/reduce conflict for COLON resolved using rule 74 (term -> var .)
    POINT           reduce using rule 89 (varvar -> var .)
    RBRACKET        reduce using rule 74 (term -> var .)
    LBRACKET        reduce using rule 74 (term -> var .)
    DPROD           reduce using rule 74 (term -> var .)
    DIVMUL          reduce using rule 74 (term -> var .)
    PLUSMINUS       reduce using rule 74 (term -> var .)
    DIVIDER         reduce using rule 74 (term -> var .)
    $end            reduce using rule 74 (term -> var .)
    RBRACE          reduce using rule 74 (term -> var .)
    QUESTION        reduce using rule 74 (term -> var .)
    COMMA           reduce using rule 74 (term -> var .)
    RPAREN          reduce using rule 74 (term -> var .)
    COLON           reduce using rule 74 (term -> var .)

  ! LBRACKET        [ reduce using rule 89 (varvar -> var .) ]
  ! DIVIDER         [ reduce using rule 89 (varvar -> var .) ]
  ! $end            [ reduce using rule 89 (varvar -> var .) ]
  ! RBRACE          [ reduce using rule 89 (varvar -> var .) ]
  ! QUESTION        [ reduce using rule 89 (varvar -> var .) ]
  ! RBRACKET        [ reduce using rule 89 (varvar -> var .) ]
  ! COMMA           [ reduce using rule 89 (varvar -> var .) ]
  ! RPAREN          [ reduce using rule 89 (varvar -> var .) ]
  ! COLON           [ reduce using rule 89 (varvar -> var .) ]


state 88

    (76) python -> PYTHON str .

    LBRACKET        reduce using rule 76 (python -> PYTHON str .)
    DIVIDER         reduce using rule 76 (python -> PYTHON str .)
    $end            reduce using rule 76 (python -> PYTHON str .)
    RBRACE          reduce using rule 76 (python -> PYTHON str .)
    QUESTION        reduce using rule 76 (python -> PYTHON str .)
    RBRACKET        reduce using rule 76 (python -> PYTHON str .)
    COMMA           reduce using rule 76 (python -> PYTHON str .)
    RPAREN          reduce using rule 76 (python -> PYTHON str .)
    COLON           reduce using rule 76 (python -> PYTHON str .)


state 89

    (10) module -> MODULE WORD . COLON dblock

    COLON           shift and go to state 123


state 90

    (74) term -> var .

    DPROD           reduce using rule 74 (term -> var .)
    DIVMUL          reduce using rule 74 (term -> var .)
    PLUSMINUS       reduce using rule 74 (term -> var .)
    LBRACKET        reduce using rule 74 (term -> var .)
    DIVIDER         reduce using rule 74 (term -> var .)
    $end            reduce using rule 74 (term -> var .)
    RBRACE          reduce using rule 74 (term -> var .)
    QUESTION        reduce using rule 74 (term -> var .)
    RBRACKET        reduce using rule 74 (term -> var .)
    COMMA           reduce using rule 74 (term -> var .)
    RPAREN          reduce using rule 74 (term -> var .)
    COLON           reduce using rule 74 (term -> var .)


state 91

    (19) func -> WORD . LPAREN args RPAREN
    (20) func -> WORD . LPAREN args RPAREN block
    (86) var -> WORD .

    LPAREN          shift and go to state 113
    DPROD           reduce using rule 86 (var -> WORD .)
    DIVMUL          reduce using rule 86 (var -> WORD .)
    PLUSMINUS       reduce using rule 86 (var -> WORD .)
    LBRACKET        reduce using rule 86 (var -> WORD .)
    DIVIDER         reduce using rule 86 (var -> WORD .)
    $end            reduce using rule 86 (var -> WORD .)
    RBRACE          reduce using rule 86 (var -> WORD .)
    QUESTION        reduce using rule 86 (var -> WORD .)
    RBRACKET        reduce using rule 86 (var -> WORD .)
    COMMA           reduce using rule 86 (var -> WORD .)
    RPAREN          reduce using rule 86 (var -> WORD .)
    COLON           reduce using rule 86 (var -> WORD .)


state 92

    (105) alg3 -> expralg .

    DPROD           reduce using rule 105 (alg3 -> expralg .)
    DIVMUL          reduce using rule 105 (alg3 -> expralg .)
    PLUSMINUS       reduce using rule 105 (alg3 -> expralg .)
    LBRACKET        reduce using rule 105 (alg3 -> expralg .)
    DIVIDER         reduce using rule 105 (alg3 -> expralg .)
    $end            reduce using rule 105 (alg3 -> expralg .)
    RBRACE          reduce using rule 105 (alg3 -> expralg .)
    QUESTION        reduce using rule 105 (alg3 -> expralg .)
    RBRACKET        reduce using rule 105 (alg3 -> expralg .)
    COMMA           reduce using rule 105 (alg3 -> expralg .)
    RPAREN          reduce using rule 105 (alg3 -> expralg .)
    COLON           reduce using rule 105 (alg3 -> expralg .)


state 93

    (100) alg0 -> PLUSMINUS alg1 .
    (102) alg1 -> alg1 . DIVMUL alg2

    PLUSMINUS       reduce using rule 100 (alg0 -> PLUSMINUS alg1 .)
    LBRACKET        reduce using rule 100 (alg0 -> PLUSMINUS alg1 .)
    RBRACKET        reduce using rule 100 (alg0 -> PLUSMINUS alg1 .)
    COMMA           reduce using rule 100 (alg0 -> PLUSMINUS alg1 .)
    DIVIDER         reduce using rule 100 (alg0 -> PLUSMINUS alg1 .)
    $end            reduce using rule 100 (alg0 -> PLUSMINUS alg1 .)
    RBRACE          reduce using rule 100 (alg0 -> PLUSMINUS alg1 .)
    QUESTION        reduce using rule 100 (alg0 -> PLUSMINUS alg1 .)
    RPAREN          reduce using rule 100 (alg0 -> PLUSMINUS alg1 .)
    COLON           reduce using rule 100 (alg0 -> PLUSMINUS alg1 .)
    DIVMUL          shift and go to state 103


state 94

    (78) execscan -> EXECSCAN expr .
    (85) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    DIVIDER         reduce using rule 78 (execscan -> EXECSCAN expr .)
    $end            reduce using rule 78 (execscan -> EXECSCAN expr .)
    RBRACE          reduce using rule 78 (execscan -> EXECSCAN expr .)
    QUESTION        reduce using rule 78 (execscan -> EXECSCAN expr .)
    RBRACKET        reduce using rule 78 (execscan -> EXECSCAN expr .)
    COMMA           reduce using rule 78 (execscan -> EXECSCAN expr .)
    RPAREN          reduce using rule 78 (execscan -> EXECSCAN expr .)
    COLON           reduce using rule 78 (execscan -> EXECSCAN expr .)
    LBRACKET        shift and go to state 104

  ! LBRACKET        [ reduce using rule 78 (execscan -> EXECSCAN expr .) ]


state 95

    (6) inblock -> inblock divider . metaexpr
    (8) inblock -> inblock divider .
    (21) metaexpr -> . expr
    (22) metaexpr -> . deffunc
    (23) metaexpr -> . module
    (24) metaexpr -> . declare
    (25) metaexpr -> . append
    (26) metaexpr -> . define
    (27) metaexpr -> . execscan
    (28) metaexpr -> . application
    (29) metaexpr -> . compile
    (30) metaexpr -> . downlevel
    (31) metaexpr -> . if
    (42) expr -> . expralg
    (43) expr -> . parttree
    (44) expr -> . alg0
    (45) expr -> . print
    (46) expr -> . varvar
    (47) expr -> . variables
    (48) expr -> . python
    (49) expr -> . execfile
    (50) expr -> . break
    (51) expr -> . curfile
    (52) expr -> . exectext
    (53) expr -> . equal
    (54) expr -> . element
    (55) expr -> . mlist
    (56) expr -> . yield
    (57) expr -> . repeat
    (58) expr -> . return
    (59) expr -> . modules
    (60) expr -> . exfiles
    (61) expr -> . input
    (11) deffunc -> . DEFFUNC func COLON dblock
    (10) module -> . MODULE WORD COLON dblock
    (13) declare -> . WORD COLON expr
    (18) append -> . var APPEND expr
    (12) define -> . DEFINE WORD expr
    (78) execscan -> . EXECSCAN expr
    (41) application -> . APPLICATION var
    (95) compile -> . COMPILE
    (80) downlevel -> . DOWNLEVEL expr
    (14) if -> . IF expr QUESTION expr COLON expr
    (62) expralg -> . term
    (63) expralg -> . abspath
    (64) expralg -> . invrelpath
    (65) expralg -> . relpath
    (66) expralg -> . relpathbase
    (67) expralg -> . func
    (68) expralg -> . block
    (69) expralg -> . list
    (35) parttree -> . AMPERSAND metaexpr
    (98) alg0 -> . alg1
    (99) alg0 -> . alg0 PLUSMINUS alg1
    (100) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (89) varvar -> . var
    (90) varvar -> . varvar POINT var
    (87) variables -> . VARIABLES expr
    (76) python -> . PYTHON str
    (77) execfile -> . EXECFILE expr
    (34) break -> . BREAK
    (91) curfile -> . CURFILE
    (79) exectext -> . EXECTEXT expr
    (40) equal -> . WORD EQUALS expr
    (85) element -> . expr LBRACKET expr RBRACKET
    (88) mlist -> . MLIST COLON dblock
    (82) yield -> . YIELD
    (84) repeat -> . REPEAT
    (70) return -> . RETURN expr
    (17) modules -> . MODULES
    (93) exfiles -> . EXFILES
    (16) input -> . INPUT
    (86) var -> . WORD
    (71) term -> . str
    (72) term -> . float
    (73) term -> . int
    (74) term -> . var
    (97) abspath -> . ABSPATH
    (96) invrelpath -> . INVRELPATH
    (92) relpath -> . RELPATH
    (94) relpathbase -> . RELPATHBASE
    (19) func -> . WORD LPAREN args RPAREN
    (20) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (32) list -> . LBRACKET comms RBRACKET
    (33) list -> . LBRACKET RBRACKET
    (101) alg1 -> . alg2
    (102) alg1 -> . alg1 DIVMUL alg2
    (83) str -> . STRING
    (81) float -> . FLOAT
    (75) int -> . NUMBER
    (103) alg2 -> . alg3
    (104) alg2 -> . alg2 DPROD alg3
    (105) alg3 -> . expralg

    DIVIDER         reduce using rule 8 (inblock -> inblock divider .)
    $end            reduce using rule 8 (inblock -> inblock divider .)
    RBRACE          reduce using rule 8 (inblock -> inblock divider .)
    DEFFUNC         shift and go to state 74
    MODULE          shift and go to state 6
    WORD            shift and go to state 70
    DEFINE          shift and go to state 58
    EXECSCAN        shift and go to state 10
    APPLICATION     shift and go to state 55
    COMPILE         shift and go to state 34
    DOWNLEVEL       shift and go to state 30
    IF              shift and go to state 25
    AMPERSAND       shift and go to state 19
    PLUSMINUS       shift and go to state 8
    PRINT           shift and go to state 51
    VARIABLES       shift and go to state 1
    PYTHON          shift and go to state 2
    EXECFILE        shift and go to state 27
    BREAK           shift and go to state 44
    CURFILE         shift and go to state 45
    EXECTEXT        shift and go to state 66
    MLIST           shift and go to state 75
    YIELD           shift and go to state 16
    REPEAT          shift and go to state 65
    RETURN          shift and go to state 71
    MODULES         shift and go to state 78
    EXFILES         shift and go to state 60
    INPUT           shift and go to state 22
    ABSPATH         shift and go to state 41
    INVRELPATH      shift and go to state 57
    RELPATH         shift and go to state 28
    RELPATHBASE     shift and go to state 15
    LBRACE          shift and go to state 14
    LBRACKET        shift and go to state 53
    STRING          shift and go to state 12
    FLOAT           shift and go to state 54
    NUMBER          shift and go to state 67

    list                           shift and go to state 35
    relpathbase                    shift and go to state 36
    exfiles                        shift and go to state 5
    str                            shift and go to state 37
    break                          shift and go to state 38
    if                             shift and go to state 59
    application                    shift and go to state 3
    expr                           shift and go to state 40
    invrelpath                     shift and go to state 4
    term                           shift and go to state 42
    relpath                        shift and go to state 43
    python                         shift and go to state 46
    metaexpr                       shift and go to state 124
    execfile                       shift and go to state 48
    append                         shift and go to state 49
    yield                          shift and go to state 11
    float                          shift and go to state 50
    repeat                         shift and go to state 26
    mlist                          shift and go to state 61
    expralg                        shift and go to state 52
    compile                        shift and go to state 9
    print                          shift and go to state 39
    execscan                       shift and go to state 82
    block                          shift and go to state 69
    equal                          shift and go to state 17
    declare                        shift and go to state 64
    module                         shift and go to state 62
    return                         shift and go to state 63
    deffunc                        shift and go to state 20
    exectext                       shift and go to state 21
    parttree                       shift and go to state 68
    curfile                        shift and go to state 23
    modules                        shift and go to state 24
    input                          shift and go to state 7
    varvar                         shift and go to state 76
    alg0                           shift and go to state 29
    var                            shift and go to state 77
    variables                      shift and go to state 18
    alg1                           shift and go to state 32
    alg2                           shift and go to state 79
    alg3                           shift and go to state 33
    int                            shift and go to state 56
    abspath                        shift and go to state 81
    define                         shift and go to state 73
    func                           shift and go to state 83
    element                        shift and go to state 84
    downlevel                      shift and go to state 80

state 96

    (3) block -> LBRACE inblock . RBRACE
    (6) inblock -> inblock . divider metaexpr
    (8) inblock -> inblock . divider
    (15) divider -> . DIVIDER

    RBRACE          shift and go to state 125
    DIVIDER         shift and go to state 72

    divider                        shift and go to state 95

state 97

    (35) parttree -> AMPERSAND metaexpr .

    LBRACKET        reduce using rule 35 (parttree -> AMPERSAND metaexpr .)
    COMMA           reduce using rule 35 (parttree -> AMPERSAND metaexpr .)
    RPAREN          reduce using rule 35 (parttree -> AMPERSAND metaexpr .)
    DIVIDER         reduce using rule 35 (parttree -> AMPERSAND metaexpr .)
    $end            reduce using rule 35 (parttree -> AMPERSAND metaexpr .)
    RBRACE          reduce using rule 35 (parttree -> AMPERSAND metaexpr .)
    QUESTION        reduce using rule 35 (parttree -> AMPERSAND metaexpr .)
    RBRACKET        reduce using rule 35 (parttree -> AMPERSAND metaexpr .)
    COLON           reduce using rule 35 (parttree -> AMPERSAND metaexpr .)


state 98

    (14) if -> IF expr . QUESTION expr COLON expr
    (85) element -> expr . LBRACKET expr RBRACKET

    QUESTION        shift and go to state 126
    LBRACKET        shift and go to state 104


state 99

    (77) execfile -> EXECFILE expr .
    (85) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    DIVIDER         reduce using rule 77 (execfile -> EXECFILE expr .)
    $end            reduce using rule 77 (execfile -> EXECFILE expr .)
    RBRACE          reduce using rule 77 (execfile -> EXECFILE expr .)
    QUESTION        reduce using rule 77 (execfile -> EXECFILE expr .)
    RBRACKET        reduce using rule 77 (execfile -> EXECFILE expr .)
    COMMA           reduce using rule 77 (execfile -> EXECFILE expr .)
    RPAREN          reduce using rule 77 (execfile -> EXECFILE expr .)
    COLON           reduce using rule 77 (execfile -> EXECFILE expr .)
    LBRACKET        shift and go to state 104

  ! LBRACKET        [ reduce using rule 77 (execfile -> EXECFILE expr .) ]


state 100

    (99) alg0 -> alg0 PLUSMINUS . alg1
    (101) alg1 -> . alg2
    (102) alg1 -> . alg1 DIVMUL alg2
    (103) alg2 -> . alg3
    (104) alg2 -> . alg2 DPROD alg3
    (105) alg3 -> . expralg
    (62) expralg -> . term
    (63) expralg -> . abspath
    (64) expralg -> . invrelpath
    (65) expralg -> . relpath
    (66) expralg -> . relpathbase
    (67) expralg -> . func
    (68) expralg -> . block
    (69) expralg -> . list
    (71) term -> . str
    (72) term -> . float
    (73) term -> . int
    (74) term -> . var
    (97) abspath -> . ABSPATH
    (96) invrelpath -> . INVRELPATH
    (92) relpath -> . RELPATH
    (94) relpathbase -> . RELPATHBASE
    (19) func -> . WORD LPAREN args RPAREN
    (20) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (32) list -> . LBRACKET comms RBRACKET
    (33) list -> . LBRACKET RBRACKET
    (83) str -> . STRING
    (81) float -> . FLOAT
    (75) int -> . NUMBER
    (86) var -> . WORD

    ABSPATH         shift and go to state 41
    INVRELPATH      shift and go to state 57
    RELPATH         shift and go to state 28
    RELPATHBASE     shift and go to state 15
    WORD            shift and go to state 91
    LBRACE          shift and go to state 14
    LBRACKET        shift and go to state 53
    STRING          shift and go to state 12
    FLOAT           shift and go to state 54
    NUMBER          shift and go to state 67

    list                           shift and go to state 35
    relpathbase                    shift and go to state 36
    str                            shift and go to state 37
    var                            shift and go to state 90
    expralg                        shift and go to state 92
    block                          shift and go to state 69
    alg1                           shift and go to state 127
    alg2                           shift and go to state 79
    alg3                           shift and go to state 33
    invrelpath                     shift and go to state 4
    int                            shift and go to state 56
    abspath                        shift and go to state 81
    term                           shift and go to state 42
    relpath                        shift and go to state 43
    float                          shift and go to state 50
    func                           shift and go to state 83

state 101

    (80) downlevel -> DOWNLEVEL expr .
    (85) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    DIVIDER         reduce using rule 80 (downlevel -> DOWNLEVEL expr .)
    $end            reduce using rule 80 (downlevel -> DOWNLEVEL expr .)
    RBRACE          reduce using rule 80 (downlevel -> DOWNLEVEL expr .)
    QUESTION        reduce using rule 80 (downlevel -> DOWNLEVEL expr .)
    RBRACKET        reduce using rule 80 (downlevel -> DOWNLEVEL expr .)
    COMMA           reduce using rule 80 (downlevel -> DOWNLEVEL expr .)
    RPAREN          reduce using rule 80 (downlevel -> DOWNLEVEL expr .)
    COLON           reduce using rule 80 (downlevel -> DOWNLEVEL expr .)
    LBRACKET        shift and go to state 104

  ! LBRACKET        [ reduce using rule 80 (downlevel -> DOWNLEVEL expr .) ]


state 102

    (7) inblock -> divider inblock .
    (6) inblock -> inblock . divider metaexpr
    (8) inblock -> inblock . divider
    (15) divider -> . DIVIDER

  ! shift/reduce conflict for DIVIDER resolved as shift
    $end            reduce using rule 7 (inblock -> divider inblock .)
    RBRACE          reduce using rule 7 (inblock -> divider inblock .)
    DIVIDER         shift and go to state 72

  ! DIVIDER         [ reduce using rule 7 (inblock -> divider inblock .) ]

    divider                        shift and go to state 95

state 103

    (102) alg1 -> alg1 DIVMUL . alg2
    (103) alg2 -> . alg3
    (104) alg2 -> . alg2 DPROD alg3
    (105) alg3 -> . expralg
    (62) expralg -> . term
    (63) expralg -> . abspath
    (64) expralg -> . invrelpath
    (65) expralg -> . relpath
    (66) expralg -> . relpathbase
    (67) expralg -> . func
    (68) expralg -> . block
    (69) expralg -> . list
    (71) term -> . str
    (72) term -> . float
    (73) term -> . int
    (74) term -> . var
    (97) abspath -> . ABSPATH
    (96) invrelpath -> . INVRELPATH
    (92) relpath -> . RELPATH
    (94) relpathbase -> . RELPATHBASE
    (19) func -> . WORD LPAREN args RPAREN
    (20) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (32) list -> . LBRACKET comms RBRACKET
    (33) list -> . LBRACKET RBRACKET
    (83) str -> . STRING
    (81) float -> . FLOAT
    (75) int -> . NUMBER
    (86) var -> . WORD

    ABSPATH         shift and go to state 41
    INVRELPATH      shift and go to state 57
    RELPATH         shift and go to state 28
    RELPATHBASE     shift and go to state 15
    WORD            shift and go to state 91
    LBRACE          shift and go to state 14
    LBRACKET        shift and go to state 53
    STRING          shift and go to state 12
    FLOAT           shift and go to state 54
    NUMBER          shift and go to state 67

    list                           shift and go to state 35
    float                          shift and go to state 50
    relpathbase                    shift and go to state 36
    str                            shift and go to state 37
    var                            shift and go to state 90
    expralg                        shift and go to state 92
    block                          shift and go to state 69
    alg2                           shift and go to state 128
    alg3                           shift and go to state 33
    invrelpath                     shift and go to state 4
    int                            shift and go to state 56
    abspath                        shift and go to state 81
    term                           shift and go to state 42
    relpath                        shift and go to state 43
    func                           shift and go to state 83

state 104

    (85) element -> expr LBRACKET . expr RBRACKET
    (42) expr -> . expralg
    (43) expr -> . parttree
    (44) expr -> . alg0
    (45) expr -> . print
    (46) expr -> . varvar
    (47) expr -> . variables
    (48) expr -> . python
    (49) expr -> . execfile
    (50) expr -> . break
    (51) expr -> . curfile
    (52) expr -> . exectext
    (53) expr -> . equal
    (54) expr -> . element
    (55) expr -> . mlist
    (56) expr -> . yield
    (57) expr -> . repeat
    (58) expr -> . return
    (59) expr -> . modules
    (60) expr -> . exfiles
    (61) expr -> . input
    (62) expralg -> . term
    (63) expralg -> . abspath
    (64) expralg -> . invrelpath
    (65) expralg -> . relpath
    (66) expralg -> . relpathbase
    (67) expralg -> . func
    (68) expralg -> . block
    (69) expralg -> . list
    (35) parttree -> . AMPERSAND metaexpr
    (98) alg0 -> . alg1
    (99) alg0 -> . alg0 PLUSMINUS alg1
    (100) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (89) varvar -> . var
    (90) varvar -> . varvar POINT var
    (87) variables -> . VARIABLES expr
    (76) python -> . PYTHON str
    (77) execfile -> . EXECFILE expr
    (34) break -> . BREAK
    (91) curfile -> . CURFILE
    (79) exectext -> . EXECTEXT expr
    (40) equal -> . WORD EQUALS expr
    (85) element -> . expr LBRACKET expr RBRACKET
    (88) mlist -> . MLIST COLON dblock
    (82) yield -> . YIELD
    (84) repeat -> . REPEAT
    (70) return -> . RETURN expr
    (17) modules -> . MODULES
    (93) exfiles -> . EXFILES
    (16) input -> . INPUT
    (71) term -> . str
    (72) term -> . float
    (73) term -> . int
    (74) term -> . var
    (97) abspath -> . ABSPATH
    (96) invrelpath -> . INVRELPATH
    (92) relpath -> . RELPATH
    (94) relpathbase -> . RELPATHBASE
    (19) func -> . WORD LPAREN args RPAREN
    (20) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (32) list -> . LBRACKET comms RBRACKET
    (33) list -> . LBRACKET RBRACKET
    (101) alg1 -> . alg2
    (102) alg1 -> . alg1 DIVMUL alg2
    (86) var -> . WORD
    (83) str -> . STRING
    (81) float -> . FLOAT
    (75) int -> . NUMBER
    (103) alg2 -> . alg3
    (104) alg2 -> . alg2 DPROD alg3
    (105) alg3 -> . expralg

    AMPERSAND       shift and go to state 19
    PLUSMINUS       shift and go to state 8
    PRINT           shift and go to state 51
    VARIABLES       shift and go to state 1
    PYTHON          shift and go to state 2
    EXECFILE        shift and go to state 27
    BREAK           shift and go to state 44
    CURFILE         shift and go to state 45
    EXECTEXT        shift and go to state 66
    WORD            shift and go to state 86
    MLIST           shift and go to state 75
    YIELD           shift and go to state 16
    REPEAT          shift and go to state 65
    RETURN          shift and go to state 71
    MODULES         shift and go to state 78
    EXFILES         shift and go to state 60
    INPUT           shift and go to state 22
    ABSPATH         shift and go to state 41
    INVRELPATH      shift and go to state 57
    RELPATH         shift and go to state 28
    RELPATHBASE     shift and go to state 15
    LBRACE          shift and go to state 14
    LBRACKET        shift and go to state 53
    STRING          shift and go to state 12
    FLOAT           shift and go to state 54
    NUMBER          shift and go to state 67

    list                           shift and go to state 35
    yield                          shift and go to state 11
    relpathbase                    shift and go to state 36
    relpath                        shift and go to state 43
    exectext                       shift and go to state 21
    break                          shift and go to state 38
    parttree                       shift and go to state 68
    block                          shift and go to state 69
    curfile                        shift and go to state 23
    expr                           shift and go to state 129
    invrelpath                     shift and go to state 4
    modules                        shift and go to state 24
    input                          shift and go to state 7
    term                           shift and go to state 42
    exfiles                        shift and go to state 5
    execfile                       shift and go to state 48
    python                         shift and go to state 46
    varvar                         shift and go to state 76
    alg0                           shift and go to state 29
    str                            shift and go to state 37
    var                            shift and go to state 87
    variables                      shift and go to state 18
    expralg                        shift and go to state 52
    element                        shift and go to state 84
    alg1                           shift and go to state 32
    alg2                           shift and go to state 79
    abspath                        shift and go to state 81
    alg3                           shift and go to state 33
    int                            shift and go to state 56
    print                          shift and go to state 39
    repeat                         shift and go to state 26
    mlist                          shift and go to state 61
    equal                          shift and go to state 17
    func                           shift and go to state 83
    float                          shift and go to state 50
    return                         shift and go to state 63

state 105

    (9) print -> PRINT expr .
    (85) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    RBRACE          reduce using rule 9 (print -> PRINT expr .)
    DIVIDER         reduce using rule 9 (print -> PRINT expr .)
    $end            reduce using rule 9 (print -> PRINT expr .)
    QUESTION        reduce using rule 9 (print -> PRINT expr .)
    RBRACKET        reduce using rule 9 (print -> PRINT expr .)
    COMMA           reduce using rule 9 (print -> PRINT expr .)
    RPAREN          reduce using rule 9 (print -> PRINT expr .)
    COLON           reduce using rule 9 (print -> PRINT expr .)
    LBRACKET        shift and go to state 104

  ! LBRACKET        [ reduce using rule 9 (print -> PRINT expr .) ]


state 106

    (38) comms -> expr .
    (85) element -> expr . LBRACKET expr RBRACKET

    RBRACKET        reduce using rule 38 (comms -> expr .)
    COMMA           reduce using rule 38 (comms -> expr .)
    RPAREN          reduce using rule 38 (comms -> expr .)
    LBRACKET        shift and go to state 104


state 107

    (33) list -> LBRACKET RBRACKET .

    LBRACKET        reduce using rule 33 (list -> LBRACKET RBRACKET .)
    DIVIDER         reduce using rule 33 (list -> LBRACKET RBRACKET .)
    $end            reduce using rule 33 (list -> LBRACKET RBRACKET .)
    RBRACE          reduce using rule 33 (list -> LBRACKET RBRACKET .)
    QUESTION        reduce using rule 33 (list -> LBRACKET RBRACKET .)
    RBRACKET        reduce using rule 33 (list -> LBRACKET RBRACKET .)
    COMMA           reduce using rule 33 (list -> LBRACKET RBRACKET .)
    RPAREN          reduce using rule 33 (list -> LBRACKET RBRACKET .)
    COLON           reduce using rule 33 (list -> LBRACKET RBRACKET .)
    DPROD           reduce using rule 33 (list -> LBRACKET RBRACKET .)
    DIVMUL          reduce using rule 33 (list -> LBRACKET RBRACKET .)
    PLUSMINUS       reduce using rule 33 (list -> LBRACKET RBRACKET .)


state 108

    (32) list -> LBRACKET comms . RBRACKET
    (39) comms -> comms . COMMA expr

    RBRACKET        shift and go to state 131
    COMMA           shift and go to state 130


state 109

    (86) var -> WORD .

    DIVIDER         reduce using rule 86 (var -> WORD .)
    $end            reduce using rule 86 (var -> WORD .)
    RBRACE          reduce using rule 86 (var -> WORD .)
    LBRACKET        reduce using rule 86 (var -> WORD .)
    QUESTION        reduce using rule 86 (var -> WORD .)
    RBRACKET        reduce using rule 86 (var -> WORD .)
    COMMA           reduce using rule 86 (var -> WORD .)
    RPAREN          reduce using rule 86 (var -> WORD .)
    COLON           reduce using rule 86 (var -> WORD .)
    POINT           reduce using rule 86 (var -> WORD .)


state 110

    (41) application -> APPLICATION var .

    DIVIDER         reduce using rule 41 (application -> APPLICATION var .)
    $end            reduce using rule 41 (application -> APPLICATION var .)
    RBRACE          reduce using rule 41 (application -> APPLICATION var .)
    LBRACKET        reduce using rule 41 (application -> APPLICATION var .)
    QUESTION        reduce using rule 41 (application -> APPLICATION var .)
    RBRACKET        reduce using rule 41 (application -> APPLICATION var .)
    COMMA           reduce using rule 41 (application -> APPLICATION var .)
    RPAREN          reduce using rule 41 (application -> APPLICATION var .)
    COLON           reduce using rule 41 (application -> APPLICATION var .)


state 111

    (12) define -> DEFINE WORD . expr
    (42) expr -> . expralg
    (43) expr -> . parttree
    (44) expr -> . alg0
    (45) expr -> . print
    (46) expr -> . varvar
    (47) expr -> . variables
    (48) expr -> . python
    (49) expr -> . execfile
    (50) expr -> . break
    (51) expr -> . curfile
    (52) expr -> . exectext
    (53) expr -> . equal
    (54) expr -> . element
    (55) expr -> . mlist
    (56) expr -> . yield
    (57) expr -> . repeat
    (58) expr -> . return
    (59) expr -> . modules
    (60) expr -> . exfiles
    (61) expr -> . input
    (62) expralg -> . term
    (63) expralg -> . abspath
    (64) expralg -> . invrelpath
    (65) expralg -> . relpath
    (66) expralg -> . relpathbase
    (67) expralg -> . func
    (68) expralg -> . block
    (69) expralg -> . list
    (35) parttree -> . AMPERSAND metaexpr
    (98) alg0 -> . alg1
    (99) alg0 -> . alg0 PLUSMINUS alg1
    (100) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (89) varvar -> . var
    (90) varvar -> . varvar POINT var
    (87) variables -> . VARIABLES expr
    (76) python -> . PYTHON str
    (77) execfile -> . EXECFILE expr
    (34) break -> . BREAK
    (91) curfile -> . CURFILE
    (79) exectext -> . EXECTEXT expr
    (40) equal -> . WORD EQUALS expr
    (85) element -> . expr LBRACKET expr RBRACKET
    (88) mlist -> . MLIST COLON dblock
    (82) yield -> . YIELD
    (84) repeat -> . REPEAT
    (70) return -> . RETURN expr
    (17) modules -> . MODULES
    (93) exfiles -> . EXFILES
    (16) input -> . INPUT
    (71) term -> . str
    (72) term -> . float
    (73) term -> . int
    (74) term -> . var
    (97) abspath -> . ABSPATH
    (96) invrelpath -> . INVRELPATH
    (92) relpath -> . RELPATH
    (94) relpathbase -> . RELPATHBASE
    (19) func -> . WORD LPAREN args RPAREN
    (20) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (32) list -> . LBRACKET comms RBRACKET
    (33) list -> . LBRACKET RBRACKET
    (101) alg1 -> . alg2
    (102) alg1 -> . alg1 DIVMUL alg2
    (86) var -> . WORD
    (83) str -> . STRING
    (81) float -> . FLOAT
    (75) int -> . NUMBER
    (103) alg2 -> . alg3
    (104) alg2 -> . alg2 DPROD alg3
    (105) alg3 -> . expralg

    AMPERSAND       shift and go to state 19
    PLUSMINUS       shift and go to state 8
    PRINT           shift and go to state 51
    VARIABLES       shift and go to state 1
    PYTHON          shift and go to state 2
    EXECFILE        shift and go to state 27
    BREAK           shift and go to state 44
    CURFILE         shift and go to state 45
    EXECTEXT        shift and go to state 66
    WORD            shift and go to state 86
    MLIST           shift and go to state 75
    YIELD           shift and go to state 16
    REPEAT          shift and go to state 65
    RETURN          shift and go to state 71
    MODULES         shift and go to state 78
    EXFILES         shift and go to state 60
    INPUT           shift and go to state 22
    ABSPATH         shift and go to state 41
    INVRELPATH      shift and go to state 57
    RELPATH         shift and go to state 28
    RELPATHBASE     shift and go to state 15
    LBRACE          shift and go to state 14
    LBRACKET        shift and go to state 53
    STRING          shift and go to state 12
    FLOAT           shift and go to state 54
    NUMBER          shift and go to state 67

    list                           shift and go to state 35
    yield                          shift and go to state 11
    relpathbase                    shift and go to state 36
    relpath                        shift and go to state 43
    exectext                       shift and go to state 21
    break                          shift and go to state 38
    parttree                       shift and go to state 68
    block                          shift and go to state 69
    curfile                        shift and go to state 23
    expr                           shift and go to state 132
    invrelpath                     shift and go to state 4
    modules                        shift and go to state 24
    input                          shift and go to state 7
    term                           shift and go to state 42
    exfiles                        shift and go to state 5
    execfile                       shift and go to state 48
    python                         shift and go to state 46
    varvar                         shift and go to state 76
    alg0                           shift and go to state 29
    str                            shift and go to state 37
    var                            shift and go to state 87
    variables                      shift and go to state 18
    expralg                        shift and go to state 52
    element                        shift and go to state 84
    alg1                           shift and go to state 32
    alg2                           shift and go to state 79
    abspath                        shift and go to state 81
    alg3                           shift and go to state 33
    int                            shift and go to state 56
    print                          shift and go to state 39
    repeat                         shift and go to state 26
    mlist                          shift and go to state 61
    equal                          shift and go to state 17
    func                           shift and go to state 83
    float                          shift and go to state 50
    return                         shift and go to state 63

state 112

    (79) exectext -> EXECTEXT expr .
    (85) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    RBRACKET        reduce using rule 79 (exectext -> EXECTEXT expr .)
    DIVIDER         reduce using rule 79 (exectext -> EXECTEXT expr .)
    $end            reduce using rule 79 (exectext -> EXECTEXT expr .)
    RBRACE          reduce using rule 79 (exectext -> EXECTEXT expr .)
    QUESTION        reduce using rule 79 (exectext -> EXECTEXT expr .)
    COMMA           reduce using rule 79 (exectext -> EXECTEXT expr .)
    RPAREN          reduce using rule 79 (exectext -> EXECTEXT expr .)
    COLON           reduce using rule 79 (exectext -> EXECTEXT expr .)
    LBRACKET        shift and go to state 104

  ! LBRACKET        [ reduce using rule 79 (exectext -> EXECTEXT expr .) ]


state 113

    (19) func -> WORD LPAREN . args RPAREN
    (20) func -> WORD LPAREN . args RPAREN block
    (36) args -> .
    (37) args -> . comms
    (38) comms -> . expr
    (39) comms -> . comms COMMA expr
    (42) expr -> . expralg
    (43) expr -> . parttree
    (44) expr -> . alg0
    (45) expr -> . print
    (46) expr -> . varvar
    (47) expr -> . variables
    (48) expr -> . python
    (49) expr -> . execfile
    (50) expr -> . break
    (51) expr -> . curfile
    (52) expr -> . exectext
    (53) expr -> . equal
    (54) expr -> . element
    (55) expr -> . mlist
    (56) expr -> . yield
    (57) expr -> . repeat
    (58) expr -> . return
    (59) expr -> . modules
    (60) expr -> . exfiles
    (61) expr -> . input
    (62) expralg -> . term
    (63) expralg -> . abspath
    (64) expralg -> . invrelpath
    (65) expralg -> . relpath
    (66) expralg -> . relpathbase
    (67) expralg -> . func
    (68) expralg -> . block
    (69) expralg -> . list
    (35) parttree -> . AMPERSAND metaexpr
    (98) alg0 -> . alg1
    (99) alg0 -> . alg0 PLUSMINUS alg1
    (100) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (89) varvar -> . var
    (90) varvar -> . varvar POINT var
    (87) variables -> . VARIABLES expr
    (76) python -> . PYTHON str
    (77) execfile -> . EXECFILE expr
    (34) break -> . BREAK
    (91) curfile -> . CURFILE
    (79) exectext -> . EXECTEXT expr
    (40) equal -> . WORD EQUALS expr
    (85) element -> . expr LBRACKET expr RBRACKET
    (88) mlist -> . MLIST COLON dblock
    (82) yield -> . YIELD
    (84) repeat -> . REPEAT
    (70) return -> . RETURN expr
    (17) modules -> . MODULES
    (93) exfiles -> . EXFILES
    (16) input -> . INPUT
    (71) term -> . str
    (72) term -> . float
    (73) term -> . int
    (74) term -> . var
    (97) abspath -> . ABSPATH
    (96) invrelpath -> . INVRELPATH
    (92) relpath -> . RELPATH
    (94) relpathbase -> . RELPATHBASE
    (19) func -> . WORD LPAREN args RPAREN
    (20) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (32) list -> . LBRACKET comms RBRACKET
    (33) list -> . LBRACKET RBRACKET
    (101) alg1 -> . alg2
    (102) alg1 -> . alg1 DIVMUL alg2
    (86) var -> . WORD
    (83) str -> . STRING
    (81) float -> . FLOAT
    (75) int -> . NUMBER
    (103) alg2 -> . alg3
    (104) alg2 -> . alg2 DPROD alg3
    (105) alg3 -> . expralg

    RPAREN          reduce using rule 36 (args -> .)
    AMPERSAND       shift and go to state 19
    PLUSMINUS       shift and go to state 8
    PRINT           shift and go to state 51
    VARIABLES       shift and go to state 1
    PYTHON          shift and go to state 2
    EXECFILE        shift and go to state 27
    BREAK           shift and go to state 44
    CURFILE         shift and go to state 45
    EXECTEXT        shift and go to state 66
    WORD            shift and go to state 86
    MLIST           shift and go to state 75
    YIELD           shift and go to state 16
    REPEAT          shift and go to state 65
    RETURN          shift and go to state 71
    MODULES         shift and go to state 78
    EXFILES         shift and go to state 60
    INPUT           shift and go to state 22
    ABSPATH         shift and go to state 41
    INVRELPATH      shift and go to state 57
    RELPATH         shift and go to state 28
    RELPATHBASE     shift and go to state 15
    LBRACE          shift and go to state 14
    LBRACKET        shift and go to state 53
    STRING          shift and go to state 12
    FLOAT           shift and go to state 54
    NUMBER          shift and go to state 67

    list                           shift and go to state 35
    yield                          shift and go to state 11
    relpathbase                    shift and go to state 36
    relpath                        shift and go to state 43
    exectext                       shift and go to state 21
    break                          shift and go to state 38
    parttree                       shift and go to state 68
    block                          shift and go to state 69
    curfile                        shift and go to state 23
    expr                           shift and go to state 106
    invrelpath                     shift and go to state 4
    modules                        shift and go to state 24
    args                           shift and go to state 133
    repeat                         shift and go to state 26
    term                           shift and go to state 42
    exfiles                        shift and go to state 5
    python                         shift and go to state 46
    comms                          shift and go to state 134
    execfile                       shift and go to state 48
    varvar                         shift and go to state 76
    alg0                           shift and go to state 29
    str                            shift and go to state 37
    var                            shift and go to state 87
    variables                      shift and go to state 18
    expralg                        shift and go to state 52
    element                        shift and go to state 84
    alg1                           shift and go to state 32
    alg2                           shift and go to state 79
    abspath                        shift and go to state 81
    alg3                           shift and go to state 33
    int                            shift and go to state 56
    print                          shift and go to state 39
    input                          shift and go to state 7
    mlist                          shift and go to state 61
    equal                          shift and go to state 17
    func                           shift and go to state 83
    float                          shift and go to state 50
    return                         shift and go to state 63

state 114

    (40) equal -> WORD EQUALS . expr
    (42) expr -> . expralg
    (43) expr -> . parttree
    (44) expr -> . alg0
    (45) expr -> . print
    (46) expr -> . varvar
    (47) expr -> . variables
    (48) expr -> . python
    (49) expr -> . execfile
    (50) expr -> . break
    (51) expr -> . curfile
    (52) expr -> . exectext
    (53) expr -> . equal
    (54) expr -> . element
    (55) expr -> . mlist
    (56) expr -> . yield
    (57) expr -> . repeat
    (58) expr -> . return
    (59) expr -> . modules
    (60) expr -> . exfiles
    (61) expr -> . input
    (62) expralg -> . term
    (63) expralg -> . abspath
    (64) expralg -> . invrelpath
    (65) expralg -> . relpath
    (66) expralg -> . relpathbase
    (67) expralg -> . func
    (68) expralg -> . block
    (69) expralg -> . list
    (35) parttree -> . AMPERSAND metaexpr
    (98) alg0 -> . alg1
    (99) alg0 -> . alg0 PLUSMINUS alg1
    (100) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (89) varvar -> . var
    (90) varvar -> . varvar POINT var
    (87) variables -> . VARIABLES expr
    (76) python -> . PYTHON str
    (77) execfile -> . EXECFILE expr
    (34) break -> . BREAK
    (91) curfile -> . CURFILE
    (79) exectext -> . EXECTEXT expr
    (40) equal -> . WORD EQUALS expr
    (85) element -> . expr LBRACKET expr RBRACKET
    (88) mlist -> . MLIST COLON dblock
    (82) yield -> . YIELD
    (84) repeat -> . REPEAT
    (70) return -> . RETURN expr
    (17) modules -> . MODULES
    (93) exfiles -> . EXFILES
    (16) input -> . INPUT
    (71) term -> . str
    (72) term -> . float
    (73) term -> . int
    (74) term -> . var
    (97) abspath -> . ABSPATH
    (96) invrelpath -> . INVRELPATH
    (92) relpath -> . RELPATH
    (94) relpathbase -> . RELPATHBASE
    (19) func -> . WORD LPAREN args RPAREN
    (20) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (32) list -> . LBRACKET comms RBRACKET
    (33) list -> . LBRACKET RBRACKET
    (101) alg1 -> . alg2
    (102) alg1 -> . alg1 DIVMUL alg2
    (86) var -> . WORD
    (83) str -> . STRING
    (81) float -> . FLOAT
    (75) int -> . NUMBER
    (103) alg2 -> . alg3
    (104) alg2 -> . alg2 DPROD alg3
    (105) alg3 -> . expralg

    AMPERSAND       shift and go to state 19
    PLUSMINUS       shift and go to state 8
    PRINT           shift and go to state 51
    VARIABLES       shift and go to state 1
    PYTHON          shift and go to state 2
    EXECFILE        shift and go to state 27
    BREAK           shift and go to state 44
    CURFILE         shift and go to state 45
    EXECTEXT        shift and go to state 66
    WORD            shift and go to state 86
    MLIST           shift and go to state 75
    YIELD           shift and go to state 16
    REPEAT          shift and go to state 65
    RETURN          shift and go to state 71
    MODULES         shift and go to state 78
    EXFILES         shift and go to state 60
    INPUT           shift and go to state 22
    ABSPATH         shift and go to state 41
    INVRELPATH      shift and go to state 57
    RELPATH         shift and go to state 28
    RELPATHBASE     shift and go to state 15
    LBRACE          shift and go to state 14
    LBRACKET        shift and go to state 53
    STRING          shift and go to state 12
    FLOAT           shift and go to state 54
    NUMBER          shift and go to state 67

    list                           shift and go to state 35
    yield                          shift and go to state 11
    relpathbase                    shift and go to state 36
    relpath                        shift and go to state 43
    exectext                       shift and go to state 21
    break                          shift and go to state 38
    parttree                       shift and go to state 68
    block                          shift and go to state 69
    curfile                        shift and go to state 23
    expr                           shift and go to state 135
    invrelpath                     shift and go to state 4
    modules                        shift and go to state 24
    input                          shift and go to state 7
    term                           shift and go to state 42
    exfiles                        shift and go to state 5
    execfile                       shift and go to state 48
    python                         shift and go to state 46
    varvar                         shift and go to state 76
    alg0                           shift and go to state 29
    str                            shift and go to state 37
    var                            shift and go to state 87
    variables                      shift and go to state 18
    expralg                        shift and go to state 52
    element                        shift and go to state 84
    alg1                           shift and go to state 32
    alg2                           shift and go to state 79
    abspath                        shift and go to state 81
    alg3                           shift and go to state 33
    int                            shift and go to state 56
    print                          shift and go to state 39
    repeat                         shift and go to state 26
    mlist                          shift and go to state 61
    equal                          shift and go to state 17
    func                           shift and go to state 83
    float                          shift and go to state 50
    return                         shift and go to state 63

state 115

    (13) declare -> WORD COLON . expr
    (42) expr -> . expralg
    (43) expr -> . parttree
    (44) expr -> . alg0
    (45) expr -> . print
    (46) expr -> . varvar
    (47) expr -> . variables
    (48) expr -> . python
    (49) expr -> . execfile
    (50) expr -> . break
    (51) expr -> . curfile
    (52) expr -> . exectext
    (53) expr -> . equal
    (54) expr -> . element
    (55) expr -> . mlist
    (56) expr -> . yield
    (57) expr -> . repeat
    (58) expr -> . return
    (59) expr -> . modules
    (60) expr -> . exfiles
    (61) expr -> . input
    (62) expralg -> . term
    (63) expralg -> . abspath
    (64) expralg -> . invrelpath
    (65) expralg -> . relpath
    (66) expralg -> . relpathbase
    (67) expralg -> . func
    (68) expralg -> . block
    (69) expralg -> . list
    (35) parttree -> . AMPERSAND metaexpr
    (98) alg0 -> . alg1
    (99) alg0 -> . alg0 PLUSMINUS alg1
    (100) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (89) varvar -> . var
    (90) varvar -> . varvar POINT var
    (87) variables -> . VARIABLES expr
    (76) python -> . PYTHON str
    (77) execfile -> . EXECFILE expr
    (34) break -> . BREAK
    (91) curfile -> . CURFILE
    (79) exectext -> . EXECTEXT expr
    (40) equal -> . WORD EQUALS expr
    (85) element -> . expr LBRACKET expr RBRACKET
    (88) mlist -> . MLIST COLON dblock
    (82) yield -> . YIELD
    (84) repeat -> . REPEAT
    (70) return -> . RETURN expr
    (17) modules -> . MODULES
    (93) exfiles -> . EXFILES
    (16) input -> . INPUT
    (71) term -> . str
    (72) term -> . float
    (73) term -> . int
    (74) term -> . var
    (97) abspath -> . ABSPATH
    (96) invrelpath -> . INVRELPATH
    (92) relpath -> . RELPATH
    (94) relpathbase -> . RELPATHBASE
    (19) func -> . WORD LPAREN args RPAREN
    (20) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (32) list -> . LBRACKET comms RBRACKET
    (33) list -> . LBRACKET RBRACKET
    (101) alg1 -> . alg2
    (102) alg1 -> . alg1 DIVMUL alg2
    (86) var -> . WORD
    (83) str -> . STRING
    (81) float -> . FLOAT
    (75) int -> . NUMBER
    (103) alg2 -> . alg3
    (104) alg2 -> . alg2 DPROD alg3
    (105) alg3 -> . expralg

    AMPERSAND       shift and go to state 19
    PLUSMINUS       shift and go to state 8
    PRINT           shift and go to state 51
    VARIABLES       shift and go to state 1
    PYTHON          shift and go to state 2
    EXECFILE        shift and go to state 27
    BREAK           shift and go to state 44
    CURFILE         shift and go to state 45
    EXECTEXT        shift and go to state 66
    WORD            shift and go to state 86
    MLIST           shift and go to state 75
    YIELD           shift and go to state 16
    REPEAT          shift and go to state 65
    RETURN          shift and go to state 71
    MODULES         shift and go to state 78
    EXFILES         shift and go to state 60
    INPUT           shift and go to state 22
    ABSPATH         shift and go to state 41
    INVRELPATH      shift and go to state 57
    RELPATH         shift and go to state 28
    RELPATHBASE     shift and go to state 15
    LBRACE          shift and go to state 14
    LBRACKET        shift and go to state 53
    STRING          shift and go to state 12
    FLOAT           shift and go to state 54
    NUMBER          shift and go to state 67

    list                           shift and go to state 35
    yield                          shift and go to state 11
    relpathbase                    shift and go to state 36
    relpath                        shift and go to state 43
    exectext                       shift and go to state 21
    break                          shift and go to state 38
    parttree                       shift and go to state 68
    block                          shift and go to state 69
    curfile                        shift and go to state 23
    expr                           shift and go to state 136
    invrelpath                     shift and go to state 4
    modules                        shift and go to state 24
    input                          shift and go to state 7
    term                           shift and go to state 42
    exfiles                        shift and go to state 5
    execfile                       shift and go to state 48
    python                         shift and go to state 46
    varvar                         shift and go to state 76
    alg0                           shift and go to state 29
    str                            shift and go to state 37
    var                            shift and go to state 87
    variables                      shift and go to state 18
    expralg                        shift and go to state 52
    element                        shift and go to state 84
    alg1                           shift and go to state 32
    alg2                           shift and go to state 79
    abspath                        shift and go to state 81
    alg3                           shift and go to state 33
    int                            shift and go to state 56
    print                          shift and go to state 39
    repeat                         shift and go to state 26
    mlist                          shift and go to state 61
    equal                          shift and go to state 17
    func                           shift and go to state 83
    float                          shift and go to state 50
    return                         shift and go to state 63

state 116

    (70) return -> RETURN expr .
    (85) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    DIVIDER         reduce using rule 70 (return -> RETURN expr .)
    $end            reduce using rule 70 (return -> RETURN expr .)
    RBRACE          reduce using rule 70 (return -> RETURN expr .)
    QUESTION        reduce using rule 70 (return -> RETURN expr .)
    RBRACKET        reduce using rule 70 (return -> RETURN expr .)
    COMMA           reduce using rule 70 (return -> RETURN expr .)
    RPAREN          reduce using rule 70 (return -> RETURN expr .)
    COLON           reduce using rule 70 (return -> RETURN expr .)
    LBRACKET        shift and go to state 104

  ! LBRACKET        [ reduce using rule 70 (return -> RETURN expr .) ]


state 117

    (19) func -> WORD . LPAREN args RPAREN
    (20) func -> WORD . LPAREN args RPAREN block

    LPAREN          shift and go to state 113


state 118

    (11) deffunc -> DEFFUNC func . COLON dblock

    COLON           shift and go to state 137


state 119

    (88) mlist -> MLIST COLON . dblock
    (1) dblock -> . block
    (2) dblock -> . divider block
    (3) block -> . LBRACE inblock RBRACE
    (15) divider -> . DIVIDER

    LBRACE          shift and go to state 14
    DIVIDER         shift and go to state 72

    block                          shift and go to state 140
    dblock                         shift and go to state 138
    divider                        shift and go to state 139

state 120

    (90) varvar -> varvar POINT . var
    (86) var -> . WORD

    WORD            shift and go to state 109

    var                            shift and go to state 141

state 121

    (18) append -> var APPEND . expr
    (42) expr -> . expralg
    (43) expr -> . parttree
    (44) expr -> . alg0
    (45) expr -> . print
    (46) expr -> . varvar
    (47) expr -> . variables
    (48) expr -> . python
    (49) expr -> . execfile
    (50) expr -> . break
    (51) expr -> . curfile
    (52) expr -> . exectext
    (53) expr -> . equal
    (54) expr -> . element
    (55) expr -> . mlist
    (56) expr -> . yield
    (57) expr -> . repeat
    (58) expr -> . return
    (59) expr -> . modules
    (60) expr -> . exfiles
    (61) expr -> . input
    (62) expralg -> . term
    (63) expralg -> . abspath
    (64) expralg -> . invrelpath
    (65) expralg -> . relpath
    (66) expralg -> . relpathbase
    (67) expralg -> . func
    (68) expralg -> . block
    (69) expralg -> . list
    (35) parttree -> . AMPERSAND metaexpr
    (98) alg0 -> . alg1
    (99) alg0 -> . alg0 PLUSMINUS alg1
    (100) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (89) varvar -> . var
    (90) varvar -> . varvar POINT var
    (87) variables -> . VARIABLES expr
    (76) python -> . PYTHON str
    (77) execfile -> . EXECFILE expr
    (34) break -> . BREAK
    (91) curfile -> . CURFILE
    (79) exectext -> . EXECTEXT expr
    (40) equal -> . WORD EQUALS expr
    (85) element -> . expr LBRACKET expr RBRACKET
    (88) mlist -> . MLIST COLON dblock
    (82) yield -> . YIELD
    (84) repeat -> . REPEAT
    (70) return -> . RETURN expr
    (17) modules -> . MODULES
    (93) exfiles -> . EXFILES
    (16) input -> . INPUT
    (71) term -> . str
    (72) term -> . float
    (73) term -> . int
    (74) term -> . var
    (97) abspath -> . ABSPATH
    (96) invrelpath -> . INVRELPATH
    (92) relpath -> . RELPATH
    (94) relpathbase -> . RELPATHBASE
    (19) func -> . WORD LPAREN args RPAREN
    (20) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (32) list -> . LBRACKET comms RBRACKET
    (33) list -> . LBRACKET RBRACKET
    (101) alg1 -> . alg2
    (102) alg1 -> . alg1 DIVMUL alg2
    (86) var -> . WORD
    (83) str -> . STRING
    (81) float -> . FLOAT
    (75) int -> . NUMBER
    (103) alg2 -> . alg3
    (104) alg2 -> . alg2 DPROD alg3
    (105) alg3 -> . expralg

    AMPERSAND       shift and go to state 19
    PLUSMINUS       shift and go to state 8
    PRINT           shift and go to state 51
    VARIABLES       shift and go to state 1
    PYTHON          shift and go to state 2
    EXECFILE        shift and go to state 27
    BREAK           shift and go to state 44
    CURFILE         shift and go to state 45
    EXECTEXT        shift and go to state 66
    WORD            shift and go to state 86
    MLIST           shift and go to state 75
    YIELD           shift and go to state 16
    REPEAT          shift and go to state 65
    RETURN          shift and go to state 71
    MODULES         shift and go to state 78
    EXFILES         shift and go to state 60
    INPUT           shift and go to state 22
    ABSPATH         shift and go to state 41
    INVRELPATH      shift and go to state 57
    RELPATH         shift and go to state 28
    RELPATHBASE     shift and go to state 15
    LBRACE          shift and go to state 14
    LBRACKET        shift and go to state 53
    STRING          shift and go to state 12
    FLOAT           shift and go to state 54
    NUMBER          shift and go to state 67

    list                           shift and go to state 35
    var                            shift and go to state 87
    relpathbase                    shift and go to state 36
    relpath                        shift and go to state 43
    exectext                       shift and go to state 21
    break                          shift and go to state 38
    parttree                       shift and go to state 68
    block                          shift and go to state 69
    curfile                        shift and go to state 23
    expr                           shift and go to state 142
    yield                          shift and go to state 11
    modules                        shift and go to state 24
    repeat                         shift and go to state 26
    term                           shift and go to state 42
    exfiles                        shift and go to state 5
    execfile                       shift and go to state 48
    invrelpath                     shift and go to state 4
    python                         shift and go to state 46
    varvar                         shift and go to state 76
    alg0                           shift and go to state 29
    str                            shift and go to state 37
    variables                      shift and go to state 18
    expralg                        shift and go to state 52
    element                        shift and go to state 84
    alg1                           shift and go to state 32
    alg2                           shift and go to state 79
    abspath                        shift and go to state 81
    alg3                           shift and go to state 33
    int                            shift and go to state 56
    print                          shift and go to state 39
    input                          shift and go to state 7
    mlist                          shift and go to state 61
    equal                          shift and go to state 17
    func                           shift and go to state 83
    float                          shift and go to state 50
    return                         shift and go to state 63

state 122

    (104) alg2 -> alg2 DPROD . alg3
    (105) alg3 -> . expralg
    (62) expralg -> . term
    (63) expralg -> . abspath
    (64) expralg -> . invrelpath
    (65) expralg -> . relpath
    (66) expralg -> . relpathbase
    (67) expralg -> . func
    (68) expralg -> . block
    (69) expralg -> . list
    (71) term -> . str
    (72) term -> . float
    (73) term -> . int
    (74) term -> . var
    (97) abspath -> . ABSPATH
    (96) invrelpath -> . INVRELPATH
    (92) relpath -> . RELPATH
    (94) relpathbase -> . RELPATHBASE
    (19) func -> . WORD LPAREN args RPAREN
    (20) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (32) list -> . LBRACKET comms RBRACKET
    (33) list -> . LBRACKET RBRACKET
    (83) str -> . STRING
    (81) float -> . FLOAT
    (75) int -> . NUMBER
    (86) var -> . WORD

    ABSPATH         shift and go to state 41
    INVRELPATH      shift and go to state 57
    RELPATH         shift and go to state 28
    RELPATHBASE     shift and go to state 15
    WORD            shift and go to state 91
    LBRACE          shift and go to state 14
    LBRACKET        shift and go to state 53
    STRING          shift and go to state 12
    FLOAT           shift and go to state 54
    NUMBER          shift and go to state 67

    list                           shift and go to state 35
    float                          shift and go to state 50
    relpathbase                    shift and go to state 36
    str                            shift and go to state 37
    var                            shift and go to state 90
    expralg                        shift and go to state 92
    block                          shift and go to state 69
    alg3                           shift and go to state 143
    invrelpath                     shift and go to state 4
    int                            shift and go to state 56
    abspath                        shift and go to state 81
    term                           shift and go to state 42
    relpath                        shift and go to state 43
    func                           shift and go to state 83

state 123

    (10) module -> MODULE WORD COLON . dblock
    (1) dblock -> . block
    (2) dblock -> . divider block
    (3) block -> . LBRACE inblock RBRACE
    (15) divider -> . DIVIDER

    LBRACE          shift and go to state 14
    DIVIDER         shift and go to state 72

    block                          shift and go to state 140
    dblock                         shift and go to state 144
    divider                        shift and go to state 139

state 124

    (6) inblock -> inblock divider metaexpr .

    DIVIDER         reduce using rule 6 (inblock -> inblock divider metaexpr .)
    $end            reduce using rule 6 (inblock -> inblock divider metaexpr .)
    RBRACE          reduce using rule 6 (inblock -> inblock divider metaexpr .)


state 125

    (3) block -> LBRACE inblock RBRACE .

    LBRACKET        reduce using rule 3 (block -> LBRACE inblock RBRACE .)
    DIVIDER         reduce using rule 3 (block -> LBRACE inblock RBRACE .)
    $end            reduce using rule 3 (block -> LBRACE inblock RBRACE .)
    RBRACE          reduce using rule 3 (block -> LBRACE inblock RBRACE .)
    QUESTION        reduce using rule 3 (block -> LBRACE inblock RBRACE .)
    RBRACKET        reduce using rule 3 (block -> LBRACE inblock RBRACE .)
    COMMA           reduce using rule 3 (block -> LBRACE inblock RBRACE .)
    RPAREN          reduce using rule 3 (block -> LBRACE inblock RBRACE .)
    COLON           reduce using rule 3 (block -> LBRACE inblock RBRACE .)
    DPROD           reduce using rule 3 (block -> LBRACE inblock RBRACE .)
    DIVMUL          reduce using rule 3 (block -> LBRACE inblock RBRACE .)
    PLUSMINUS       reduce using rule 3 (block -> LBRACE inblock RBRACE .)


state 126

    (14) if -> IF expr QUESTION . expr COLON expr
    (42) expr -> . expralg
    (43) expr -> . parttree
    (44) expr -> . alg0
    (45) expr -> . print
    (46) expr -> . varvar
    (47) expr -> . variables
    (48) expr -> . python
    (49) expr -> . execfile
    (50) expr -> . break
    (51) expr -> . curfile
    (52) expr -> . exectext
    (53) expr -> . equal
    (54) expr -> . element
    (55) expr -> . mlist
    (56) expr -> . yield
    (57) expr -> . repeat
    (58) expr -> . return
    (59) expr -> . modules
    (60) expr -> . exfiles
    (61) expr -> . input
    (62) expralg -> . term
    (63) expralg -> . abspath
    (64) expralg -> . invrelpath
    (65) expralg -> . relpath
    (66) expralg -> . relpathbase
    (67) expralg -> . func
    (68) expralg -> . block
    (69) expralg -> . list
    (35) parttree -> . AMPERSAND metaexpr
    (98) alg0 -> . alg1
    (99) alg0 -> . alg0 PLUSMINUS alg1
    (100) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (89) varvar -> . var
    (90) varvar -> . varvar POINT var
    (87) variables -> . VARIABLES expr
    (76) python -> . PYTHON str
    (77) execfile -> . EXECFILE expr
    (34) break -> . BREAK
    (91) curfile -> . CURFILE
    (79) exectext -> . EXECTEXT expr
    (40) equal -> . WORD EQUALS expr
    (85) element -> . expr LBRACKET expr RBRACKET
    (88) mlist -> . MLIST COLON dblock
    (82) yield -> . YIELD
    (84) repeat -> . REPEAT
    (70) return -> . RETURN expr
    (17) modules -> . MODULES
    (93) exfiles -> . EXFILES
    (16) input -> . INPUT
    (71) term -> . str
    (72) term -> . float
    (73) term -> . int
    (74) term -> . var
    (97) abspath -> . ABSPATH
    (96) invrelpath -> . INVRELPATH
    (92) relpath -> . RELPATH
    (94) relpathbase -> . RELPATHBASE
    (19) func -> . WORD LPAREN args RPAREN
    (20) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (32) list -> . LBRACKET comms RBRACKET
    (33) list -> . LBRACKET RBRACKET
    (101) alg1 -> . alg2
    (102) alg1 -> . alg1 DIVMUL alg2
    (86) var -> . WORD
    (83) str -> . STRING
    (81) float -> . FLOAT
    (75) int -> . NUMBER
    (103) alg2 -> . alg3
    (104) alg2 -> . alg2 DPROD alg3
    (105) alg3 -> . expralg

    AMPERSAND       shift and go to state 19
    PLUSMINUS       shift and go to state 8
    PRINT           shift and go to state 51
    VARIABLES       shift and go to state 1
    PYTHON          shift and go to state 2
    EXECFILE        shift and go to state 27
    BREAK           shift and go to state 44
    CURFILE         shift and go to state 45
    EXECTEXT        shift and go to state 66
    WORD            shift and go to state 86
    MLIST           shift and go to state 75
    YIELD           shift and go to state 16
    REPEAT          shift and go to state 65
    RETURN          shift and go to state 71
    MODULES         shift and go to state 78
    EXFILES         shift and go to state 60
    INPUT           shift and go to state 22
    ABSPATH         shift and go to state 41
    INVRELPATH      shift and go to state 57
    RELPATH         shift and go to state 28
    RELPATHBASE     shift and go to state 15
    LBRACE          shift and go to state 14
    LBRACKET        shift and go to state 53
    STRING          shift and go to state 12
    FLOAT           shift and go to state 54
    NUMBER          shift and go to state 67

    list                           shift and go to state 35
    yield                          shift and go to state 11
    relpathbase                    shift and go to state 36
    relpath                        shift and go to state 43
    exectext                       shift and go to state 21
    break                          shift and go to state 38
    parttree                       shift and go to state 68
    block                          shift and go to state 69
    curfile                        shift and go to state 23
    expr                           shift and go to state 145
    invrelpath                     shift and go to state 4
    modules                        shift and go to state 24
    input                          shift and go to state 7
    term                           shift and go to state 42
    exfiles                        shift and go to state 5
    execfile                       shift and go to state 48
    python                         shift and go to state 46
    varvar                         shift and go to state 76
    alg0                           shift and go to state 29
    str                            shift and go to state 37
    var                            shift and go to state 87
    variables                      shift and go to state 18
    expralg                        shift and go to state 52
    element                        shift and go to state 84
    alg1                           shift and go to state 32
    alg2                           shift and go to state 79
    abspath                        shift and go to state 81
    alg3                           shift and go to state 33
    int                            shift and go to state 56
    print                          shift and go to state 39
    repeat                         shift and go to state 26
    mlist                          shift and go to state 61
    equal                          shift and go to state 17
    func                           shift and go to state 83
    float                          shift and go to state 50
    return                         shift and go to state 63

state 127

    (99) alg0 -> alg0 PLUSMINUS alg1 .
    (102) alg1 -> alg1 . DIVMUL alg2

    PLUSMINUS       reduce using rule 99 (alg0 -> alg0 PLUSMINUS alg1 .)
    LBRACKET        reduce using rule 99 (alg0 -> alg0 PLUSMINUS alg1 .)
    RBRACKET        reduce using rule 99 (alg0 -> alg0 PLUSMINUS alg1 .)
    COMMA           reduce using rule 99 (alg0 -> alg0 PLUSMINUS alg1 .)
    DIVIDER         reduce using rule 99 (alg0 -> alg0 PLUSMINUS alg1 .)
    $end            reduce using rule 99 (alg0 -> alg0 PLUSMINUS alg1 .)
    RBRACE          reduce using rule 99 (alg0 -> alg0 PLUSMINUS alg1 .)
    QUESTION        reduce using rule 99 (alg0 -> alg0 PLUSMINUS alg1 .)
    RPAREN          reduce using rule 99 (alg0 -> alg0 PLUSMINUS alg1 .)
    COLON           reduce using rule 99 (alg0 -> alg0 PLUSMINUS alg1 .)
    DIVMUL          shift and go to state 103


state 128

    (102) alg1 -> alg1 DIVMUL alg2 .
    (104) alg2 -> alg2 . DPROD alg3

    DIVMUL          reduce using rule 102 (alg1 -> alg1 DIVMUL alg2 .)
    PLUSMINUS       reduce using rule 102 (alg1 -> alg1 DIVMUL alg2 .)
    LBRACKET        reduce using rule 102 (alg1 -> alg1 DIVMUL alg2 .)
    COMMA           reduce using rule 102 (alg1 -> alg1 DIVMUL alg2 .)
    RPAREN          reduce using rule 102 (alg1 -> alg1 DIVMUL alg2 .)
    DIVIDER         reduce using rule 102 (alg1 -> alg1 DIVMUL alg2 .)
    $end            reduce using rule 102 (alg1 -> alg1 DIVMUL alg2 .)
    RBRACE          reduce using rule 102 (alg1 -> alg1 DIVMUL alg2 .)
    QUESTION        reduce using rule 102 (alg1 -> alg1 DIVMUL alg2 .)
    RBRACKET        reduce using rule 102 (alg1 -> alg1 DIVMUL alg2 .)
    COLON           reduce using rule 102 (alg1 -> alg1 DIVMUL alg2 .)
    DPROD           shift and go to state 122


state 129

    (85) element -> expr LBRACKET expr . RBRACKET
    (85) element -> expr . LBRACKET expr RBRACKET

    RBRACKET        shift and go to state 146
    LBRACKET        shift and go to state 104


state 130

    (39) comms -> comms COMMA . expr
    (42) expr -> . expralg
    (43) expr -> . parttree
    (44) expr -> . alg0
    (45) expr -> . print
    (46) expr -> . varvar
    (47) expr -> . variables
    (48) expr -> . python
    (49) expr -> . execfile
    (50) expr -> . break
    (51) expr -> . curfile
    (52) expr -> . exectext
    (53) expr -> . equal
    (54) expr -> . element
    (55) expr -> . mlist
    (56) expr -> . yield
    (57) expr -> . repeat
    (58) expr -> . return
    (59) expr -> . modules
    (60) expr -> . exfiles
    (61) expr -> . input
    (62) expralg -> . term
    (63) expralg -> . abspath
    (64) expralg -> . invrelpath
    (65) expralg -> . relpath
    (66) expralg -> . relpathbase
    (67) expralg -> . func
    (68) expralg -> . block
    (69) expralg -> . list
    (35) parttree -> . AMPERSAND metaexpr
    (98) alg0 -> . alg1
    (99) alg0 -> . alg0 PLUSMINUS alg1
    (100) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (89) varvar -> . var
    (90) varvar -> . varvar POINT var
    (87) variables -> . VARIABLES expr
    (76) python -> . PYTHON str
    (77) execfile -> . EXECFILE expr
    (34) break -> . BREAK
    (91) curfile -> . CURFILE
    (79) exectext -> . EXECTEXT expr
    (40) equal -> . WORD EQUALS expr
    (85) element -> . expr LBRACKET expr RBRACKET
    (88) mlist -> . MLIST COLON dblock
    (82) yield -> . YIELD
    (84) repeat -> . REPEAT
    (70) return -> . RETURN expr
    (17) modules -> . MODULES
    (93) exfiles -> . EXFILES
    (16) input -> . INPUT
    (71) term -> . str
    (72) term -> . float
    (73) term -> . int
    (74) term -> . var
    (97) abspath -> . ABSPATH
    (96) invrelpath -> . INVRELPATH
    (92) relpath -> . RELPATH
    (94) relpathbase -> . RELPATHBASE
    (19) func -> . WORD LPAREN args RPAREN
    (20) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (32) list -> . LBRACKET comms RBRACKET
    (33) list -> . LBRACKET RBRACKET
    (101) alg1 -> . alg2
    (102) alg1 -> . alg1 DIVMUL alg2
    (86) var -> . WORD
    (83) str -> . STRING
    (81) float -> . FLOAT
    (75) int -> . NUMBER
    (103) alg2 -> . alg3
    (104) alg2 -> . alg2 DPROD alg3
    (105) alg3 -> . expralg

    AMPERSAND       shift and go to state 19
    PLUSMINUS       shift and go to state 8
    PRINT           shift and go to state 51
    VARIABLES       shift and go to state 1
    PYTHON          shift and go to state 2
    EXECFILE        shift and go to state 27
    BREAK           shift and go to state 44
    CURFILE         shift and go to state 45
    EXECTEXT        shift and go to state 66
    WORD            shift and go to state 86
    MLIST           shift and go to state 75
    YIELD           shift and go to state 16
    REPEAT          shift and go to state 65
    RETURN          shift and go to state 71
    MODULES         shift and go to state 78
    EXFILES         shift and go to state 60
    INPUT           shift and go to state 22
    ABSPATH         shift and go to state 41
    INVRELPATH      shift and go to state 57
    RELPATH         shift and go to state 28
    RELPATHBASE     shift and go to state 15
    LBRACE          shift and go to state 14
    LBRACKET        shift and go to state 53
    STRING          shift and go to state 12
    FLOAT           shift and go to state 54
    NUMBER          shift and go to state 67

    list                           shift and go to state 35
    yield                          shift and go to state 11
    relpathbase                    shift and go to state 36
    relpath                        shift and go to state 43
    exectext                       shift and go to state 21
    break                          shift and go to state 38
    parttree                       shift and go to state 68
    block                          shift and go to state 69
    curfile                        shift and go to state 23
    expr                           shift and go to state 147
    invrelpath                     shift and go to state 4
    modules                        shift and go to state 24
    repeat                         shift and go to state 26
    term                           shift and go to state 42
    exfiles                        shift and go to state 5
    execfile                       shift and go to state 48
    python                         shift and go to state 46
    varvar                         shift and go to state 76
    alg0                           shift and go to state 29
    str                            shift and go to state 37
    var                            shift and go to state 87
    variables                      shift and go to state 18
    expralg                        shift and go to state 52
    element                        shift and go to state 84
    alg1                           shift and go to state 32
    alg2                           shift and go to state 79
    abspath                        shift and go to state 81
    alg3                           shift and go to state 33
    int                            shift and go to state 56
    print                          shift and go to state 39
    input                          shift and go to state 7
    mlist                          shift and go to state 61
    equal                          shift and go to state 17
    func                           shift and go to state 83
    float                          shift and go to state 50
    return                         shift and go to state 63

state 131

    (32) list -> LBRACKET comms RBRACKET .

    LBRACKET        reduce using rule 32 (list -> LBRACKET comms RBRACKET .)
    DIVIDER         reduce using rule 32 (list -> LBRACKET comms RBRACKET .)
    $end            reduce using rule 32 (list -> LBRACKET comms RBRACKET .)
    RBRACE          reduce using rule 32 (list -> LBRACKET comms RBRACKET .)
    QUESTION        reduce using rule 32 (list -> LBRACKET comms RBRACKET .)
    RBRACKET        reduce using rule 32 (list -> LBRACKET comms RBRACKET .)
    COMMA           reduce using rule 32 (list -> LBRACKET comms RBRACKET .)
    RPAREN          reduce using rule 32 (list -> LBRACKET comms RBRACKET .)
    COLON           reduce using rule 32 (list -> LBRACKET comms RBRACKET .)
    DPROD           reduce using rule 32 (list -> LBRACKET comms RBRACKET .)
    DIVMUL          reduce using rule 32 (list -> LBRACKET comms RBRACKET .)
    PLUSMINUS       reduce using rule 32 (list -> LBRACKET comms RBRACKET .)


state 132

    (12) define -> DEFINE WORD expr .
    (85) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    RBRACE          reduce using rule 12 (define -> DEFINE WORD expr .)
    DIVIDER         reduce using rule 12 (define -> DEFINE WORD expr .)
    $end            reduce using rule 12 (define -> DEFINE WORD expr .)
    QUESTION        reduce using rule 12 (define -> DEFINE WORD expr .)
    RBRACKET        reduce using rule 12 (define -> DEFINE WORD expr .)
    COMMA           reduce using rule 12 (define -> DEFINE WORD expr .)
    RPAREN          reduce using rule 12 (define -> DEFINE WORD expr .)
    COLON           reduce using rule 12 (define -> DEFINE WORD expr .)
    LBRACKET        shift and go to state 104

  ! LBRACKET        [ reduce using rule 12 (define -> DEFINE WORD expr .) ]


state 133

    (19) func -> WORD LPAREN args . RPAREN
    (20) func -> WORD LPAREN args . RPAREN block

    RPAREN          shift and go to state 148


state 134

    (37) args -> comms .
    (39) comms -> comms . COMMA expr

    RPAREN          reduce using rule 37 (args -> comms .)
    COMMA           shift and go to state 130


state 135

    (40) equal -> WORD EQUALS expr .
    (85) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    DIVIDER         reduce using rule 40 (equal -> WORD EQUALS expr .)
    $end            reduce using rule 40 (equal -> WORD EQUALS expr .)
    RBRACE          reduce using rule 40 (equal -> WORD EQUALS expr .)
    QUESTION        reduce using rule 40 (equal -> WORD EQUALS expr .)
    RBRACKET        reduce using rule 40 (equal -> WORD EQUALS expr .)
    COMMA           reduce using rule 40 (equal -> WORD EQUALS expr .)
    RPAREN          reduce using rule 40 (equal -> WORD EQUALS expr .)
    COLON           reduce using rule 40 (equal -> WORD EQUALS expr .)
    LBRACKET        shift and go to state 104

  ! LBRACKET        [ reduce using rule 40 (equal -> WORD EQUALS expr .) ]


state 136

    (13) declare -> WORD COLON expr .
    (85) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    DIVIDER         reduce using rule 13 (declare -> WORD COLON expr .)
    $end            reduce using rule 13 (declare -> WORD COLON expr .)
    RBRACE          reduce using rule 13 (declare -> WORD COLON expr .)
    QUESTION        reduce using rule 13 (declare -> WORD COLON expr .)
    RBRACKET        reduce using rule 13 (declare -> WORD COLON expr .)
    COMMA           reduce using rule 13 (declare -> WORD COLON expr .)
    RPAREN          reduce using rule 13 (declare -> WORD COLON expr .)
    COLON           reduce using rule 13 (declare -> WORD COLON expr .)
    LBRACKET        shift and go to state 104

  ! LBRACKET        [ reduce using rule 13 (declare -> WORD COLON expr .) ]


state 137

    (11) deffunc -> DEFFUNC func COLON . dblock
    (1) dblock -> . block
    (2) dblock -> . divider block
    (3) block -> . LBRACE inblock RBRACE
    (15) divider -> . DIVIDER

    LBRACE          shift and go to state 14
    DIVIDER         shift and go to state 72

    block                          shift and go to state 140
    dblock                         shift and go to state 149
    divider                        shift and go to state 139

state 138

    (88) mlist -> MLIST COLON dblock .

    LBRACKET        reduce using rule 88 (mlist -> MLIST COLON dblock .)
    DIVIDER         reduce using rule 88 (mlist -> MLIST COLON dblock .)
    $end            reduce using rule 88 (mlist -> MLIST COLON dblock .)
    RBRACE          reduce using rule 88 (mlist -> MLIST COLON dblock .)
    QUESTION        reduce using rule 88 (mlist -> MLIST COLON dblock .)
    RBRACKET        reduce using rule 88 (mlist -> MLIST COLON dblock .)
    COMMA           reduce using rule 88 (mlist -> MLIST COLON dblock .)
    RPAREN          reduce using rule 88 (mlist -> MLIST COLON dblock .)
    COLON           reduce using rule 88 (mlist -> MLIST COLON dblock .)


state 139

    (2) dblock -> divider . block
    (3) block -> . LBRACE inblock RBRACE

    LBRACE          shift and go to state 14

    block                          shift and go to state 150

state 140

    (1) dblock -> block .

    LBRACKET        reduce using rule 1 (dblock -> block .)
    DIVIDER         reduce using rule 1 (dblock -> block .)
    $end            reduce using rule 1 (dblock -> block .)
    RBRACE          reduce using rule 1 (dblock -> block .)
    QUESTION        reduce using rule 1 (dblock -> block .)
    RBRACKET        reduce using rule 1 (dblock -> block .)
    COMMA           reduce using rule 1 (dblock -> block .)
    RPAREN          reduce using rule 1 (dblock -> block .)
    COLON           reduce using rule 1 (dblock -> block .)


state 141

    (90) varvar -> varvar POINT var .

    POINT           reduce using rule 90 (varvar -> varvar POINT var .)
    LBRACKET        reduce using rule 90 (varvar -> varvar POINT var .)
    DIVIDER         reduce using rule 90 (varvar -> varvar POINT var .)
    $end            reduce using rule 90 (varvar -> varvar POINT var .)
    RBRACE          reduce using rule 90 (varvar -> varvar POINT var .)
    QUESTION        reduce using rule 90 (varvar -> varvar POINT var .)
    RBRACKET        reduce using rule 90 (varvar -> varvar POINT var .)
    COMMA           reduce using rule 90 (varvar -> varvar POINT var .)
    RPAREN          reduce using rule 90 (varvar -> varvar POINT var .)
    COLON           reduce using rule 90 (varvar -> varvar POINT var .)


state 142

    (18) append -> var APPEND expr .
    (85) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    DIVIDER         reduce using rule 18 (append -> var APPEND expr .)
    $end            reduce using rule 18 (append -> var APPEND expr .)
    RBRACE          reduce using rule 18 (append -> var APPEND expr .)
    QUESTION        reduce using rule 18 (append -> var APPEND expr .)
    RBRACKET        reduce using rule 18 (append -> var APPEND expr .)
    COMMA           reduce using rule 18 (append -> var APPEND expr .)
    RPAREN          reduce using rule 18 (append -> var APPEND expr .)
    COLON           reduce using rule 18 (append -> var APPEND expr .)
    LBRACKET        shift and go to state 104

  ! LBRACKET        [ reduce using rule 18 (append -> var APPEND expr .) ]


state 143

    (104) alg2 -> alg2 DPROD alg3 .

    DPROD           reduce using rule 104 (alg2 -> alg2 DPROD alg3 .)
    DIVMUL          reduce using rule 104 (alg2 -> alg2 DPROD alg3 .)
    PLUSMINUS       reduce using rule 104 (alg2 -> alg2 DPROD alg3 .)
    LBRACKET        reduce using rule 104 (alg2 -> alg2 DPROD alg3 .)
    DIVIDER         reduce using rule 104 (alg2 -> alg2 DPROD alg3 .)
    $end            reduce using rule 104 (alg2 -> alg2 DPROD alg3 .)
    RBRACE          reduce using rule 104 (alg2 -> alg2 DPROD alg3 .)
    QUESTION        reduce using rule 104 (alg2 -> alg2 DPROD alg3 .)
    RBRACKET        reduce using rule 104 (alg2 -> alg2 DPROD alg3 .)
    COMMA           reduce using rule 104 (alg2 -> alg2 DPROD alg3 .)
    RPAREN          reduce using rule 104 (alg2 -> alg2 DPROD alg3 .)
    COLON           reduce using rule 104 (alg2 -> alg2 DPROD alg3 .)


state 144

    (10) module -> MODULE WORD COLON dblock .

    DIVIDER         reduce using rule 10 (module -> MODULE WORD COLON dblock .)
    $end            reduce using rule 10 (module -> MODULE WORD COLON dblock .)
    RBRACE          reduce using rule 10 (module -> MODULE WORD COLON dblock .)
    LBRACKET        reduce using rule 10 (module -> MODULE WORD COLON dblock .)
    QUESTION        reduce using rule 10 (module -> MODULE WORD COLON dblock .)
    RBRACKET        reduce using rule 10 (module -> MODULE WORD COLON dblock .)
    COMMA           reduce using rule 10 (module -> MODULE WORD COLON dblock .)
    RPAREN          reduce using rule 10 (module -> MODULE WORD COLON dblock .)
    COLON           reduce using rule 10 (module -> MODULE WORD COLON dblock .)


state 145

    (14) if -> IF expr QUESTION expr . COLON expr
    (85) element -> expr . LBRACKET expr RBRACKET

    COLON           shift and go to state 151
    LBRACKET        shift and go to state 104


state 146

    (85) element -> expr LBRACKET expr RBRACKET .

    LBRACKET        reduce using rule 85 (element -> expr LBRACKET expr RBRACKET .)
    DIVIDER         reduce using rule 85 (element -> expr LBRACKET expr RBRACKET .)
    $end            reduce using rule 85 (element -> expr LBRACKET expr RBRACKET .)
    RBRACE          reduce using rule 85 (element -> expr LBRACKET expr RBRACKET .)
    QUESTION        reduce using rule 85 (element -> expr LBRACKET expr RBRACKET .)
    RBRACKET        reduce using rule 85 (element -> expr LBRACKET expr RBRACKET .)
    COMMA           reduce using rule 85 (element -> expr LBRACKET expr RBRACKET .)
    RPAREN          reduce using rule 85 (element -> expr LBRACKET expr RBRACKET .)
    COLON           reduce using rule 85 (element -> expr LBRACKET expr RBRACKET .)


state 147

    (39) comms -> comms COMMA expr .
    (85) element -> expr . LBRACKET expr RBRACKET

    RBRACKET        reduce using rule 39 (comms -> comms COMMA expr .)
    COMMA           reduce using rule 39 (comms -> comms COMMA expr .)
    RPAREN          reduce using rule 39 (comms -> comms COMMA expr .)
    LBRACKET        shift and go to state 104


state 148

    (19) func -> WORD LPAREN args RPAREN .
    (20) func -> WORD LPAREN args RPAREN . block
    (3) block -> . LBRACE inblock RBRACE

    RBRACKET        reduce using rule 19 (func -> WORD LPAREN args RPAREN .)
    LBRACKET        reduce using rule 19 (func -> WORD LPAREN args RPAREN .)
    DPROD           reduce using rule 19 (func -> WORD LPAREN args RPAREN .)
    DIVMUL          reduce using rule 19 (func -> WORD LPAREN args RPAREN .)
    PLUSMINUS       reduce using rule 19 (func -> WORD LPAREN args RPAREN .)
    DIVIDER         reduce using rule 19 (func -> WORD LPAREN args RPAREN .)
    $end            reduce using rule 19 (func -> WORD LPAREN args RPAREN .)
    RBRACE          reduce using rule 19 (func -> WORD LPAREN args RPAREN .)
    QUESTION        reduce using rule 19 (func -> WORD LPAREN args RPAREN .)
    COMMA           reduce using rule 19 (func -> WORD LPAREN args RPAREN .)
    RPAREN          reduce using rule 19 (func -> WORD LPAREN args RPAREN .)
    COLON           reduce using rule 19 (func -> WORD LPAREN args RPAREN .)
    LBRACE          shift and go to state 14

    block                          shift and go to state 152

state 149

    (11) deffunc -> DEFFUNC func COLON dblock .

    LBRACKET        reduce using rule 11 (deffunc -> DEFFUNC func COLON dblock .)
    DIVIDER         reduce using rule 11 (deffunc -> DEFFUNC func COLON dblock .)
    $end            reduce using rule 11 (deffunc -> DEFFUNC func COLON dblock .)
    RBRACE          reduce using rule 11 (deffunc -> DEFFUNC func COLON dblock .)
    QUESTION        reduce using rule 11 (deffunc -> DEFFUNC func COLON dblock .)
    RBRACKET        reduce using rule 11 (deffunc -> DEFFUNC func COLON dblock .)
    COMMA           reduce using rule 11 (deffunc -> DEFFUNC func COLON dblock .)
    RPAREN          reduce using rule 11 (deffunc -> DEFFUNC func COLON dblock .)
    COLON           reduce using rule 11 (deffunc -> DEFFUNC func COLON dblock .)


state 150

    (2) dblock -> divider block .

    LBRACKET        reduce using rule 2 (dblock -> divider block .)
    DIVIDER         reduce using rule 2 (dblock -> divider block .)
    $end            reduce using rule 2 (dblock -> divider block .)
    RBRACE          reduce using rule 2 (dblock -> divider block .)
    QUESTION        reduce using rule 2 (dblock -> divider block .)
    RBRACKET        reduce using rule 2 (dblock -> divider block .)
    COMMA           reduce using rule 2 (dblock -> divider block .)
    RPAREN          reduce using rule 2 (dblock -> divider block .)
    COLON           reduce using rule 2 (dblock -> divider block .)


state 151

    (14) if -> IF expr QUESTION expr COLON . expr
    (42) expr -> . expralg
    (43) expr -> . parttree
    (44) expr -> . alg0
    (45) expr -> . print
    (46) expr -> . varvar
    (47) expr -> . variables
    (48) expr -> . python
    (49) expr -> . execfile
    (50) expr -> . break
    (51) expr -> . curfile
    (52) expr -> . exectext
    (53) expr -> . equal
    (54) expr -> . element
    (55) expr -> . mlist
    (56) expr -> . yield
    (57) expr -> . repeat
    (58) expr -> . return
    (59) expr -> . modules
    (60) expr -> . exfiles
    (61) expr -> . input
    (62) expralg -> . term
    (63) expralg -> . abspath
    (64) expralg -> . invrelpath
    (65) expralg -> . relpath
    (66) expralg -> . relpathbase
    (67) expralg -> . func
    (68) expralg -> . block
    (69) expralg -> . list
    (35) parttree -> . AMPERSAND metaexpr
    (98) alg0 -> . alg1
    (99) alg0 -> . alg0 PLUSMINUS alg1
    (100) alg0 -> . PLUSMINUS alg1
    (9) print -> . PRINT expr
    (89) varvar -> . var
    (90) varvar -> . varvar POINT var
    (87) variables -> . VARIABLES expr
    (76) python -> . PYTHON str
    (77) execfile -> . EXECFILE expr
    (34) break -> . BREAK
    (91) curfile -> . CURFILE
    (79) exectext -> . EXECTEXT expr
    (40) equal -> . WORD EQUALS expr
    (85) element -> . expr LBRACKET expr RBRACKET
    (88) mlist -> . MLIST COLON dblock
    (82) yield -> . YIELD
    (84) repeat -> . REPEAT
    (70) return -> . RETURN expr
    (17) modules -> . MODULES
    (93) exfiles -> . EXFILES
    (16) input -> . INPUT
    (71) term -> . str
    (72) term -> . float
    (73) term -> . int
    (74) term -> . var
    (97) abspath -> . ABSPATH
    (96) invrelpath -> . INVRELPATH
    (92) relpath -> . RELPATH
    (94) relpathbase -> . RELPATHBASE
    (19) func -> . WORD LPAREN args RPAREN
    (20) func -> . WORD LPAREN args RPAREN block
    (3) block -> . LBRACE inblock RBRACE
    (32) list -> . LBRACKET comms RBRACKET
    (33) list -> . LBRACKET RBRACKET
    (101) alg1 -> . alg2
    (102) alg1 -> . alg1 DIVMUL alg2
    (86) var -> . WORD
    (83) str -> . STRING
    (81) float -> . FLOAT
    (75) int -> . NUMBER
    (103) alg2 -> . alg3
    (104) alg2 -> . alg2 DPROD alg3
    (105) alg3 -> . expralg

    AMPERSAND       shift and go to state 19
    PLUSMINUS       shift and go to state 8
    PRINT           shift and go to state 51
    VARIABLES       shift and go to state 1
    PYTHON          shift and go to state 2
    EXECFILE        shift and go to state 27
    BREAK           shift and go to state 44
    CURFILE         shift and go to state 45
    EXECTEXT        shift and go to state 66
    WORD            shift and go to state 86
    MLIST           shift and go to state 75
    YIELD           shift and go to state 16
    REPEAT          shift and go to state 65
    RETURN          shift and go to state 71
    MODULES         shift and go to state 78
    EXFILES         shift and go to state 60
    INPUT           shift and go to state 22
    ABSPATH         shift and go to state 41
    INVRELPATH      shift and go to state 57
    RELPATH         shift and go to state 28
    RELPATHBASE     shift and go to state 15
    LBRACE          shift and go to state 14
    LBRACKET        shift and go to state 53
    STRING          shift and go to state 12
    FLOAT           shift and go to state 54
    NUMBER          shift and go to state 67

    list                           shift and go to state 35
    yield                          shift and go to state 11
    relpathbase                    shift and go to state 36
    relpath                        shift and go to state 43
    exectext                       shift and go to state 21
    break                          shift and go to state 38
    parttree                       shift and go to state 68
    block                          shift and go to state 69
    curfile                        shift and go to state 23
    expr                           shift and go to state 153
    invrelpath                     shift and go to state 4
    modules                        shift and go to state 24
    input                          shift and go to state 7
    term                           shift and go to state 42
    exfiles                        shift and go to state 5
    execfile                       shift and go to state 48
    python                         shift and go to state 46
    varvar                         shift and go to state 76
    alg0                           shift and go to state 29
    str                            shift and go to state 37
    var                            shift and go to state 87
    variables                      shift and go to state 18
    expralg                        shift and go to state 52
    element                        shift and go to state 84
    alg1                           shift and go to state 32
    alg2                           shift and go to state 79
    abspath                        shift and go to state 81
    alg3                           shift and go to state 33
    int                            shift and go to state 56
    print                          shift and go to state 39
    repeat                         shift and go to state 26
    mlist                          shift and go to state 61
    equal                          shift and go to state 17
    func                           shift and go to state 83
    float                          shift and go to state 50
    return                         shift and go to state 63

state 152

    (20) func -> WORD LPAREN args RPAREN block .

    RBRACKET        reduce using rule 20 (func -> WORD LPAREN args RPAREN block .)
    LBRACKET        reduce using rule 20 (func -> WORD LPAREN args RPAREN block .)
    DPROD           reduce using rule 20 (func -> WORD LPAREN args RPAREN block .)
    DIVMUL          reduce using rule 20 (func -> WORD LPAREN args RPAREN block .)
    PLUSMINUS       reduce using rule 20 (func -> WORD LPAREN args RPAREN block .)
    DIVIDER         reduce using rule 20 (func -> WORD LPAREN args RPAREN block .)
    $end            reduce using rule 20 (func -> WORD LPAREN args RPAREN block .)
    RBRACE          reduce using rule 20 (func -> WORD LPAREN args RPAREN block .)
    QUESTION        reduce using rule 20 (func -> WORD LPAREN args RPAREN block .)
    COMMA           reduce using rule 20 (func -> WORD LPAREN args RPAREN block .)
    RPAREN          reduce using rule 20 (func -> WORD LPAREN args RPAREN block .)
    COLON           reduce using rule 20 (func -> WORD LPAREN args RPAREN block .)


state 153

    (14) if -> IF expr QUESTION expr COLON expr .
    (85) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    DIVIDER         reduce using rule 14 (if -> IF expr QUESTION expr COLON expr .)
    $end            reduce using rule 14 (if -> IF expr QUESTION expr COLON expr .)
    RBRACE          reduce using rule 14 (if -> IF expr QUESTION expr COLON expr .)
    QUESTION        reduce using rule 14 (if -> IF expr QUESTION expr COLON expr .)
    RBRACKET        reduce using rule 14 (if -> IF expr QUESTION expr COLON expr .)
    COMMA           reduce using rule 14 (if -> IF expr QUESTION expr COLON expr .)
    RPAREN          reduce using rule 14 (if -> IF expr QUESTION expr COLON expr .)
    COLON           reduce using rule 14 (if -> IF expr QUESTION expr COLON expr .)
    LBRACKET        shift and go to state 104

  ! LBRACKET        [ reduce using rule 14 (if -> IF expr QUESTION expr COLON expr .) ]

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for DIVIDER in state 0 resolved as shift
WARNING: shift/reduce conflict for DIVIDER in state 14 resolved as shift
WARNING: shift/reduce conflict for DIVIDER in state 31 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 40 resolved as shift
WARNING: shift/reduce conflict for COLON in state 70 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 85 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 94 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 99 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 101 resolved as shift
WARNING: shift/reduce conflict for DIVIDER in state 102 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 105 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 112 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 116 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 132 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 135 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 136 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 142 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 153 resolved as shift
WARNING: reduce/reduce conflict in state 52 resolved using rule (expr -> expralg)
WARNING: rejected rule (alg3 -> expralg) in state 52
WARNING: reduce/reduce conflict in state 77 resolved using rule (term -> var)
WARNING: rejected rule (varvar -> var) in state 77
WARNING: reduce/reduce conflict in state 87 resolved using rule (term -> var)
WARNING: rejected rule (varvar -> var) in state 87
