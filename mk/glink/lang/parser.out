Created by PLY version 3.7 (http://www.dabeaz.com/ply)

Unused terminals:

    WRONGSTRING
    IN
    DOUBLECOLON
    NEWLINE
    APLICATION
    SEMI
    HEXNUMBER
    SUPERWORD
    BINNUMBER
    MPROD
    OR

Grammar

Rule 0     S' -> inblock
Rule 1     block -> LBRACE inblock RBRACE
Rule 2     inblock -> metaexpr
Rule 3     inblock -> inblock divider metaexpr
Rule 4     inblock -> divider inblock
Rule 5     inblock -> inblock divider
Rule 6     print -> PRINT expr
Rule 7     module -> MODULE WORD block
Rule 8     deffunc -> DEFFUNC WORD LPAREN args RPAREN block
Rule 9     define -> DEFINE WORD expr
Rule 10    define -> WORD DEFOP expr
Rule 11    dict -> LBRACE declares RBRACE
Rule 12    dict -> LBRACE RBRACE
Rule 13    declares -> declare
Rule 14    declares -> declares COMMA declare
Rule 15    declare -> expr COLON expr
Rule 16    if -> IF expr QUESTION expr COLON expr
Rule 17    divider -> DIVIDER
Rule 18    input -> INPUT
Rule 19    modules -> MODULES
Rule 20    append -> var APPEND expr
Rule 21    func -> WORD LPAREN args RPAREN block
Rule 22    func -> WORD LPAREN args RPAREN
Rule 23    metaexpr -> expr
Rule 24    metaexpr -> deffunc
Rule 25    metaexpr -> module
Rule 26    metaexpr -> application
Rule 27    metaexpr -> declare
Rule 28    metaexpr -> append
Rule 29    metaexpr -> define
Rule 30    metaexpr -> execscan
Rule 31    metaexpr -> compile
Rule 32    metaexpr -> downlevel
Rule 33    metaexpr -> if
Rule 34    list -> LBRACKET comms RBRACKET
Rule 35    list -> LBRACKET RBRACKET
Rule 36    break -> BREAK
Rule 37    parttree -> AMPERSAND metaexpr
Rule 38    args -> <empty>
Rule 39    args -> comms
Rule 40    comms -> expr
Rule 41    comms -> comms COMMA expr
Rule 42    equal -> WORD EQUALS expr
Rule 43    dequal -> element EQUALS expr
Rule 44    application -> APPLICATION WORD block
Rule 45    expr -> expralg
Rule 46    expr -> parttree
Rule 47    expr -> alg0
Rule 48    expr -> print
Rule 49    expr -> varvar
Rule 50    expr -> variables
Rule 51    expr -> python
Rule 52    expr -> execfile
Rule 53    expr -> break
Rule 54    expr -> curfile
Rule 55    expr -> exectext
Rule 56    expr -> equal
Rule 57    expr -> dequal
Rule 58    expr -> element
Rule 59    expr -> mlist
Rule 60    expr -> evaluate
Rule 61    expr -> yield
Rule 62    expr -> repeat
Rule 63    expr -> pass
Rule 64    expr -> dict
Rule 65    expr -> return
Rule 66    expr -> modules
Rule 67    expr -> exfiles
Rule 68    expr -> input
Rule 69    expralg -> term
Rule 70    expralg -> abspath
Rule 71    expralg -> invrelpath
Rule 72    expralg -> relpath
Rule 73    expralg -> relpathbase
Rule 74    expralg -> func
Rule 75    expralg -> block
Rule 76    expralg -> list
Rule 77    return -> RETURN expr
Rule 78    term -> str
Rule 79    term -> float
Rule 80    term -> int
Rule 81    term -> var
Rule 82    int -> NUMBER
Rule 83    python -> PYTHON str
Rule 84    execfile -> EXECFILE expr
Rule 85    evaluate -> EVALUATE expr
Rule 86    execscan -> EXECSCAN expr
Rule 87    exectext -> EXECTEXT expr
Rule 88    downlevel -> DOWNLEVEL expr
Rule 89    float -> FLOAT
Rule 90    yield -> YIELD
Rule 91    str -> STRING
Rule 92    repeat -> REPEAT
Rule 93    element -> expr LBRACKET expr RBRACKET
Rule 94    var -> WORD
Rule 95    variables -> VARIABLES expr
Rule 96    mlist -> MLIST COLON block
Rule 97    varvar -> var
Rule 98    varvar -> varvar POINT var
Rule 99    curfile -> CURFILE
Rule 100   relpath -> RELPATH
Rule 101   exfiles -> EXFILES
Rule 102   relpathbase -> RELPATHBASE
Rule 103   compile -> COMPILE
Rule 104   pass -> PASS
Rule 105   invrelpath -> INVRELPATH
Rule 106   abspath -> ABSPATH
Rule 107   alg0 -> alg1
Rule 108   alg0 -> alg0 PLUSMINUS alg1
Rule 109   alg0 -> PLUSMINUS alg1
Rule 110   alg1 -> alg2
Rule 111   alg1 -> alg1 DIVMUL alg2
Rule 112   alg2 -> alg3
Rule 113   alg2 -> alg2 DPROD alg3
Rule 114   alg3 -> expralg

Terminals, with rules where they appear

ABSPATH              : 106
AMPERSAND            : 37
APLICATION           : 
APPEND               : 20
APPLICATION          : 44
BINNUMBER            : 
BREAK                : 36
COLON                : 15 16 96
COMMA                : 14 41
COMPILE              : 103
CURFILE              : 99
DEFFUNC              : 8
DEFINE               : 9
DEFOP                : 10
DIVIDER              : 17
DIVMUL               : 111
DOUBLECOLON          : 
DOWNLEVEL            : 88
DPROD                : 113
EQUALS               : 42 43
EVALUATE             : 85
EXECFILE             : 84
EXECSCAN             : 86
EXECTEXT             : 87
EXFILES              : 101
FLOAT                : 89
HEXNUMBER            : 
IF                   : 16
IN                   : 
INPUT                : 18
INVRELPATH           : 105
LBRACE               : 1 11 12
LBRACKET             : 34 35 93
LPAREN               : 8 21 22
MLIST                : 96
MODULE               : 7
MODULES              : 19
MPROD                : 
NEWLINE              : 
NUMBER               : 82
OR                   : 
PASS                 : 104
PLUSMINUS            : 108 109
POINT                : 98
PRINT                : 6
PYTHON               : 83
QUESTION             : 16
RBRACE               : 1 11 12
RBRACKET             : 34 35 93
RELPATH              : 100
RELPATHBASE          : 102
REPEAT               : 92
RETURN               : 77
RPAREN               : 8 21 22
SEMI                 : 
STRING               : 91
SUPERWORD            : 
VARIABLES            : 95
WORD                 : 7 8 9 10 21 22 42 44 94
WRONGSTRING          : 
YIELD                : 90
error                : 

Nonterminals, with rules where they appear

abspath              : 70
alg0                 : 47 108
alg1                 : 107 108 109 111
alg2                 : 110 111 113
alg3                 : 112 113
append               : 28
application          : 26
args                 : 8 21 22
block                : 7 8 21 44 75 96
break                : 53
comms                : 34 39 41
compile              : 31
curfile              : 54
declare              : 13 14 27
declares             : 11 14
deffunc              : 24
define               : 29
dequal               : 57
dict                 : 64
divider              : 3 4 5
downlevel            : 32
element              : 43 58
equal                : 56
evaluate             : 60
execfile             : 52
execscan             : 30
exectext             : 55
exfiles              : 67
expr                 : 6 9 10 15 15 16 16 16 20 23 40 41 42 43 77 84 85 86 87 88 93 93 95
expralg              : 45 114
float                : 79
func                 : 74
if                   : 33
inblock              : 1 3 4 5 0
input                : 68
int                  : 80
invrelpath           : 71
list                 : 76
metaexpr             : 2 3 37
mlist                : 59
module               : 25
modules              : 66
parttree             : 46
pass                 : 63
print                : 48
python               : 51
relpath              : 72
relpathbase          : 73
repeat               : 62
return               : 65
str                  : 78 83
term                 : 69
var                  : 20 81 97 98
variables            : 50
varvar               : 49 98
yield                : 61

Parsing method: LALR

state 0

    (0) S' -> . inblock
    (2) inblock -> . metaexpr
    (3) inblock -> . inblock divider metaexpr
    (4) inblock -> . divider inblock
    (5) inblock -> . inblock divider
    (23) metaexpr -> . expr
    (24) metaexpr -> . deffunc
    (25) metaexpr -> . module
    (26) metaexpr -> . application
    (27) metaexpr -> . declare
    (28) metaexpr -> . append
    (29) metaexpr -> . define
    (30) metaexpr -> . execscan
    (31) metaexpr -> . compile
    (32) metaexpr -> . downlevel
    (33) metaexpr -> . if
    (17) divider -> . DIVIDER
    (45) expr -> . expralg
    (46) expr -> . parttree
    (47) expr -> . alg0
    (48) expr -> . print
    (49) expr -> . varvar
    (50) expr -> . variables
    (51) expr -> . python
    (52) expr -> . execfile
    (53) expr -> . break
    (54) expr -> . curfile
    (55) expr -> . exectext
    (56) expr -> . equal
    (57) expr -> . dequal
    (58) expr -> . element
    (59) expr -> . mlist
    (60) expr -> . evaluate
    (61) expr -> . yield
    (62) expr -> . repeat
    (63) expr -> . pass
    (64) expr -> . dict
    (65) expr -> . return
    (66) expr -> . modules
    (67) expr -> . exfiles
    (68) expr -> . input
    (8) deffunc -> . DEFFUNC WORD LPAREN args RPAREN block
    (7) module -> . MODULE WORD block
    (44) application -> . APPLICATION WORD block
    (15) declare -> . expr COLON expr
    (20) append -> . var APPEND expr
    (9) define -> . DEFINE WORD expr
    (10) define -> . WORD DEFOP expr
    (86) execscan -> . EXECSCAN expr
    (103) compile -> . COMPILE
    (88) downlevel -> . DOWNLEVEL expr
    (16) if -> . IF expr QUESTION expr COLON expr
    (69) expralg -> . term
    (70) expralg -> . abspath
    (71) expralg -> . invrelpath
    (72) expralg -> . relpath
    (73) expralg -> . relpathbase
    (74) expralg -> . func
    (75) expralg -> . block
    (76) expralg -> . list
    (37) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (83) python -> . PYTHON str
    (84) execfile -> . EXECFILE expr
    (36) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (42) equal -> . WORD EQUALS expr
    (43) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON block
    (85) evaluate -> . EVALUATE expr
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (77) return -> . RETURN expr
    (19) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (18) input -> . INPUT
    (94) var -> . WORD
    (78) term -> . str
    (79) term -> . float
    (80) term -> . int
    (81) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (21) func -> . WORD LPAREN args RPAREN block
    (22) func -> . WORD LPAREN args RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (34) list -> . LBRACKET comms RBRACKET
    (35) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (91) str -> . STRING
    (89) float -> . FLOAT
    (82) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    DIVIDER         shift and go to state 54
    DEFFUNC         shift and go to state 37
    MODULE          shift and go to state 5
    APPLICATION     shift and go to state 29
    DEFINE          shift and go to state 22
    WORD            shift and go to state 19
    EXECSCAN        shift and go to state 72
    COMPILE         shift and go to state 63
    DOWNLEVEL       shift and go to state 25
    IF              shift and go to state 11
    AMPERSAND       shift and go to state 62
    PLUSMINUS       shift and go to state 68
    PRINT           shift and go to state 53
    VARIABLES       shift and go to state 65
    PYTHON          shift and go to state 59
    EXECFILE        shift and go to state 83
    BREAK           shift and go to state 90
    CURFILE         shift and go to state 3
    EXECTEXT        shift and go to state 78
    MLIST           shift and go to state 64
    EVALUATE        shift and go to state 50
    YIELD           shift and go to state 45
    REPEAT          shift and go to state 81
    PASS            shift and go to state 42
    LBRACE          shift and go to state 43
    RETURN          shift and go to state 28
    MODULES         shift and go to state 47
    EXFILES         shift and go to state 74
    INPUT           shift and go to state 79
    ABSPATH         shift and go to state 20
    INVRELPATH      shift and go to state 49
    RELPATH         shift and go to state 36
    RELPATHBASE     shift and go to state 52
    LBRACKET        shift and go to state 27
    STRING          shift and go to state 73
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 39

    python                         shift and go to state 48
    var                            shift and go to state 2
    pass                           shift and go to state 4
    dequal                         shift and go to state 6
    deffunc                        shift and go to state 51
    metaexpr                       shift and go to state 84
    exfiles                        shift and go to state 7
    varvar                         shift and go to state 8
    alg1                           shift and go to state 9
    yield                          shift and go to state 12
    if                             shift and go to state 56
    exectext                       shift and go to state 13
    term                           shift and go to state 14
    dict                           shift and go to state 15
    expr                           shift and go to state 16
    curfile                        shift and go to state 17
    input                          shift and go to state 18
    float                          shift and go to state 1
    block                          shift and go to state 57
    expralg                        shift and go to state 40
    module                         shift and go to state 60
    mlist                          shift and go to state 61
    return                         shift and go to state 26
    declare                        shift and go to state 21
    evaluate                       shift and go to state 23
    modules                        shift and go to state 67
    print                          shift and go to state 24
    relpathbase                    shift and go to state 58
    append                         shift and go to state 69
    func                           shift and go to state 70
    execscan                       shift and go to state 71
    alg3                           shift and go to state 66
    str                            shift and go to state 75
    application                    shift and go to state 76
    define                         shift and go to state 10
    repeat                         shift and go to state 30
    alg2                           shift and go to state 77
    compile                        shift and go to state 31
    list                           shift and go to state 33
    invrelpath                     shift and go to state 80
    abspath                        shift and go to state 55
    break                          shift and go to state 82
    inblock                        shift and go to state 35
    downlevel                      shift and go to state 34
    alg0                           shift and go to state 38
    execfile                       shift and go to state 85
    element                        shift and go to state 86
    divider                        shift and go to state 87
    parttree                       shift and go to state 89
    int                            shift and go to state 41
    relpath                        shift and go to state 88
    variables                      shift and go to state 44
    equal                          shift and go to state 46

state 1

    (79) term -> float .

    LBRACKET        reduce using rule 79 (term -> float .)
    DIVIDER         reduce using rule 79 (term -> float .)
    $end            reduce using rule 79 (term -> float .)
    RBRACE          reduce using rule 79 (term -> float .)
    COLON           reduce using rule 79 (term -> float .)
    QUESTION        reduce using rule 79 (term -> float .)
    RBRACKET        reduce using rule 79 (term -> float .)
    COMMA           reduce using rule 79 (term -> float .)
    RPAREN          reduce using rule 79 (term -> float .)
    DPROD           reduce using rule 79 (term -> float .)
    DIVMUL          reduce using rule 79 (term -> float .)
    PLUSMINUS       reduce using rule 79 (term -> float .)


state 2

    (20) append -> var . APPEND expr
    (97) varvar -> var .
    (81) term -> var .

  ! reduce/reduce conflict for COLON resolved using rule 81 (term -> var .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 81 (term -> var .)
  ! reduce/reduce conflict for DIVIDER resolved using rule 81 (term -> var .)
  ! reduce/reduce conflict for $end resolved using rule 81 (term -> var .)
  ! reduce/reduce conflict for RBRACE resolved using rule 81 (term -> var .)
  ! reduce/reduce conflict for QUESTION resolved using rule 81 (term -> var .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 81 (term -> var .)
  ! reduce/reduce conflict for COMMA resolved using rule 81 (term -> var .)
  ! reduce/reduce conflict for RPAREN resolved using rule 81 (term -> var .)
    APPEND          shift and go to state 91
    POINT           reduce using rule 97 (varvar -> var .)
    COLON           reduce using rule 81 (term -> var .)
    LBRACKET        reduce using rule 81 (term -> var .)
    DIVIDER         reduce using rule 81 (term -> var .)
    $end            reduce using rule 81 (term -> var .)
    DPROD           reduce using rule 81 (term -> var .)
    DIVMUL          reduce using rule 81 (term -> var .)
    PLUSMINUS       reduce using rule 81 (term -> var .)
    RBRACE          reduce using rule 81 (term -> var .)
    QUESTION        reduce using rule 81 (term -> var .)
    RBRACKET        reduce using rule 81 (term -> var .)
    COMMA           reduce using rule 81 (term -> var .)
    RPAREN          reduce using rule 81 (term -> var .)

  ! COLON           [ reduce using rule 97 (varvar -> var .) ]
  ! LBRACKET        [ reduce using rule 97 (varvar -> var .) ]
  ! RBRACE          [ reduce using rule 97 (varvar -> var .) ]
  ! DIVIDER         [ reduce using rule 97 (varvar -> var .) ]
  ! $end            [ reduce using rule 97 (varvar -> var .) ]
  ! QUESTION        [ reduce using rule 97 (varvar -> var .) ]
  ! RBRACKET        [ reduce using rule 97 (varvar -> var .) ]
  ! COMMA           [ reduce using rule 97 (varvar -> var .) ]
  ! RPAREN          [ reduce using rule 97 (varvar -> var .) ]


state 3

    (99) curfile -> CURFILE .

    COLON           reduce using rule 99 (curfile -> CURFILE .)
    LBRACKET        reduce using rule 99 (curfile -> CURFILE .)
    DIVIDER         reduce using rule 99 (curfile -> CURFILE .)
    $end            reduce using rule 99 (curfile -> CURFILE .)
    RBRACE          reduce using rule 99 (curfile -> CURFILE .)
    QUESTION        reduce using rule 99 (curfile -> CURFILE .)
    RBRACKET        reduce using rule 99 (curfile -> CURFILE .)
    COMMA           reduce using rule 99 (curfile -> CURFILE .)
    RPAREN          reduce using rule 99 (curfile -> CURFILE .)


state 4

    (63) expr -> pass .

    LBRACKET        reduce using rule 63 (expr -> pass .)
    COMMA           reduce using rule 63 (expr -> pass .)
    RPAREN          reduce using rule 63 (expr -> pass .)
    COLON           reduce using rule 63 (expr -> pass .)
    RBRACE          reduce using rule 63 (expr -> pass .)
    DIVIDER         reduce using rule 63 (expr -> pass .)
    RBRACKET        reduce using rule 63 (expr -> pass .)
    $end            reduce using rule 63 (expr -> pass .)
    QUESTION        reduce using rule 63 (expr -> pass .)


state 5

    (7) module -> MODULE . WORD block

    WORD            shift and go to state 92


state 6

    (57) expr -> dequal .

    LBRACKET        reduce using rule 57 (expr -> dequal .)
    COMMA           reduce using rule 57 (expr -> dequal .)
    RPAREN          reduce using rule 57 (expr -> dequal .)
    COLON           reduce using rule 57 (expr -> dequal .)
    RBRACE          reduce using rule 57 (expr -> dequal .)
    DIVIDER         reduce using rule 57 (expr -> dequal .)
    RBRACKET        reduce using rule 57 (expr -> dequal .)
    $end            reduce using rule 57 (expr -> dequal .)
    QUESTION        reduce using rule 57 (expr -> dequal .)


state 7

    (67) expr -> exfiles .

    LBRACKET        reduce using rule 67 (expr -> exfiles .)
    COMMA           reduce using rule 67 (expr -> exfiles .)
    RPAREN          reduce using rule 67 (expr -> exfiles .)
    COLON           reduce using rule 67 (expr -> exfiles .)
    RBRACE          reduce using rule 67 (expr -> exfiles .)
    DIVIDER         reduce using rule 67 (expr -> exfiles .)
    RBRACKET        reduce using rule 67 (expr -> exfiles .)
    $end            reduce using rule 67 (expr -> exfiles .)
    QUESTION        reduce using rule 67 (expr -> exfiles .)


state 8

    (49) expr -> varvar .
    (98) varvar -> varvar . POINT var

    LBRACKET        reduce using rule 49 (expr -> varvar .)
    COMMA           reduce using rule 49 (expr -> varvar .)
    RPAREN          reduce using rule 49 (expr -> varvar .)
    COLON           reduce using rule 49 (expr -> varvar .)
    RBRACE          reduce using rule 49 (expr -> varvar .)
    DIVIDER         reduce using rule 49 (expr -> varvar .)
    RBRACKET        reduce using rule 49 (expr -> varvar .)
    $end            reduce using rule 49 (expr -> varvar .)
    QUESTION        reduce using rule 49 (expr -> varvar .)
    POINT           shift and go to state 93


state 9

    (107) alg0 -> alg1 .
    (111) alg1 -> alg1 . DIVMUL alg2

    PLUSMINUS       reduce using rule 107 (alg0 -> alg1 .)
    LBRACKET        reduce using rule 107 (alg0 -> alg1 .)
    DIVIDER         reduce using rule 107 (alg0 -> alg1 .)
    $end            reduce using rule 107 (alg0 -> alg1 .)
    RBRACE          reduce using rule 107 (alg0 -> alg1 .)
    COLON           reduce using rule 107 (alg0 -> alg1 .)
    QUESTION        reduce using rule 107 (alg0 -> alg1 .)
    RBRACKET        reduce using rule 107 (alg0 -> alg1 .)
    COMMA           reduce using rule 107 (alg0 -> alg1 .)
    RPAREN          reduce using rule 107 (alg0 -> alg1 .)
    DIVMUL          shift and go to state 94


state 10

    (29) metaexpr -> define .

    LBRACKET        reduce using rule 29 (metaexpr -> define .)
    DIVIDER         reduce using rule 29 (metaexpr -> define .)
    $end            reduce using rule 29 (metaexpr -> define .)
    RBRACE          reduce using rule 29 (metaexpr -> define .)
    COLON           reduce using rule 29 (metaexpr -> define .)
    QUESTION        reduce using rule 29 (metaexpr -> define .)
    RBRACKET        reduce using rule 29 (metaexpr -> define .)
    COMMA           reduce using rule 29 (metaexpr -> define .)
    RPAREN          reduce using rule 29 (metaexpr -> define .)


state 11

    (16) if -> IF . expr QUESTION expr COLON expr
    (45) expr -> . expralg
    (46) expr -> . parttree
    (47) expr -> . alg0
    (48) expr -> . print
    (49) expr -> . varvar
    (50) expr -> . variables
    (51) expr -> . python
    (52) expr -> . execfile
    (53) expr -> . break
    (54) expr -> . curfile
    (55) expr -> . exectext
    (56) expr -> . equal
    (57) expr -> . dequal
    (58) expr -> . element
    (59) expr -> . mlist
    (60) expr -> . evaluate
    (61) expr -> . yield
    (62) expr -> . repeat
    (63) expr -> . pass
    (64) expr -> . dict
    (65) expr -> . return
    (66) expr -> . modules
    (67) expr -> . exfiles
    (68) expr -> . input
    (69) expralg -> . term
    (70) expralg -> . abspath
    (71) expralg -> . invrelpath
    (72) expralg -> . relpath
    (73) expralg -> . relpathbase
    (74) expralg -> . func
    (75) expralg -> . block
    (76) expralg -> . list
    (37) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (83) python -> . PYTHON str
    (84) execfile -> . EXECFILE expr
    (36) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (42) equal -> . WORD EQUALS expr
    (43) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON block
    (85) evaluate -> . EVALUATE expr
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (77) return -> . RETURN expr
    (19) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (18) input -> . INPUT
    (78) term -> . str
    (79) term -> . float
    (80) term -> . int
    (81) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (21) func -> . WORD LPAREN args RPAREN block
    (22) func -> . WORD LPAREN args RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (34) list -> . LBRACKET comms RBRACKET
    (35) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (94) var -> . WORD
    (91) str -> . STRING
    (89) float -> . FLOAT
    (82) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    AMPERSAND       shift and go to state 62
    PLUSMINUS       shift and go to state 68
    PRINT           shift and go to state 53
    VARIABLES       shift and go to state 65
    PYTHON          shift and go to state 59
    EXECFILE        shift and go to state 83
    BREAK           shift and go to state 90
    CURFILE         shift and go to state 3
    EXECTEXT        shift and go to state 78
    WORD            shift and go to state 97
    MLIST           shift and go to state 64
    EVALUATE        shift and go to state 50
    YIELD           shift and go to state 45
    REPEAT          shift and go to state 81
    PASS            shift and go to state 42
    LBRACE          shift and go to state 43
    RETURN          shift and go to state 28
    MODULES         shift and go to state 47
    EXFILES         shift and go to state 74
    INPUT           shift and go to state 79
    ABSPATH         shift and go to state 20
    INVRELPATH      shift and go to state 49
    RELPATH         shift and go to state 36
    RELPATHBASE     shift and go to state 52
    LBRACKET        shift and go to state 27
    STRING          shift and go to state 73
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 39

    python                         shift and go to state 48
    var                            shift and go to state 95
    pass                           shift and go to state 4
    exfiles                        shift and go to state 7
    dequal                         shift and go to state 6
    alg0                           shift and go to state 38
    varvar                         shift and go to state 8
    alg1                           shift and go to state 9
    yield                          shift and go to state 12
    block                          shift and go to state 57
    term                           shift and go to state 14
    dict                           shift and go to state 15
    expr                           shift and go to state 96
    curfile                        shift and go to state 17
    input                          shift and go to state 18
    float                          shift and go to state 1
    exectext                       shift and go to state 13
    mlist                          shift and go to state 61
    return                         shift and go to state 26
    evaluate                       shift and go to state 23
    modules                        shift and go to state 67
    print                          shift and go to state 24
    relpathbase                    shift and go to state 58
    func                           shift and go to state 70
    alg3                           shift and go to state 66
    str                            shift and go to state 75
    repeat                         shift and go to state 30
    alg2                           shift and go to state 77
    list                           shift and go to state 33
    invrelpath                     shift and go to state 80
    abspath                        shift and go to state 55
    break                          shift and go to state 82
    execfile                       shift and go to state 85
    element                        shift and go to state 86
    expralg                        shift and go to state 40
    int                            shift and go to state 41
    relpath                        shift and go to state 88
    variables                      shift and go to state 44
    parttree                       shift and go to state 89
    equal                          shift and go to state 46

state 12

    (61) expr -> yield .

    LBRACKET        reduce using rule 61 (expr -> yield .)
    COMMA           reduce using rule 61 (expr -> yield .)
    RPAREN          reduce using rule 61 (expr -> yield .)
    COLON           reduce using rule 61 (expr -> yield .)
    RBRACE          reduce using rule 61 (expr -> yield .)
    DIVIDER         reduce using rule 61 (expr -> yield .)
    RBRACKET        reduce using rule 61 (expr -> yield .)
    $end            reduce using rule 61 (expr -> yield .)
    QUESTION        reduce using rule 61 (expr -> yield .)


state 13

    (55) expr -> exectext .

    LBRACKET        reduce using rule 55 (expr -> exectext .)
    COMMA           reduce using rule 55 (expr -> exectext .)
    RPAREN          reduce using rule 55 (expr -> exectext .)
    COLON           reduce using rule 55 (expr -> exectext .)
    RBRACE          reduce using rule 55 (expr -> exectext .)
    DIVIDER         reduce using rule 55 (expr -> exectext .)
    RBRACKET        reduce using rule 55 (expr -> exectext .)
    $end            reduce using rule 55 (expr -> exectext .)
    QUESTION        reduce using rule 55 (expr -> exectext .)


state 14

    (69) expralg -> term .

    COLON           reduce using rule 69 (expralg -> term .)
    LBRACKET        reduce using rule 69 (expralg -> term .)
    DIVIDER         reduce using rule 69 (expralg -> term .)
    $end            reduce using rule 69 (expralg -> term .)
    RBRACE          reduce using rule 69 (expralg -> term .)
    DPROD           reduce using rule 69 (expralg -> term .)
    DIVMUL          reduce using rule 69 (expralg -> term .)
    PLUSMINUS       reduce using rule 69 (expralg -> term .)
    QUESTION        reduce using rule 69 (expralg -> term .)
    RBRACKET        reduce using rule 69 (expralg -> term .)
    COMMA           reduce using rule 69 (expralg -> term .)
    RPAREN          reduce using rule 69 (expralg -> term .)


state 15

    (64) expr -> dict .

    LBRACKET        reduce using rule 64 (expr -> dict .)
    COMMA           reduce using rule 64 (expr -> dict .)
    RPAREN          reduce using rule 64 (expr -> dict .)
    COLON           reduce using rule 64 (expr -> dict .)
    RBRACE          reduce using rule 64 (expr -> dict .)
    DIVIDER         reduce using rule 64 (expr -> dict .)
    RBRACKET        reduce using rule 64 (expr -> dict .)
    $end            reduce using rule 64 (expr -> dict .)
    QUESTION        reduce using rule 64 (expr -> dict .)


state 16

    (23) metaexpr -> expr .
    (15) declare -> expr . COLON expr
    (93) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for COLON resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
    DIVIDER         reduce using rule 23 (metaexpr -> expr .)
    $end            reduce using rule 23 (metaexpr -> expr .)
    RBRACE          reduce using rule 23 (metaexpr -> expr .)
    QUESTION        reduce using rule 23 (metaexpr -> expr .)
    RBRACKET        reduce using rule 23 (metaexpr -> expr .)
    COMMA           reduce using rule 23 (metaexpr -> expr .)
    RPAREN          reduce using rule 23 (metaexpr -> expr .)
    COLON           shift and go to state 98
    LBRACKET        shift and go to state 99

  ! LBRACKET        [ reduce using rule 23 (metaexpr -> expr .) ]
  ! COLON           [ reduce using rule 23 (metaexpr -> expr .) ]


state 17

    (54) expr -> curfile .

    LBRACKET        reduce using rule 54 (expr -> curfile .)
    COMMA           reduce using rule 54 (expr -> curfile .)
    RPAREN          reduce using rule 54 (expr -> curfile .)
    COLON           reduce using rule 54 (expr -> curfile .)
    RBRACE          reduce using rule 54 (expr -> curfile .)
    DIVIDER         reduce using rule 54 (expr -> curfile .)
    RBRACKET        reduce using rule 54 (expr -> curfile .)
    $end            reduce using rule 54 (expr -> curfile .)
    QUESTION        reduce using rule 54 (expr -> curfile .)


state 18

    (68) expr -> input .

    LBRACKET        reduce using rule 68 (expr -> input .)
    COMMA           reduce using rule 68 (expr -> input .)
    RPAREN          reduce using rule 68 (expr -> input .)
    COLON           reduce using rule 68 (expr -> input .)
    RBRACE          reduce using rule 68 (expr -> input .)
    DIVIDER         reduce using rule 68 (expr -> input .)
    RBRACKET        reduce using rule 68 (expr -> input .)
    $end            reduce using rule 68 (expr -> input .)
    QUESTION        reduce using rule 68 (expr -> input .)


state 19

    (10) define -> WORD . DEFOP expr
    (42) equal -> WORD . EQUALS expr
    (94) var -> WORD .
    (21) func -> WORD . LPAREN args RPAREN block
    (22) func -> WORD . LPAREN args RPAREN

    DEFOP           shift and go to state 101
    EQUALS          shift and go to state 102
    APPEND          reduce using rule 94 (var -> WORD .)
    POINT           reduce using rule 94 (var -> WORD .)
    COLON           reduce using rule 94 (var -> WORD .)
    LBRACKET        reduce using rule 94 (var -> WORD .)
    DIVIDER         reduce using rule 94 (var -> WORD .)
    $end            reduce using rule 94 (var -> WORD .)
    RBRACE          reduce using rule 94 (var -> WORD .)
    DPROD           reduce using rule 94 (var -> WORD .)
    DIVMUL          reduce using rule 94 (var -> WORD .)
    PLUSMINUS       reduce using rule 94 (var -> WORD .)
    QUESTION        reduce using rule 94 (var -> WORD .)
    RBRACKET        reduce using rule 94 (var -> WORD .)
    COMMA           reduce using rule 94 (var -> WORD .)
    RPAREN          reduce using rule 94 (var -> WORD .)
    LPAREN          shift and go to state 100


state 20

    (106) abspath -> ABSPATH .

    LBRACKET        reduce using rule 106 (abspath -> ABSPATH .)
    DIVIDER         reduce using rule 106 (abspath -> ABSPATH .)
    $end            reduce using rule 106 (abspath -> ABSPATH .)
    RBRACE          reduce using rule 106 (abspath -> ABSPATH .)
    COLON           reduce using rule 106 (abspath -> ABSPATH .)
    QUESTION        reduce using rule 106 (abspath -> ABSPATH .)
    RBRACKET        reduce using rule 106 (abspath -> ABSPATH .)
    COMMA           reduce using rule 106 (abspath -> ABSPATH .)
    RPAREN          reduce using rule 106 (abspath -> ABSPATH .)
    DPROD           reduce using rule 106 (abspath -> ABSPATH .)
    DIVMUL          reduce using rule 106 (abspath -> ABSPATH .)
    PLUSMINUS       reduce using rule 106 (abspath -> ABSPATH .)


state 21

    (27) metaexpr -> declare .

    LBRACKET        reduce using rule 27 (metaexpr -> declare .)
    DIVIDER         reduce using rule 27 (metaexpr -> declare .)
    $end            reduce using rule 27 (metaexpr -> declare .)
    RBRACE          reduce using rule 27 (metaexpr -> declare .)
    COLON           reduce using rule 27 (metaexpr -> declare .)
    QUESTION        reduce using rule 27 (metaexpr -> declare .)
    RBRACKET        reduce using rule 27 (metaexpr -> declare .)
    COMMA           reduce using rule 27 (metaexpr -> declare .)
    RPAREN          reduce using rule 27 (metaexpr -> declare .)


state 22

    (9) define -> DEFINE . WORD expr

    WORD            shift and go to state 103


state 23

    (60) expr -> evaluate .

    LBRACKET        reduce using rule 60 (expr -> evaluate .)
    COMMA           reduce using rule 60 (expr -> evaluate .)
    RPAREN          reduce using rule 60 (expr -> evaluate .)
    COLON           reduce using rule 60 (expr -> evaluate .)
    RBRACE          reduce using rule 60 (expr -> evaluate .)
    DIVIDER         reduce using rule 60 (expr -> evaluate .)
    RBRACKET        reduce using rule 60 (expr -> evaluate .)
    $end            reduce using rule 60 (expr -> evaluate .)
    QUESTION        reduce using rule 60 (expr -> evaluate .)


state 24

    (48) expr -> print .

    LBRACKET        reduce using rule 48 (expr -> print .)
    COMMA           reduce using rule 48 (expr -> print .)
    RPAREN          reduce using rule 48 (expr -> print .)
    COLON           reduce using rule 48 (expr -> print .)
    RBRACE          reduce using rule 48 (expr -> print .)
    DIVIDER         reduce using rule 48 (expr -> print .)
    RBRACKET        reduce using rule 48 (expr -> print .)
    $end            reduce using rule 48 (expr -> print .)
    QUESTION        reduce using rule 48 (expr -> print .)


state 25

    (88) downlevel -> DOWNLEVEL . expr
    (45) expr -> . expralg
    (46) expr -> . parttree
    (47) expr -> . alg0
    (48) expr -> . print
    (49) expr -> . varvar
    (50) expr -> . variables
    (51) expr -> . python
    (52) expr -> . execfile
    (53) expr -> . break
    (54) expr -> . curfile
    (55) expr -> . exectext
    (56) expr -> . equal
    (57) expr -> . dequal
    (58) expr -> . element
    (59) expr -> . mlist
    (60) expr -> . evaluate
    (61) expr -> . yield
    (62) expr -> . repeat
    (63) expr -> . pass
    (64) expr -> . dict
    (65) expr -> . return
    (66) expr -> . modules
    (67) expr -> . exfiles
    (68) expr -> . input
    (69) expralg -> . term
    (70) expralg -> . abspath
    (71) expralg -> . invrelpath
    (72) expralg -> . relpath
    (73) expralg -> . relpathbase
    (74) expralg -> . func
    (75) expralg -> . block
    (76) expralg -> . list
    (37) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (83) python -> . PYTHON str
    (84) execfile -> . EXECFILE expr
    (36) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (42) equal -> . WORD EQUALS expr
    (43) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON block
    (85) evaluate -> . EVALUATE expr
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (77) return -> . RETURN expr
    (19) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (18) input -> . INPUT
    (78) term -> . str
    (79) term -> . float
    (80) term -> . int
    (81) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (21) func -> . WORD LPAREN args RPAREN block
    (22) func -> . WORD LPAREN args RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (34) list -> . LBRACKET comms RBRACKET
    (35) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (94) var -> . WORD
    (91) str -> . STRING
    (89) float -> . FLOAT
    (82) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    AMPERSAND       shift and go to state 62
    PLUSMINUS       shift and go to state 68
    PRINT           shift and go to state 53
    VARIABLES       shift and go to state 65
    PYTHON          shift and go to state 59
    EXECFILE        shift and go to state 83
    BREAK           shift and go to state 90
    CURFILE         shift and go to state 3
    EXECTEXT        shift and go to state 78
    WORD            shift and go to state 97
    MLIST           shift and go to state 64
    EVALUATE        shift and go to state 50
    YIELD           shift and go to state 45
    REPEAT          shift and go to state 81
    PASS            shift and go to state 42
    LBRACE          shift and go to state 43
    RETURN          shift and go to state 28
    MODULES         shift and go to state 47
    EXFILES         shift and go to state 74
    INPUT           shift and go to state 79
    ABSPATH         shift and go to state 20
    INVRELPATH      shift and go to state 49
    RELPATH         shift and go to state 36
    RELPATHBASE     shift and go to state 52
    LBRACKET        shift and go to state 27
    STRING          shift and go to state 73
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 39

    python                         shift and go to state 48
    var                            shift and go to state 95
    pass                           shift and go to state 4
    exfiles                        shift and go to state 7
    dequal                         shift and go to state 6
    alg0                           shift and go to state 38
    varvar                         shift and go to state 8
    alg1                           shift and go to state 9
    yield                          shift and go to state 12
    block                          shift and go to state 57
    term                           shift and go to state 14
    dict                           shift and go to state 15
    expr                           shift and go to state 104
    curfile                        shift and go to state 17
    input                          shift and go to state 18
    float                          shift and go to state 1
    exectext                       shift and go to state 13
    mlist                          shift and go to state 61
    return                         shift and go to state 26
    evaluate                       shift and go to state 23
    modules                        shift and go to state 67
    print                          shift and go to state 24
    relpathbase                    shift and go to state 58
    func                           shift and go to state 70
    alg3                           shift and go to state 66
    str                            shift and go to state 75
    repeat                         shift and go to state 30
    alg2                           shift and go to state 77
    list                           shift and go to state 33
    invrelpath                     shift and go to state 80
    abspath                        shift and go to state 55
    break                          shift and go to state 82
    execfile                       shift and go to state 85
    element                        shift and go to state 86
    expralg                        shift and go to state 40
    int                            shift and go to state 41
    relpath                        shift and go to state 88
    variables                      shift and go to state 44
    parttree                       shift and go to state 89
    equal                          shift and go to state 46

state 26

    (65) expr -> return .

    LBRACKET        reduce using rule 65 (expr -> return .)
    COMMA           reduce using rule 65 (expr -> return .)
    RPAREN          reduce using rule 65 (expr -> return .)
    COLON           reduce using rule 65 (expr -> return .)
    RBRACE          reduce using rule 65 (expr -> return .)
    DIVIDER         reduce using rule 65 (expr -> return .)
    RBRACKET        reduce using rule 65 (expr -> return .)
    $end            reduce using rule 65 (expr -> return .)
    QUESTION        reduce using rule 65 (expr -> return .)


state 27

    (34) list -> LBRACKET . comms RBRACKET
    (35) list -> LBRACKET . RBRACKET
    (40) comms -> . expr
    (41) comms -> . comms COMMA expr
    (45) expr -> . expralg
    (46) expr -> . parttree
    (47) expr -> . alg0
    (48) expr -> . print
    (49) expr -> . varvar
    (50) expr -> . variables
    (51) expr -> . python
    (52) expr -> . execfile
    (53) expr -> . break
    (54) expr -> . curfile
    (55) expr -> . exectext
    (56) expr -> . equal
    (57) expr -> . dequal
    (58) expr -> . element
    (59) expr -> . mlist
    (60) expr -> . evaluate
    (61) expr -> . yield
    (62) expr -> . repeat
    (63) expr -> . pass
    (64) expr -> . dict
    (65) expr -> . return
    (66) expr -> . modules
    (67) expr -> . exfiles
    (68) expr -> . input
    (69) expralg -> . term
    (70) expralg -> . abspath
    (71) expralg -> . invrelpath
    (72) expralg -> . relpath
    (73) expralg -> . relpathbase
    (74) expralg -> . func
    (75) expralg -> . block
    (76) expralg -> . list
    (37) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (83) python -> . PYTHON str
    (84) execfile -> . EXECFILE expr
    (36) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (42) equal -> . WORD EQUALS expr
    (43) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON block
    (85) evaluate -> . EVALUATE expr
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (77) return -> . RETURN expr
    (19) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (18) input -> . INPUT
    (78) term -> . str
    (79) term -> . float
    (80) term -> . int
    (81) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (21) func -> . WORD LPAREN args RPAREN block
    (22) func -> . WORD LPAREN args RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (34) list -> . LBRACKET comms RBRACKET
    (35) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (94) var -> . WORD
    (91) str -> . STRING
    (89) float -> . FLOAT
    (82) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    RBRACKET        shift and go to state 106
    AMPERSAND       shift and go to state 62
    PLUSMINUS       shift and go to state 68
    PRINT           shift and go to state 53
    VARIABLES       shift and go to state 65
    PYTHON          shift and go to state 59
    EXECFILE        shift and go to state 83
    BREAK           shift and go to state 90
    CURFILE         shift and go to state 3
    EXECTEXT        shift and go to state 78
    WORD            shift and go to state 97
    MLIST           shift and go to state 64
    EVALUATE        shift and go to state 50
    YIELD           shift and go to state 45
    REPEAT          shift and go to state 81
    PASS            shift and go to state 42
    LBRACE          shift and go to state 43
    RETURN          shift and go to state 28
    MODULES         shift and go to state 47
    EXFILES         shift and go to state 74
    INPUT           shift and go to state 79
    ABSPATH         shift and go to state 20
    INVRELPATH      shift and go to state 49
    RELPATH         shift and go to state 36
    RELPATHBASE     shift and go to state 52
    LBRACKET        shift and go to state 27
    STRING          shift and go to state 73
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 39

    python                         shift and go to state 48
    var                            shift and go to state 95
    comms                          shift and go to state 105
    pass                           shift and go to state 4
    exfiles                        shift and go to state 7
    dequal                         shift and go to state 6
    alg0                           shift and go to state 38
    varvar                         shift and go to state 8
    alg1                           shift and go to state 9
    yield                          shift and go to state 12
    block                          shift and go to state 57
    term                           shift and go to state 14
    dict                           shift and go to state 15
    expr                           shift and go to state 107
    curfile                        shift and go to state 17
    input                          shift and go to state 18
    float                          shift and go to state 1
    exectext                       shift and go to state 13
    mlist                          shift and go to state 61
    return                         shift and go to state 26
    evaluate                       shift and go to state 23
    modules                        shift and go to state 67
    print                          shift and go to state 24
    relpathbase                    shift and go to state 58
    func                           shift and go to state 70
    alg3                           shift and go to state 66
    str                            shift and go to state 75
    repeat                         shift and go to state 30
    alg2                           shift and go to state 77
    list                           shift and go to state 33
    invrelpath                     shift and go to state 80
    abspath                        shift and go to state 55
    break                          shift and go to state 82
    execfile                       shift and go to state 85
    element                        shift and go to state 86
    expralg                        shift and go to state 40
    int                            shift and go to state 41
    relpath                        shift and go to state 88
    variables                      shift and go to state 44
    parttree                       shift and go to state 89
    equal                          shift and go to state 46

state 28

    (77) return -> RETURN . expr
    (45) expr -> . expralg
    (46) expr -> . parttree
    (47) expr -> . alg0
    (48) expr -> . print
    (49) expr -> . varvar
    (50) expr -> . variables
    (51) expr -> . python
    (52) expr -> . execfile
    (53) expr -> . break
    (54) expr -> . curfile
    (55) expr -> . exectext
    (56) expr -> . equal
    (57) expr -> . dequal
    (58) expr -> . element
    (59) expr -> . mlist
    (60) expr -> . evaluate
    (61) expr -> . yield
    (62) expr -> . repeat
    (63) expr -> . pass
    (64) expr -> . dict
    (65) expr -> . return
    (66) expr -> . modules
    (67) expr -> . exfiles
    (68) expr -> . input
    (69) expralg -> . term
    (70) expralg -> . abspath
    (71) expralg -> . invrelpath
    (72) expralg -> . relpath
    (73) expralg -> . relpathbase
    (74) expralg -> . func
    (75) expralg -> . block
    (76) expralg -> . list
    (37) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (83) python -> . PYTHON str
    (84) execfile -> . EXECFILE expr
    (36) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (42) equal -> . WORD EQUALS expr
    (43) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON block
    (85) evaluate -> . EVALUATE expr
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (77) return -> . RETURN expr
    (19) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (18) input -> . INPUT
    (78) term -> . str
    (79) term -> . float
    (80) term -> . int
    (81) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (21) func -> . WORD LPAREN args RPAREN block
    (22) func -> . WORD LPAREN args RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (34) list -> . LBRACKET comms RBRACKET
    (35) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (94) var -> . WORD
    (91) str -> . STRING
    (89) float -> . FLOAT
    (82) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    AMPERSAND       shift and go to state 62
    PLUSMINUS       shift and go to state 68
    PRINT           shift and go to state 53
    VARIABLES       shift and go to state 65
    PYTHON          shift and go to state 59
    EXECFILE        shift and go to state 83
    BREAK           shift and go to state 90
    CURFILE         shift and go to state 3
    EXECTEXT        shift and go to state 78
    WORD            shift and go to state 97
    MLIST           shift and go to state 64
    EVALUATE        shift and go to state 50
    YIELD           shift and go to state 45
    REPEAT          shift and go to state 81
    PASS            shift and go to state 42
    LBRACE          shift and go to state 43
    RETURN          shift and go to state 28
    MODULES         shift and go to state 47
    EXFILES         shift and go to state 74
    INPUT           shift and go to state 79
    ABSPATH         shift and go to state 20
    INVRELPATH      shift and go to state 49
    RELPATH         shift and go to state 36
    RELPATHBASE     shift and go to state 52
    LBRACKET        shift and go to state 27
    STRING          shift and go to state 73
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 39

    python                         shift and go to state 48
    var                            shift and go to state 95
    pass                           shift and go to state 4
    exfiles                        shift and go to state 7
    dequal                         shift and go to state 6
    alg0                           shift and go to state 38
    varvar                         shift and go to state 8
    alg1                           shift and go to state 9
    yield                          shift and go to state 12
    block                          shift and go to state 57
    term                           shift and go to state 14
    dict                           shift and go to state 15
    expr                           shift and go to state 108
    curfile                        shift and go to state 17
    input                          shift and go to state 18
    float                          shift and go to state 1
    exectext                       shift and go to state 13
    mlist                          shift and go to state 61
    return                         shift and go to state 26
    evaluate                       shift and go to state 23
    modules                        shift and go to state 67
    print                          shift and go to state 24
    relpathbase                    shift and go to state 58
    func                           shift and go to state 70
    alg3                           shift and go to state 66
    str                            shift and go to state 75
    repeat                         shift and go to state 30
    alg2                           shift and go to state 77
    list                           shift and go to state 33
    invrelpath                     shift and go to state 80
    abspath                        shift and go to state 55
    break                          shift and go to state 82
    execfile                       shift and go to state 85
    element                        shift and go to state 86
    expralg                        shift and go to state 40
    int                            shift and go to state 41
    relpath                        shift and go to state 88
    variables                      shift and go to state 44
    parttree                       shift and go to state 89
    equal                          shift and go to state 46

state 29

    (44) application -> APPLICATION . WORD block

    WORD            shift and go to state 109


state 30

    (62) expr -> repeat .

    LBRACKET        reduce using rule 62 (expr -> repeat .)
    COMMA           reduce using rule 62 (expr -> repeat .)
    RPAREN          reduce using rule 62 (expr -> repeat .)
    COLON           reduce using rule 62 (expr -> repeat .)
    RBRACE          reduce using rule 62 (expr -> repeat .)
    DIVIDER         reduce using rule 62 (expr -> repeat .)
    RBRACKET        reduce using rule 62 (expr -> repeat .)
    $end            reduce using rule 62 (expr -> repeat .)
    QUESTION        reduce using rule 62 (expr -> repeat .)


state 31

    (31) metaexpr -> compile .

    LBRACKET        reduce using rule 31 (metaexpr -> compile .)
    DIVIDER         reduce using rule 31 (metaexpr -> compile .)
    $end            reduce using rule 31 (metaexpr -> compile .)
    RBRACE          reduce using rule 31 (metaexpr -> compile .)
    COLON           reduce using rule 31 (metaexpr -> compile .)
    QUESTION        reduce using rule 31 (metaexpr -> compile .)
    RBRACKET        reduce using rule 31 (metaexpr -> compile .)
    COMMA           reduce using rule 31 (metaexpr -> compile .)
    RPAREN          reduce using rule 31 (metaexpr -> compile .)


state 32

    (89) float -> FLOAT .

    DPROD           reduce using rule 89 (float -> FLOAT .)
    DIVMUL          reduce using rule 89 (float -> FLOAT .)
    PLUSMINUS       reduce using rule 89 (float -> FLOAT .)
    COLON           reduce using rule 89 (float -> FLOAT .)
    LBRACKET        reduce using rule 89 (float -> FLOAT .)
    DIVIDER         reduce using rule 89 (float -> FLOAT .)
    $end            reduce using rule 89 (float -> FLOAT .)
    QUESTION        reduce using rule 89 (float -> FLOAT .)
    RBRACE          reduce using rule 89 (float -> FLOAT .)
    RBRACKET        reduce using rule 89 (float -> FLOAT .)
    COMMA           reduce using rule 89 (float -> FLOAT .)
    RPAREN          reduce using rule 89 (float -> FLOAT .)


state 33

    (76) expralg -> list .

    COLON           reduce using rule 76 (expralg -> list .)
    LBRACKET        reduce using rule 76 (expralg -> list .)
    DIVIDER         reduce using rule 76 (expralg -> list .)
    $end            reduce using rule 76 (expralg -> list .)
    RBRACE          reduce using rule 76 (expralg -> list .)
    DPROD           reduce using rule 76 (expralg -> list .)
    DIVMUL          reduce using rule 76 (expralg -> list .)
    PLUSMINUS       reduce using rule 76 (expralg -> list .)
    QUESTION        reduce using rule 76 (expralg -> list .)
    RBRACKET        reduce using rule 76 (expralg -> list .)
    COMMA           reduce using rule 76 (expralg -> list .)
    RPAREN          reduce using rule 76 (expralg -> list .)


state 34

    (32) metaexpr -> downlevel .

    LBRACKET        reduce using rule 32 (metaexpr -> downlevel .)
    DIVIDER         reduce using rule 32 (metaexpr -> downlevel .)
    $end            reduce using rule 32 (metaexpr -> downlevel .)
    RBRACE          reduce using rule 32 (metaexpr -> downlevel .)
    COLON           reduce using rule 32 (metaexpr -> downlevel .)
    QUESTION        reduce using rule 32 (metaexpr -> downlevel .)
    RBRACKET        reduce using rule 32 (metaexpr -> downlevel .)
    COMMA           reduce using rule 32 (metaexpr -> downlevel .)
    RPAREN          reduce using rule 32 (metaexpr -> downlevel .)


state 35

    (0) S' -> inblock .
    (3) inblock -> inblock . divider metaexpr
    (5) inblock -> inblock . divider
    (17) divider -> . DIVIDER

    DIVIDER         shift and go to state 54

    divider                        shift and go to state 110

state 36

    (100) relpath -> RELPATH .

    COLON           reduce using rule 100 (relpath -> RELPATH .)
    LBRACKET        reduce using rule 100 (relpath -> RELPATH .)
    RBRACE          reduce using rule 100 (relpath -> RELPATH .)
    DIVIDER         reduce using rule 100 (relpath -> RELPATH .)
    DPROD           reduce using rule 100 (relpath -> RELPATH .)
    DIVMUL          reduce using rule 100 (relpath -> RELPATH .)
    PLUSMINUS       reduce using rule 100 (relpath -> RELPATH .)
    RBRACKET        reduce using rule 100 (relpath -> RELPATH .)
    COMMA           reduce using rule 100 (relpath -> RELPATH .)
    RPAREN          reduce using rule 100 (relpath -> RELPATH .)
    $end            reduce using rule 100 (relpath -> RELPATH .)
    QUESTION        reduce using rule 100 (relpath -> RELPATH .)


state 37

    (8) deffunc -> DEFFUNC . WORD LPAREN args RPAREN block

    WORD            shift and go to state 111


state 38

    (47) expr -> alg0 .
    (108) alg0 -> alg0 . PLUSMINUS alg1

    LBRACKET        reduce using rule 47 (expr -> alg0 .)
    COMMA           reduce using rule 47 (expr -> alg0 .)
    RPAREN          reduce using rule 47 (expr -> alg0 .)
    COLON           reduce using rule 47 (expr -> alg0 .)
    RBRACE          reduce using rule 47 (expr -> alg0 .)
    DIVIDER         reduce using rule 47 (expr -> alg0 .)
    RBRACKET        reduce using rule 47 (expr -> alg0 .)
    $end            reduce using rule 47 (expr -> alg0 .)
    QUESTION        reduce using rule 47 (expr -> alg0 .)
    PLUSMINUS       shift and go to state 112


state 39

    (82) int -> NUMBER .

    LBRACKET        reduce using rule 82 (int -> NUMBER .)
    DIVIDER         reduce using rule 82 (int -> NUMBER .)
    $end            reduce using rule 82 (int -> NUMBER .)
    RBRACE          reduce using rule 82 (int -> NUMBER .)
    COLON           reduce using rule 82 (int -> NUMBER .)
    QUESTION        reduce using rule 82 (int -> NUMBER .)
    RBRACKET        reduce using rule 82 (int -> NUMBER .)
    COMMA           reduce using rule 82 (int -> NUMBER .)
    RPAREN          reduce using rule 82 (int -> NUMBER .)
    DPROD           reduce using rule 82 (int -> NUMBER .)
    DIVMUL          reduce using rule 82 (int -> NUMBER .)
    PLUSMINUS       reduce using rule 82 (int -> NUMBER .)


state 40

    (45) expr -> expralg .
    (114) alg3 -> expralg .

  ! reduce/reduce conflict for LBRACKET resolved using rule 45 (expr -> expralg .)
  ! reduce/reduce conflict for DIVIDER resolved using rule 45 (expr -> expralg .)
  ! reduce/reduce conflict for $end resolved using rule 45 (expr -> expralg .)
  ! reduce/reduce conflict for RBRACE resolved using rule 45 (expr -> expralg .)
  ! reduce/reduce conflict for COLON resolved using rule 45 (expr -> expralg .)
  ! reduce/reduce conflict for QUESTION resolved using rule 45 (expr -> expralg .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 45 (expr -> expralg .)
  ! reduce/reduce conflict for COMMA resolved using rule 45 (expr -> expralg .)
  ! reduce/reduce conflict for RPAREN resolved using rule 45 (expr -> expralg .)
    LBRACKET        reduce using rule 45 (expr -> expralg .)
    COMMA           reduce using rule 45 (expr -> expralg .)
    RPAREN          reduce using rule 45 (expr -> expralg .)
    COLON           reduce using rule 45 (expr -> expralg .)
    RBRACE          reduce using rule 45 (expr -> expralg .)
    DIVIDER         reduce using rule 45 (expr -> expralg .)
    RBRACKET        reduce using rule 45 (expr -> expralg .)
    $end            reduce using rule 45 (expr -> expralg .)
    QUESTION        reduce using rule 45 (expr -> expralg .)
    DPROD           reduce using rule 114 (alg3 -> expralg .)
    DIVMUL          reduce using rule 114 (alg3 -> expralg .)
    PLUSMINUS       reduce using rule 114 (alg3 -> expralg .)

  ! LBRACKET        [ reduce using rule 114 (alg3 -> expralg .) ]
  ! DIVIDER         [ reduce using rule 114 (alg3 -> expralg .) ]
  ! $end            [ reduce using rule 114 (alg3 -> expralg .) ]
  ! RBRACE          [ reduce using rule 114 (alg3 -> expralg .) ]
  ! COLON           [ reduce using rule 114 (alg3 -> expralg .) ]
  ! QUESTION        [ reduce using rule 114 (alg3 -> expralg .) ]
  ! RBRACKET        [ reduce using rule 114 (alg3 -> expralg .) ]
  ! COMMA           [ reduce using rule 114 (alg3 -> expralg .) ]
  ! RPAREN          [ reduce using rule 114 (alg3 -> expralg .) ]


state 41

    (80) term -> int .

    LBRACKET        reduce using rule 80 (term -> int .)
    DIVIDER         reduce using rule 80 (term -> int .)
    $end            reduce using rule 80 (term -> int .)
    RBRACE          reduce using rule 80 (term -> int .)
    COLON           reduce using rule 80 (term -> int .)
    QUESTION        reduce using rule 80 (term -> int .)
    RBRACKET        reduce using rule 80 (term -> int .)
    COMMA           reduce using rule 80 (term -> int .)
    RPAREN          reduce using rule 80 (term -> int .)
    DPROD           reduce using rule 80 (term -> int .)
    DIVMUL          reduce using rule 80 (term -> int .)
    PLUSMINUS       reduce using rule 80 (term -> int .)


state 42

    (104) pass -> PASS .

    LBRACKET        reduce using rule 104 (pass -> PASS .)
    DIVIDER         reduce using rule 104 (pass -> PASS .)
    $end            reduce using rule 104 (pass -> PASS .)
    RBRACE          reduce using rule 104 (pass -> PASS .)
    COLON           reduce using rule 104 (pass -> PASS .)
    QUESTION        reduce using rule 104 (pass -> PASS .)
    RBRACKET        reduce using rule 104 (pass -> PASS .)
    COMMA           reduce using rule 104 (pass -> PASS .)
    RPAREN          reduce using rule 104 (pass -> PASS .)


state 43

    (11) dict -> LBRACE . declares RBRACE
    (12) dict -> LBRACE . RBRACE
    (1) block -> LBRACE . inblock RBRACE
    (13) declares -> . declare
    (14) declares -> . declares COMMA declare
    (2) inblock -> . metaexpr
    (3) inblock -> . inblock divider metaexpr
    (4) inblock -> . divider inblock
    (5) inblock -> . inblock divider
    (15) declare -> . expr COLON expr
    (23) metaexpr -> . expr
    (24) metaexpr -> . deffunc
    (25) metaexpr -> . module
    (26) metaexpr -> . application
    (27) metaexpr -> . declare
    (28) metaexpr -> . append
    (29) metaexpr -> . define
    (30) metaexpr -> . execscan
    (31) metaexpr -> . compile
    (32) metaexpr -> . downlevel
    (33) metaexpr -> . if
    (17) divider -> . DIVIDER
    (45) expr -> . expralg
    (46) expr -> . parttree
    (47) expr -> . alg0
    (48) expr -> . print
    (49) expr -> . varvar
    (50) expr -> . variables
    (51) expr -> . python
    (52) expr -> . execfile
    (53) expr -> . break
    (54) expr -> . curfile
    (55) expr -> . exectext
    (56) expr -> . equal
    (57) expr -> . dequal
    (58) expr -> . element
    (59) expr -> . mlist
    (60) expr -> . evaluate
    (61) expr -> . yield
    (62) expr -> . repeat
    (63) expr -> . pass
    (64) expr -> . dict
    (65) expr -> . return
    (66) expr -> . modules
    (67) expr -> . exfiles
    (68) expr -> . input
    (8) deffunc -> . DEFFUNC WORD LPAREN args RPAREN block
    (7) module -> . MODULE WORD block
    (44) application -> . APPLICATION WORD block
    (20) append -> . var APPEND expr
    (9) define -> . DEFINE WORD expr
    (10) define -> . WORD DEFOP expr
    (86) execscan -> . EXECSCAN expr
    (103) compile -> . COMPILE
    (88) downlevel -> . DOWNLEVEL expr
    (16) if -> . IF expr QUESTION expr COLON expr
    (69) expralg -> . term
    (70) expralg -> . abspath
    (71) expralg -> . invrelpath
    (72) expralg -> . relpath
    (73) expralg -> . relpathbase
    (74) expralg -> . func
    (75) expralg -> . block
    (76) expralg -> . list
    (37) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (83) python -> . PYTHON str
    (84) execfile -> . EXECFILE expr
    (36) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (42) equal -> . WORD EQUALS expr
    (43) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON block
    (85) evaluate -> . EVALUATE expr
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (77) return -> . RETURN expr
    (19) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (18) input -> . INPUT
    (94) var -> . WORD
    (78) term -> . str
    (79) term -> . float
    (80) term -> . int
    (81) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (21) func -> . WORD LPAREN args RPAREN block
    (22) func -> . WORD LPAREN args RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (34) list -> . LBRACKET comms RBRACKET
    (35) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (91) str -> . STRING
    (89) float -> . FLOAT
    (82) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    RBRACE          shift and go to state 116
    DIVIDER         shift and go to state 54
    DEFFUNC         shift and go to state 37
    MODULE          shift and go to state 5
    APPLICATION     shift and go to state 29
    DEFINE          shift and go to state 22
    WORD            shift and go to state 19
    EXECSCAN        shift and go to state 72
    COMPILE         shift and go to state 63
    DOWNLEVEL       shift and go to state 25
    IF              shift and go to state 11
    AMPERSAND       shift and go to state 62
    PLUSMINUS       shift and go to state 68
    PRINT           shift and go to state 53
    VARIABLES       shift and go to state 65
    PYTHON          shift and go to state 59
    EXECFILE        shift and go to state 83
    BREAK           shift and go to state 90
    CURFILE         shift and go to state 3
    EXECTEXT        shift and go to state 78
    MLIST           shift and go to state 64
    EVALUATE        shift and go to state 50
    YIELD           shift and go to state 45
    REPEAT          shift and go to state 81
    PASS            shift and go to state 42
    LBRACE          shift and go to state 43
    RETURN          shift and go to state 28
    MODULES         shift and go to state 47
    EXFILES         shift and go to state 74
    INPUT           shift and go to state 79
    ABSPATH         shift and go to state 20
    INVRELPATH      shift and go to state 49
    RELPATH         shift and go to state 36
    RELPATHBASE     shift and go to state 52
    LBRACKET        shift and go to state 27
    STRING          shift and go to state 73
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 39

    python                         shift and go to state 48
    var                            shift and go to state 2
    pass                           shift and go to state 4
    dequal                         shift and go to state 6
    deffunc                        shift and go to state 51
    metaexpr                       shift and go to state 84
    exfiles                        shift and go to state 7
    varvar                         shift and go to state 8
    alg1                           shift and go to state 9
    yield                          shift and go to state 12
    if                             shift and go to state 56
    exectext                       shift and go to state 13
    term                           shift and go to state 14
    dict                           shift and go to state 15
    expr                           shift and go to state 113
    curfile                        shift and go to state 17
    input                          shift and go to state 18
    float                          shift and go to state 1
    block                          shift and go to state 57
    expralg                        shift and go to state 40
    declare                        shift and go to state 114
    mlist                          shift and go to state 61
    return                         shift and go to state 26
    module                         shift and go to state 60
    evaluate                       shift and go to state 23
    modules                        shift and go to state 67
    print                          shift and go to state 24
    relpathbase                    shift and go to state 58
    append                         shift and go to state 69
    func                           shift and go to state 70
    execscan                       shift and go to state 71
    alg3                           shift and go to state 66
    declares                       shift and go to state 117
    str                            shift and go to state 75
    application                    shift and go to state 76
    define                         shift and go to state 10
    repeat                         shift and go to state 30
    alg2                           shift and go to state 77
    compile                        shift and go to state 31
    list                           shift and go to state 33
    invrelpath                     shift and go to state 80
    abspath                        shift and go to state 55
    break                          shift and go to state 82
    inblock                        shift and go to state 115
    downlevel                      shift and go to state 34
    alg0                           shift and go to state 38
    execfile                       shift and go to state 85
    element                        shift and go to state 86
    divider                        shift and go to state 87
    parttree                       shift and go to state 89
    int                            shift and go to state 41
    relpath                        shift and go to state 88
    variables                      shift and go to state 44
    equal                          shift and go to state 46

state 44

    (50) expr -> variables .

    LBRACKET        reduce using rule 50 (expr -> variables .)
    COMMA           reduce using rule 50 (expr -> variables .)
    RPAREN          reduce using rule 50 (expr -> variables .)
    COLON           reduce using rule 50 (expr -> variables .)
    RBRACE          reduce using rule 50 (expr -> variables .)
    DIVIDER         reduce using rule 50 (expr -> variables .)
    RBRACKET        reduce using rule 50 (expr -> variables .)
    $end            reduce using rule 50 (expr -> variables .)
    QUESTION        reduce using rule 50 (expr -> variables .)


state 45

    (90) yield -> YIELD .

    LBRACKET        reduce using rule 90 (yield -> YIELD .)
    DIVIDER         reduce using rule 90 (yield -> YIELD .)
    $end            reduce using rule 90 (yield -> YIELD .)
    RBRACE          reduce using rule 90 (yield -> YIELD .)
    COLON           reduce using rule 90 (yield -> YIELD .)
    QUESTION        reduce using rule 90 (yield -> YIELD .)
    RBRACKET        reduce using rule 90 (yield -> YIELD .)
    COMMA           reduce using rule 90 (yield -> YIELD .)
    RPAREN          reduce using rule 90 (yield -> YIELD .)


state 46

    (56) expr -> equal .

    LBRACKET        reduce using rule 56 (expr -> equal .)
    COMMA           reduce using rule 56 (expr -> equal .)
    RPAREN          reduce using rule 56 (expr -> equal .)
    COLON           reduce using rule 56 (expr -> equal .)
    RBRACE          reduce using rule 56 (expr -> equal .)
    DIVIDER         reduce using rule 56 (expr -> equal .)
    RBRACKET        reduce using rule 56 (expr -> equal .)
    $end            reduce using rule 56 (expr -> equal .)
    QUESTION        reduce using rule 56 (expr -> equal .)


state 47

    (19) modules -> MODULES .

    LBRACKET        reduce using rule 19 (modules -> MODULES .)
    DIVIDER         reduce using rule 19 (modules -> MODULES .)
    $end            reduce using rule 19 (modules -> MODULES .)
    RBRACE          reduce using rule 19 (modules -> MODULES .)
    COLON           reduce using rule 19 (modules -> MODULES .)
    QUESTION        reduce using rule 19 (modules -> MODULES .)
    RBRACKET        reduce using rule 19 (modules -> MODULES .)
    COMMA           reduce using rule 19 (modules -> MODULES .)
    RPAREN          reduce using rule 19 (modules -> MODULES .)


state 48

    (51) expr -> python .

    LBRACKET        reduce using rule 51 (expr -> python .)
    COMMA           reduce using rule 51 (expr -> python .)
    RPAREN          reduce using rule 51 (expr -> python .)
    COLON           reduce using rule 51 (expr -> python .)
    RBRACE          reduce using rule 51 (expr -> python .)
    DIVIDER         reduce using rule 51 (expr -> python .)
    RBRACKET        reduce using rule 51 (expr -> python .)
    $end            reduce using rule 51 (expr -> python .)
    QUESTION        reduce using rule 51 (expr -> python .)


state 49

    (105) invrelpath -> INVRELPATH .

    COLON           reduce using rule 105 (invrelpath -> INVRELPATH .)
    LBRACKET        reduce using rule 105 (invrelpath -> INVRELPATH .)
    RBRACE          reduce using rule 105 (invrelpath -> INVRELPATH .)
    DIVIDER         reduce using rule 105 (invrelpath -> INVRELPATH .)
    DPROD           reduce using rule 105 (invrelpath -> INVRELPATH .)
    DIVMUL          reduce using rule 105 (invrelpath -> INVRELPATH .)
    PLUSMINUS       reduce using rule 105 (invrelpath -> INVRELPATH .)
    $end            reduce using rule 105 (invrelpath -> INVRELPATH .)
    QUESTION        reduce using rule 105 (invrelpath -> INVRELPATH .)
    RBRACKET        reduce using rule 105 (invrelpath -> INVRELPATH .)
    COMMA           reduce using rule 105 (invrelpath -> INVRELPATH .)
    RPAREN          reduce using rule 105 (invrelpath -> INVRELPATH .)


state 50

    (85) evaluate -> EVALUATE . expr
    (45) expr -> . expralg
    (46) expr -> . parttree
    (47) expr -> . alg0
    (48) expr -> . print
    (49) expr -> . varvar
    (50) expr -> . variables
    (51) expr -> . python
    (52) expr -> . execfile
    (53) expr -> . break
    (54) expr -> . curfile
    (55) expr -> . exectext
    (56) expr -> . equal
    (57) expr -> . dequal
    (58) expr -> . element
    (59) expr -> . mlist
    (60) expr -> . evaluate
    (61) expr -> . yield
    (62) expr -> . repeat
    (63) expr -> . pass
    (64) expr -> . dict
    (65) expr -> . return
    (66) expr -> . modules
    (67) expr -> . exfiles
    (68) expr -> . input
    (69) expralg -> . term
    (70) expralg -> . abspath
    (71) expralg -> . invrelpath
    (72) expralg -> . relpath
    (73) expralg -> . relpathbase
    (74) expralg -> . func
    (75) expralg -> . block
    (76) expralg -> . list
    (37) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (83) python -> . PYTHON str
    (84) execfile -> . EXECFILE expr
    (36) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (42) equal -> . WORD EQUALS expr
    (43) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON block
    (85) evaluate -> . EVALUATE expr
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (77) return -> . RETURN expr
    (19) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (18) input -> . INPUT
    (78) term -> . str
    (79) term -> . float
    (80) term -> . int
    (81) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (21) func -> . WORD LPAREN args RPAREN block
    (22) func -> . WORD LPAREN args RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (34) list -> . LBRACKET comms RBRACKET
    (35) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (94) var -> . WORD
    (91) str -> . STRING
    (89) float -> . FLOAT
    (82) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    AMPERSAND       shift and go to state 62
    PLUSMINUS       shift and go to state 68
    PRINT           shift and go to state 53
    VARIABLES       shift and go to state 65
    PYTHON          shift and go to state 59
    EXECFILE        shift and go to state 83
    BREAK           shift and go to state 90
    CURFILE         shift and go to state 3
    EXECTEXT        shift and go to state 78
    WORD            shift and go to state 97
    MLIST           shift and go to state 64
    EVALUATE        shift and go to state 50
    YIELD           shift and go to state 45
    REPEAT          shift and go to state 81
    PASS            shift and go to state 42
    LBRACE          shift and go to state 43
    RETURN          shift and go to state 28
    MODULES         shift and go to state 47
    EXFILES         shift and go to state 74
    INPUT           shift and go to state 79
    ABSPATH         shift and go to state 20
    INVRELPATH      shift and go to state 49
    RELPATH         shift and go to state 36
    RELPATHBASE     shift and go to state 52
    LBRACKET        shift and go to state 27
    STRING          shift and go to state 73
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 39

    python                         shift and go to state 48
    var                            shift and go to state 95
    pass                           shift and go to state 4
    exfiles                        shift and go to state 7
    dequal                         shift and go to state 6
    alg0                           shift and go to state 38
    varvar                         shift and go to state 8
    alg1                           shift and go to state 9
    yield                          shift and go to state 12
    block                          shift and go to state 57
    term                           shift and go to state 14
    dict                           shift and go to state 15
    expr                           shift and go to state 118
    curfile                        shift and go to state 17
    input                          shift and go to state 18
    float                          shift and go to state 1
    exectext                       shift and go to state 13
    mlist                          shift and go to state 61
    return                         shift and go to state 26
    evaluate                       shift and go to state 23
    modules                        shift and go to state 67
    print                          shift and go to state 24
    relpathbase                    shift and go to state 58
    func                           shift and go to state 70
    alg3                           shift and go to state 66
    str                            shift and go to state 75
    repeat                         shift and go to state 30
    alg2                           shift and go to state 77
    list                           shift and go to state 33
    invrelpath                     shift and go to state 80
    abspath                        shift and go to state 55
    break                          shift and go to state 82
    execfile                       shift and go to state 85
    element                        shift and go to state 86
    expralg                        shift and go to state 40
    int                            shift and go to state 41
    relpath                        shift and go to state 88
    variables                      shift and go to state 44
    parttree                       shift and go to state 89
    equal                          shift and go to state 46

state 51

    (24) metaexpr -> deffunc .

    LBRACKET        reduce using rule 24 (metaexpr -> deffunc .)
    DIVIDER         reduce using rule 24 (metaexpr -> deffunc .)
    $end            reduce using rule 24 (metaexpr -> deffunc .)
    RBRACE          reduce using rule 24 (metaexpr -> deffunc .)
    COLON           reduce using rule 24 (metaexpr -> deffunc .)
    QUESTION        reduce using rule 24 (metaexpr -> deffunc .)
    RBRACKET        reduce using rule 24 (metaexpr -> deffunc .)
    COMMA           reduce using rule 24 (metaexpr -> deffunc .)
    RPAREN          reduce using rule 24 (metaexpr -> deffunc .)


state 52

    (102) relpathbase -> RELPATHBASE .

    LBRACKET        reduce using rule 102 (relpathbase -> RELPATHBASE .)
    DIVIDER         reduce using rule 102 (relpathbase -> RELPATHBASE .)
    $end            reduce using rule 102 (relpathbase -> RELPATHBASE .)
    RBRACE          reduce using rule 102 (relpathbase -> RELPATHBASE .)
    COLON           reduce using rule 102 (relpathbase -> RELPATHBASE .)
    QUESTION        reduce using rule 102 (relpathbase -> RELPATHBASE .)
    RBRACKET        reduce using rule 102 (relpathbase -> RELPATHBASE .)
    COMMA           reduce using rule 102 (relpathbase -> RELPATHBASE .)
    RPAREN          reduce using rule 102 (relpathbase -> RELPATHBASE .)
    DPROD           reduce using rule 102 (relpathbase -> RELPATHBASE .)
    DIVMUL          reduce using rule 102 (relpathbase -> RELPATHBASE .)
    PLUSMINUS       reduce using rule 102 (relpathbase -> RELPATHBASE .)


state 53

    (6) print -> PRINT . expr
    (45) expr -> . expralg
    (46) expr -> . parttree
    (47) expr -> . alg0
    (48) expr -> . print
    (49) expr -> . varvar
    (50) expr -> . variables
    (51) expr -> . python
    (52) expr -> . execfile
    (53) expr -> . break
    (54) expr -> . curfile
    (55) expr -> . exectext
    (56) expr -> . equal
    (57) expr -> . dequal
    (58) expr -> . element
    (59) expr -> . mlist
    (60) expr -> . evaluate
    (61) expr -> . yield
    (62) expr -> . repeat
    (63) expr -> . pass
    (64) expr -> . dict
    (65) expr -> . return
    (66) expr -> . modules
    (67) expr -> . exfiles
    (68) expr -> . input
    (69) expralg -> . term
    (70) expralg -> . abspath
    (71) expralg -> . invrelpath
    (72) expralg -> . relpath
    (73) expralg -> . relpathbase
    (74) expralg -> . func
    (75) expralg -> . block
    (76) expralg -> . list
    (37) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (83) python -> . PYTHON str
    (84) execfile -> . EXECFILE expr
    (36) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (42) equal -> . WORD EQUALS expr
    (43) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON block
    (85) evaluate -> . EVALUATE expr
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (77) return -> . RETURN expr
    (19) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (18) input -> . INPUT
    (78) term -> . str
    (79) term -> . float
    (80) term -> . int
    (81) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (21) func -> . WORD LPAREN args RPAREN block
    (22) func -> . WORD LPAREN args RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (34) list -> . LBRACKET comms RBRACKET
    (35) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (94) var -> . WORD
    (91) str -> . STRING
    (89) float -> . FLOAT
    (82) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    AMPERSAND       shift and go to state 62
    PLUSMINUS       shift and go to state 68
    PRINT           shift and go to state 53
    VARIABLES       shift and go to state 65
    PYTHON          shift and go to state 59
    EXECFILE        shift and go to state 83
    BREAK           shift and go to state 90
    CURFILE         shift and go to state 3
    EXECTEXT        shift and go to state 78
    WORD            shift and go to state 97
    MLIST           shift and go to state 64
    EVALUATE        shift and go to state 50
    YIELD           shift and go to state 45
    REPEAT          shift and go to state 81
    PASS            shift and go to state 42
    LBRACE          shift and go to state 43
    RETURN          shift and go to state 28
    MODULES         shift and go to state 47
    EXFILES         shift and go to state 74
    INPUT           shift and go to state 79
    ABSPATH         shift and go to state 20
    INVRELPATH      shift and go to state 49
    RELPATH         shift and go to state 36
    RELPATHBASE     shift and go to state 52
    LBRACKET        shift and go to state 27
    STRING          shift and go to state 73
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 39

    python                         shift and go to state 48
    var                            shift and go to state 95
    pass                           shift and go to state 4
    exfiles                        shift and go to state 7
    dequal                         shift and go to state 6
    alg0                           shift and go to state 38
    varvar                         shift and go to state 8
    alg1                           shift and go to state 9
    yield                          shift and go to state 12
    block                          shift and go to state 57
    term                           shift and go to state 14
    dict                           shift and go to state 15
    expr                           shift and go to state 119
    curfile                        shift and go to state 17
    input                          shift and go to state 18
    float                          shift and go to state 1
    exectext                       shift and go to state 13
    mlist                          shift and go to state 61
    return                         shift and go to state 26
    evaluate                       shift and go to state 23
    modules                        shift and go to state 67
    print                          shift and go to state 24
    relpathbase                    shift and go to state 58
    func                           shift and go to state 70
    alg3                           shift and go to state 66
    str                            shift and go to state 75
    repeat                         shift and go to state 30
    alg2                           shift and go to state 77
    list                           shift and go to state 33
    invrelpath                     shift and go to state 80
    abspath                        shift and go to state 55
    break                          shift and go to state 82
    execfile                       shift and go to state 85
    element                        shift and go to state 86
    expralg                        shift and go to state 40
    int                            shift and go to state 41
    relpath                        shift and go to state 88
    variables                      shift and go to state 44
    parttree                       shift and go to state 89
    equal                          shift and go to state 46

state 54

    (17) divider -> DIVIDER .

    DIVIDER         reduce using rule 17 (divider -> DIVIDER .)
    DEFFUNC         reduce using rule 17 (divider -> DIVIDER .)
    MODULE          reduce using rule 17 (divider -> DIVIDER .)
    APPLICATION     reduce using rule 17 (divider -> DIVIDER .)
    DEFINE          reduce using rule 17 (divider -> DIVIDER .)
    WORD            reduce using rule 17 (divider -> DIVIDER .)
    EXECSCAN        reduce using rule 17 (divider -> DIVIDER .)
    COMPILE         reduce using rule 17 (divider -> DIVIDER .)
    DOWNLEVEL       reduce using rule 17 (divider -> DIVIDER .)
    IF              reduce using rule 17 (divider -> DIVIDER .)
    AMPERSAND       reduce using rule 17 (divider -> DIVIDER .)
    PLUSMINUS       reduce using rule 17 (divider -> DIVIDER .)
    PRINT           reduce using rule 17 (divider -> DIVIDER .)
    VARIABLES       reduce using rule 17 (divider -> DIVIDER .)
    PYTHON          reduce using rule 17 (divider -> DIVIDER .)
    EXECFILE        reduce using rule 17 (divider -> DIVIDER .)
    BREAK           reduce using rule 17 (divider -> DIVIDER .)
    CURFILE         reduce using rule 17 (divider -> DIVIDER .)
    EXECTEXT        reduce using rule 17 (divider -> DIVIDER .)
    MLIST           reduce using rule 17 (divider -> DIVIDER .)
    EVALUATE        reduce using rule 17 (divider -> DIVIDER .)
    YIELD           reduce using rule 17 (divider -> DIVIDER .)
    REPEAT          reduce using rule 17 (divider -> DIVIDER .)
    PASS            reduce using rule 17 (divider -> DIVIDER .)
    LBRACE          reduce using rule 17 (divider -> DIVIDER .)
    RETURN          reduce using rule 17 (divider -> DIVIDER .)
    MODULES         reduce using rule 17 (divider -> DIVIDER .)
    EXFILES         reduce using rule 17 (divider -> DIVIDER .)
    INPUT           reduce using rule 17 (divider -> DIVIDER .)
    ABSPATH         reduce using rule 17 (divider -> DIVIDER .)
    INVRELPATH      reduce using rule 17 (divider -> DIVIDER .)
    RELPATH         reduce using rule 17 (divider -> DIVIDER .)
    RELPATHBASE     reduce using rule 17 (divider -> DIVIDER .)
    LBRACKET        reduce using rule 17 (divider -> DIVIDER .)
    STRING          reduce using rule 17 (divider -> DIVIDER .)
    FLOAT           reduce using rule 17 (divider -> DIVIDER .)
    NUMBER          reduce using rule 17 (divider -> DIVIDER .)
    RBRACE          reduce using rule 17 (divider -> DIVIDER .)
    $end            reduce using rule 17 (divider -> DIVIDER .)


state 55

    (70) expralg -> abspath .

    COLON           reduce using rule 70 (expralg -> abspath .)
    LBRACKET        reduce using rule 70 (expralg -> abspath .)
    DIVIDER         reduce using rule 70 (expralg -> abspath .)
    $end            reduce using rule 70 (expralg -> abspath .)
    RBRACE          reduce using rule 70 (expralg -> abspath .)
    DPROD           reduce using rule 70 (expralg -> abspath .)
    DIVMUL          reduce using rule 70 (expralg -> abspath .)
    PLUSMINUS       reduce using rule 70 (expralg -> abspath .)
    QUESTION        reduce using rule 70 (expralg -> abspath .)
    RBRACKET        reduce using rule 70 (expralg -> abspath .)
    COMMA           reduce using rule 70 (expralg -> abspath .)
    RPAREN          reduce using rule 70 (expralg -> abspath .)


state 56

    (33) metaexpr -> if .

    LBRACKET        reduce using rule 33 (metaexpr -> if .)
    DIVIDER         reduce using rule 33 (metaexpr -> if .)
    $end            reduce using rule 33 (metaexpr -> if .)
    RBRACE          reduce using rule 33 (metaexpr -> if .)
    COLON           reduce using rule 33 (metaexpr -> if .)
    QUESTION        reduce using rule 33 (metaexpr -> if .)
    RBRACKET        reduce using rule 33 (metaexpr -> if .)
    COMMA           reduce using rule 33 (metaexpr -> if .)
    RPAREN          reduce using rule 33 (metaexpr -> if .)


state 57

    (75) expralg -> block .

    COLON           reduce using rule 75 (expralg -> block .)
    LBRACKET        reduce using rule 75 (expralg -> block .)
    DIVIDER         reduce using rule 75 (expralg -> block .)
    $end            reduce using rule 75 (expralg -> block .)
    RBRACE          reduce using rule 75 (expralg -> block .)
    DPROD           reduce using rule 75 (expralg -> block .)
    DIVMUL          reduce using rule 75 (expralg -> block .)
    PLUSMINUS       reduce using rule 75 (expralg -> block .)
    QUESTION        reduce using rule 75 (expralg -> block .)
    RBRACKET        reduce using rule 75 (expralg -> block .)
    COMMA           reduce using rule 75 (expralg -> block .)
    RPAREN          reduce using rule 75 (expralg -> block .)


state 58

    (73) expralg -> relpathbase .

    COLON           reduce using rule 73 (expralg -> relpathbase .)
    LBRACKET        reduce using rule 73 (expralg -> relpathbase .)
    DIVIDER         reduce using rule 73 (expralg -> relpathbase .)
    $end            reduce using rule 73 (expralg -> relpathbase .)
    RBRACE          reduce using rule 73 (expralg -> relpathbase .)
    DPROD           reduce using rule 73 (expralg -> relpathbase .)
    DIVMUL          reduce using rule 73 (expralg -> relpathbase .)
    PLUSMINUS       reduce using rule 73 (expralg -> relpathbase .)
    QUESTION        reduce using rule 73 (expralg -> relpathbase .)
    RBRACKET        reduce using rule 73 (expralg -> relpathbase .)
    COMMA           reduce using rule 73 (expralg -> relpathbase .)
    RPAREN          reduce using rule 73 (expralg -> relpathbase .)


state 59

    (83) python -> PYTHON . str
    (91) str -> . STRING

    STRING          shift and go to state 73

    str                            shift and go to state 120

state 60

    (25) metaexpr -> module .

    LBRACKET        reduce using rule 25 (metaexpr -> module .)
    DIVIDER         reduce using rule 25 (metaexpr -> module .)
    $end            reduce using rule 25 (metaexpr -> module .)
    RBRACE          reduce using rule 25 (metaexpr -> module .)
    COLON           reduce using rule 25 (metaexpr -> module .)
    QUESTION        reduce using rule 25 (metaexpr -> module .)
    RBRACKET        reduce using rule 25 (metaexpr -> module .)
    COMMA           reduce using rule 25 (metaexpr -> module .)
    RPAREN          reduce using rule 25 (metaexpr -> module .)


state 61

    (59) expr -> mlist .

    LBRACKET        reduce using rule 59 (expr -> mlist .)
    COMMA           reduce using rule 59 (expr -> mlist .)
    RPAREN          reduce using rule 59 (expr -> mlist .)
    COLON           reduce using rule 59 (expr -> mlist .)
    RBRACE          reduce using rule 59 (expr -> mlist .)
    DIVIDER         reduce using rule 59 (expr -> mlist .)
    RBRACKET        reduce using rule 59 (expr -> mlist .)
    $end            reduce using rule 59 (expr -> mlist .)
    QUESTION        reduce using rule 59 (expr -> mlist .)


state 62

    (37) parttree -> AMPERSAND . metaexpr
    (23) metaexpr -> . expr
    (24) metaexpr -> . deffunc
    (25) metaexpr -> . module
    (26) metaexpr -> . application
    (27) metaexpr -> . declare
    (28) metaexpr -> . append
    (29) metaexpr -> . define
    (30) metaexpr -> . execscan
    (31) metaexpr -> . compile
    (32) metaexpr -> . downlevel
    (33) metaexpr -> . if
    (45) expr -> . expralg
    (46) expr -> . parttree
    (47) expr -> . alg0
    (48) expr -> . print
    (49) expr -> . varvar
    (50) expr -> . variables
    (51) expr -> . python
    (52) expr -> . execfile
    (53) expr -> . break
    (54) expr -> . curfile
    (55) expr -> . exectext
    (56) expr -> . equal
    (57) expr -> . dequal
    (58) expr -> . element
    (59) expr -> . mlist
    (60) expr -> . evaluate
    (61) expr -> . yield
    (62) expr -> . repeat
    (63) expr -> . pass
    (64) expr -> . dict
    (65) expr -> . return
    (66) expr -> . modules
    (67) expr -> . exfiles
    (68) expr -> . input
    (8) deffunc -> . DEFFUNC WORD LPAREN args RPAREN block
    (7) module -> . MODULE WORD block
    (44) application -> . APPLICATION WORD block
    (15) declare -> . expr COLON expr
    (20) append -> . var APPEND expr
    (9) define -> . DEFINE WORD expr
    (10) define -> . WORD DEFOP expr
    (86) execscan -> . EXECSCAN expr
    (103) compile -> . COMPILE
    (88) downlevel -> . DOWNLEVEL expr
    (16) if -> . IF expr QUESTION expr COLON expr
    (69) expralg -> . term
    (70) expralg -> . abspath
    (71) expralg -> . invrelpath
    (72) expralg -> . relpath
    (73) expralg -> . relpathbase
    (74) expralg -> . func
    (75) expralg -> . block
    (76) expralg -> . list
    (37) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (83) python -> . PYTHON str
    (84) execfile -> . EXECFILE expr
    (36) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (42) equal -> . WORD EQUALS expr
    (43) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON block
    (85) evaluate -> . EVALUATE expr
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (77) return -> . RETURN expr
    (19) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (18) input -> . INPUT
    (94) var -> . WORD
    (78) term -> . str
    (79) term -> . float
    (80) term -> . int
    (81) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (21) func -> . WORD LPAREN args RPAREN block
    (22) func -> . WORD LPAREN args RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (34) list -> . LBRACKET comms RBRACKET
    (35) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (91) str -> . STRING
    (89) float -> . FLOAT
    (82) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    DEFFUNC         shift and go to state 37
    MODULE          shift and go to state 5
    APPLICATION     shift and go to state 29
    DEFINE          shift and go to state 22
    WORD            shift and go to state 19
    EXECSCAN        shift and go to state 72
    COMPILE         shift and go to state 63
    DOWNLEVEL       shift and go to state 25
    IF              shift and go to state 11
    AMPERSAND       shift and go to state 62
    PLUSMINUS       shift and go to state 68
    PRINT           shift and go to state 53
    VARIABLES       shift and go to state 65
    PYTHON          shift and go to state 59
    EXECFILE        shift and go to state 83
    BREAK           shift and go to state 90
    CURFILE         shift and go to state 3
    EXECTEXT        shift and go to state 78
    MLIST           shift and go to state 64
    EVALUATE        shift and go to state 50
    YIELD           shift and go to state 45
    REPEAT          shift and go to state 81
    PASS            shift and go to state 42
    LBRACE          shift and go to state 43
    RETURN          shift and go to state 28
    MODULES         shift and go to state 47
    EXFILES         shift and go to state 74
    INPUT           shift and go to state 79
    ABSPATH         shift and go to state 20
    INVRELPATH      shift and go to state 49
    RELPATH         shift and go to state 36
    RELPATHBASE     shift and go to state 52
    LBRACKET        shift and go to state 27
    STRING          shift and go to state 73
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 39

    python                         shift and go to state 48
    var                            shift and go to state 2
    pass                           shift and go to state 4
    dequal                         shift and go to state 6
    deffunc                        shift and go to state 51
    metaexpr                       shift and go to state 121
    exfiles                        shift and go to state 7
    varvar                         shift and go to state 8
    alg1                           shift and go to state 9
    yield                          shift and go to state 12
    if                             shift and go to state 56
    exectext                       shift and go to state 13
    term                           shift and go to state 14
    dict                           shift and go to state 15
    expr                           shift and go to state 16
    element                        shift and go to state 86
    input                          shift and go to state 18
    float                          shift and go to state 1
    block                          shift and go to state 57
    module                         shift and go to state 60
    mlist                          shift and go to state 61
    return                         shift and go to state 26
    declare                        shift and go to state 21
    evaluate                       shift and go to state 23
    modules                        shift and go to state 67
    print                          shift and go to state 24
    relpathbase                    shift and go to state 58
    append                         shift and go to state 69
    func                           shift and go to state 70
    execscan                       shift and go to state 71
    alg3                           shift and go to state 66
    str                            shift and go to state 75
    application                    shift and go to state 76
    define                         shift and go to state 10
    repeat                         shift and go to state 30
    alg2                           shift and go to state 77
    compile                        shift and go to state 31
    list                           shift and go to state 33
    invrelpath                     shift and go to state 80
    abspath                        shift and go to state 55
    break                          shift and go to state 82
    downlevel                      shift and go to state 34
    alg0                           shift and go to state 38
    execfile                       shift and go to state 85
    curfile                        shift and go to state 17
    expralg                        shift and go to state 40
    int                            shift and go to state 41
    relpath                        shift and go to state 88
    variables                      shift and go to state 44
    parttree                       shift and go to state 89
    equal                          shift and go to state 46

state 63

    (103) compile -> COMPILE .

    RBRACE          reduce using rule 103 (compile -> COMPILE .)
    DIVIDER         reduce using rule 103 (compile -> COMPILE .)
    $end            reduce using rule 103 (compile -> COMPILE .)
    LBRACKET        reduce using rule 103 (compile -> COMPILE .)
    COLON           reduce using rule 103 (compile -> COMPILE .)
    QUESTION        reduce using rule 103 (compile -> COMPILE .)
    RBRACKET        reduce using rule 103 (compile -> COMPILE .)
    COMMA           reduce using rule 103 (compile -> COMPILE .)
    RPAREN          reduce using rule 103 (compile -> COMPILE .)


state 64

    (96) mlist -> MLIST . COLON block

    COLON           shift and go to state 122


state 65

    (95) variables -> VARIABLES . expr
    (45) expr -> . expralg
    (46) expr -> . parttree
    (47) expr -> . alg0
    (48) expr -> . print
    (49) expr -> . varvar
    (50) expr -> . variables
    (51) expr -> . python
    (52) expr -> . execfile
    (53) expr -> . break
    (54) expr -> . curfile
    (55) expr -> . exectext
    (56) expr -> . equal
    (57) expr -> . dequal
    (58) expr -> . element
    (59) expr -> . mlist
    (60) expr -> . evaluate
    (61) expr -> . yield
    (62) expr -> . repeat
    (63) expr -> . pass
    (64) expr -> . dict
    (65) expr -> . return
    (66) expr -> . modules
    (67) expr -> . exfiles
    (68) expr -> . input
    (69) expralg -> . term
    (70) expralg -> . abspath
    (71) expralg -> . invrelpath
    (72) expralg -> . relpath
    (73) expralg -> . relpathbase
    (74) expralg -> . func
    (75) expralg -> . block
    (76) expralg -> . list
    (37) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (83) python -> . PYTHON str
    (84) execfile -> . EXECFILE expr
    (36) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (42) equal -> . WORD EQUALS expr
    (43) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON block
    (85) evaluate -> . EVALUATE expr
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (77) return -> . RETURN expr
    (19) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (18) input -> . INPUT
    (78) term -> . str
    (79) term -> . float
    (80) term -> . int
    (81) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (21) func -> . WORD LPAREN args RPAREN block
    (22) func -> . WORD LPAREN args RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (34) list -> . LBRACKET comms RBRACKET
    (35) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (94) var -> . WORD
    (91) str -> . STRING
    (89) float -> . FLOAT
    (82) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    AMPERSAND       shift and go to state 62
    PLUSMINUS       shift and go to state 68
    PRINT           shift and go to state 53
    VARIABLES       shift and go to state 65
    PYTHON          shift and go to state 59
    EXECFILE        shift and go to state 83
    BREAK           shift and go to state 90
    CURFILE         shift and go to state 3
    EXECTEXT        shift and go to state 78
    WORD            shift and go to state 97
    MLIST           shift and go to state 64
    EVALUATE        shift and go to state 50
    YIELD           shift and go to state 45
    REPEAT          shift and go to state 81
    PASS            shift and go to state 42
    LBRACE          shift and go to state 43
    RETURN          shift and go to state 28
    MODULES         shift and go to state 47
    EXFILES         shift and go to state 74
    INPUT           shift and go to state 79
    ABSPATH         shift and go to state 20
    INVRELPATH      shift and go to state 49
    RELPATH         shift and go to state 36
    RELPATHBASE     shift and go to state 52
    LBRACKET        shift and go to state 27
    STRING          shift and go to state 73
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 39

    python                         shift and go to state 48
    var                            shift and go to state 95
    pass                           shift and go to state 4
    exfiles                        shift and go to state 7
    dequal                         shift and go to state 6
    alg0                           shift and go to state 38
    varvar                         shift and go to state 8
    alg1                           shift and go to state 9
    yield                          shift and go to state 12
    block                          shift and go to state 57
    term                           shift and go to state 14
    dict                           shift and go to state 15
    expr                           shift and go to state 123
    curfile                        shift and go to state 17
    input                          shift and go to state 18
    float                          shift and go to state 1
    exectext                       shift and go to state 13
    mlist                          shift and go to state 61
    return                         shift and go to state 26
    evaluate                       shift and go to state 23
    modules                        shift and go to state 67
    print                          shift and go to state 24
    relpathbase                    shift and go to state 58
    func                           shift and go to state 70
    alg3                           shift and go to state 66
    str                            shift and go to state 75
    repeat                         shift and go to state 30
    alg2                           shift and go to state 77
    list                           shift and go to state 33
    invrelpath                     shift and go to state 80
    abspath                        shift and go to state 55
    break                          shift and go to state 82
    execfile                       shift and go to state 85
    element                        shift and go to state 86
    expralg                        shift and go to state 40
    int                            shift and go to state 41
    relpath                        shift and go to state 88
    variables                      shift and go to state 44
    parttree                       shift and go to state 89
    equal                          shift and go to state 46

state 66

    (112) alg2 -> alg3 .

    DPROD           reduce using rule 112 (alg2 -> alg3 .)
    DIVMUL          reduce using rule 112 (alg2 -> alg3 .)
    PLUSMINUS       reduce using rule 112 (alg2 -> alg3 .)
    COLON           reduce using rule 112 (alg2 -> alg3 .)
    LBRACKET        reduce using rule 112 (alg2 -> alg3 .)
    DIVIDER         reduce using rule 112 (alg2 -> alg3 .)
    $end            reduce using rule 112 (alg2 -> alg3 .)
    QUESTION        reduce using rule 112 (alg2 -> alg3 .)
    RBRACE          reduce using rule 112 (alg2 -> alg3 .)
    RBRACKET        reduce using rule 112 (alg2 -> alg3 .)
    COMMA           reduce using rule 112 (alg2 -> alg3 .)
    RPAREN          reduce using rule 112 (alg2 -> alg3 .)


state 67

    (66) expr -> modules .

    LBRACKET        reduce using rule 66 (expr -> modules .)
    COMMA           reduce using rule 66 (expr -> modules .)
    RPAREN          reduce using rule 66 (expr -> modules .)
    COLON           reduce using rule 66 (expr -> modules .)
    RBRACE          reduce using rule 66 (expr -> modules .)
    DIVIDER         reduce using rule 66 (expr -> modules .)
    RBRACKET        reduce using rule 66 (expr -> modules .)
    $end            reduce using rule 66 (expr -> modules .)
    QUESTION        reduce using rule 66 (expr -> modules .)


state 68

    (109) alg0 -> PLUSMINUS . alg1
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg
    (69) expralg -> . term
    (70) expralg -> . abspath
    (71) expralg -> . invrelpath
    (72) expralg -> . relpath
    (73) expralg -> . relpathbase
    (74) expralg -> . func
    (75) expralg -> . block
    (76) expralg -> . list
    (78) term -> . str
    (79) term -> . float
    (80) term -> . int
    (81) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (21) func -> . WORD LPAREN args RPAREN block
    (22) func -> . WORD LPAREN args RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (34) list -> . LBRACKET comms RBRACKET
    (35) list -> . LBRACKET RBRACKET
    (91) str -> . STRING
    (89) float -> . FLOAT
    (82) int -> . NUMBER
    (94) var -> . WORD

    ABSPATH         shift and go to state 20
    INVRELPATH      shift and go to state 49
    RELPATH         shift and go to state 36
    RELPATHBASE     shift and go to state 52
    WORD            shift and go to state 126
    LBRACE          shift and go to state 128
    LBRACKET        shift and go to state 27
    STRING          shift and go to state 73
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 39

    term                           shift and go to state 14
    relpathbase                    shift and go to state 58
    invrelpath                     shift and go to state 80
    func                           shift and go to state 70
    abspath                        shift and go to state 55
    alg3                           shift and go to state 66
    float                          shift and go to state 1
    list                           shift and go to state 33
    expralg                        shift and go to state 127
    int                            shift and go to state 41
    alg1                           shift and go to state 125
    str                            shift and go to state 75
    var                            shift and go to state 124
    alg2                           shift and go to state 77
    block                          shift and go to state 57
    relpath                        shift and go to state 88

state 69

    (28) metaexpr -> append .

    LBRACKET        reduce using rule 28 (metaexpr -> append .)
    DIVIDER         reduce using rule 28 (metaexpr -> append .)
    $end            reduce using rule 28 (metaexpr -> append .)
    RBRACE          reduce using rule 28 (metaexpr -> append .)
    COLON           reduce using rule 28 (metaexpr -> append .)
    QUESTION        reduce using rule 28 (metaexpr -> append .)
    RBRACKET        reduce using rule 28 (metaexpr -> append .)
    COMMA           reduce using rule 28 (metaexpr -> append .)
    RPAREN          reduce using rule 28 (metaexpr -> append .)


state 70

    (74) expralg -> func .

    COLON           reduce using rule 74 (expralg -> func .)
    LBRACKET        reduce using rule 74 (expralg -> func .)
    DIVIDER         reduce using rule 74 (expralg -> func .)
    $end            reduce using rule 74 (expralg -> func .)
    RBRACE          reduce using rule 74 (expralg -> func .)
    DPROD           reduce using rule 74 (expralg -> func .)
    DIVMUL          reduce using rule 74 (expralg -> func .)
    PLUSMINUS       reduce using rule 74 (expralg -> func .)
    QUESTION        reduce using rule 74 (expralg -> func .)
    RBRACKET        reduce using rule 74 (expralg -> func .)
    COMMA           reduce using rule 74 (expralg -> func .)
    RPAREN          reduce using rule 74 (expralg -> func .)


state 71

    (30) metaexpr -> execscan .

    LBRACKET        reduce using rule 30 (metaexpr -> execscan .)
    DIVIDER         reduce using rule 30 (metaexpr -> execscan .)
    $end            reduce using rule 30 (metaexpr -> execscan .)
    RBRACE          reduce using rule 30 (metaexpr -> execscan .)
    COLON           reduce using rule 30 (metaexpr -> execscan .)
    QUESTION        reduce using rule 30 (metaexpr -> execscan .)
    RBRACKET        reduce using rule 30 (metaexpr -> execscan .)
    COMMA           reduce using rule 30 (metaexpr -> execscan .)
    RPAREN          reduce using rule 30 (metaexpr -> execscan .)


state 72

    (86) execscan -> EXECSCAN . expr
    (45) expr -> . expralg
    (46) expr -> . parttree
    (47) expr -> . alg0
    (48) expr -> . print
    (49) expr -> . varvar
    (50) expr -> . variables
    (51) expr -> . python
    (52) expr -> . execfile
    (53) expr -> . break
    (54) expr -> . curfile
    (55) expr -> . exectext
    (56) expr -> . equal
    (57) expr -> . dequal
    (58) expr -> . element
    (59) expr -> . mlist
    (60) expr -> . evaluate
    (61) expr -> . yield
    (62) expr -> . repeat
    (63) expr -> . pass
    (64) expr -> . dict
    (65) expr -> . return
    (66) expr -> . modules
    (67) expr -> . exfiles
    (68) expr -> . input
    (69) expralg -> . term
    (70) expralg -> . abspath
    (71) expralg -> . invrelpath
    (72) expralg -> . relpath
    (73) expralg -> . relpathbase
    (74) expralg -> . func
    (75) expralg -> . block
    (76) expralg -> . list
    (37) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (83) python -> . PYTHON str
    (84) execfile -> . EXECFILE expr
    (36) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (42) equal -> . WORD EQUALS expr
    (43) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON block
    (85) evaluate -> . EVALUATE expr
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (77) return -> . RETURN expr
    (19) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (18) input -> . INPUT
    (78) term -> . str
    (79) term -> . float
    (80) term -> . int
    (81) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (21) func -> . WORD LPAREN args RPAREN block
    (22) func -> . WORD LPAREN args RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (34) list -> . LBRACKET comms RBRACKET
    (35) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (94) var -> . WORD
    (91) str -> . STRING
    (89) float -> . FLOAT
    (82) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    AMPERSAND       shift and go to state 62
    PLUSMINUS       shift and go to state 68
    PRINT           shift and go to state 53
    VARIABLES       shift and go to state 65
    PYTHON          shift and go to state 59
    EXECFILE        shift and go to state 83
    BREAK           shift and go to state 90
    CURFILE         shift and go to state 3
    EXECTEXT        shift and go to state 78
    WORD            shift and go to state 97
    MLIST           shift and go to state 64
    EVALUATE        shift and go to state 50
    YIELD           shift and go to state 45
    REPEAT          shift and go to state 81
    PASS            shift and go to state 42
    LBRACE          shift and go to state 43
    RETURN          shift and go to state 28
    MODULES         shift and go to state 47
    EXFILES         shift and go to state 74
    INPUT           shift and go to state 79
    ABSPATH         shift and go to state 20
    INVRELPATH      shift and go to state 49
    RELPATH         shift and go to state 36
    RELPATHBASE     shift and go to state 52
    LBRACKET        shift and go to state 27
    STRING          shift and go to state 73
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 39

    python                         shift and go to state 48
    var                            shift and go to state 95
    pass                           shift and go to state 4
    exfiles                        shift and go to state 7
    dequal                         shift and go to state 6
    alg0                           shift and go to state 38
    varvar                         shift and go to state 8
    alg1                           shift and go to state 9
    yield                          shift and go to state 12
    block                          shift and go to state 57
    term                           shift and go to state 14
    dict                           shift and go to state 15
    expr                           shift and go to state 129
    curfile                        shift and go to state 17
    input                          shift and go to state 18
    float                          shift and go to state 1
    exectext                       shift and go to state 13
    mlist                          shift and go to state 61
    return                         shift and go to state 26
    evaluate                       shift and go to state 23
    modules                        shift and go to state 67
    print                          shift and go to state 24
    relpathbase                    shift and go to state 58
    func                           shift and go to state 70
    alg3                           shift and go to state 66
    str                            shift and go to state 75
    repeat                         shift and go to state 30
    alg2                           shift and go to state 77
    list                           shift and go to state 33
    invrelpath                     shift and go to state 80
    abspath                        shift and go to state 55
    break                          shift and go to state 82
    execfile                       shift and go to state 85
    element                        shift and go to state 86
    expralg                        shift and go to state 40
    int                            shift and go to state 41
    relpath                        shift and go to state 88
    variables                      shift and go to state 44
    parttree                       shift and go to state 89
    equal                          shift and go to state 46

state 73

    (91) str -> STRING .

    LBRACKET        reduce using rule 91 (str -> STRING .)
    DIVIDER         reduce using rule 91 (str -> STRING .)
    $end            reduce using rule 91 (str -> STRING .)
    RBRACE          reduce using rule 91 (str -> STRING .)
    COLON           reduce using rule 91 (str -> STRING .)
    QUESTION        reduce using rule 91 (str -> STRING .)
    RBRACKET        reduce using rule 91 (str -> STRING .)
    COMMA           reduce using rule 91 (str -> STRING .)
    RPAREN          reduce using rule 91 (str -> STRING .)
    DPROD           reduce using rule 91 (str -> STRING .)
    DIVMUL          reduce using rule 91 (str -> STRING .)
    PLUSMINUS       reduce using rule 91 (str -> STRING .)


state 74

    (101) exfiles -> EXFILES .

    LBRACKET        reduce using rule 101 (exfiles -> EXFILES .)
    DIVIDER         reduce using rule 101 (exfiles -> EXFILES .)
    $end            reduce using rule 101 (exfiles -> EXFILES .)
    RBRACE          reduce using rule 101 (exfiles -> EXFILES .)
    COLON           reduce using rule 101 (exfiles -> EXFILES .)
    QUESTION        reduce using rule 101 (exfiles -> EXFILES .)
    RBRACKET        reduce using rule 101 (exfiles -> EXFILES .)
    COMMA           reduce using rule 101 (exfiles -> EXFILES .)
    RPAREN          reduce using rule 101 (exfiles -> EXFILES .)


state 75

    (78) term -> str .

    LBRACKET        reduce using rule 78 (term -> str .)
    DIVIDER         reduce using rule 78 (term -> str .)
    $end            reduce using rule 78 (term -> str .)
    RBRACE          reduce using rule 78 (term -> str .)
    COLON           reduce using rule 78 (term -> str .)
    QUESTION        reduce using rule 78 (term -> str .)
    RBRACKET        reduce using rule 78 (term -> str .)
    COMMA           reduce using rule 78 (term -> str .)
    RPAREN          reduce using rule 78 (term -> str .)
    DPROD           reduce using rule 78 (term -> str .)
    DIVMUL          reduce using rule 78 (term -> str .)
    PLUSMINUS       reduce using rule 78 (term -> str .)


state 76

    (26) metaexpr -> application .

    LBRACKET        reduce using rule 26 (metaexpr -> application .)
    DIVIDER         reduce using rule 26 (metaexpr -> application .)
    $end            reduce using rule 26 (metaexpr -> application .)
    RBRACE          reduce using rule 26 (metaexpr -> application .)
    COLON           reduce using rule 26 (metaexpr -> application .)
    QUESTION        reduce using rule 26 (metaexpr -> application .)
    RBRACKET        reduce using rule 26 (metaexpr -> application .)
    COMMA           reduce using rule 26 (metaexpr -> application .)
    RPAREN          reduce using rule 26 (metaexpr -> application .)


state 77

    (110) alg1 -> alg2 .
    (113) alg2 -> alg2 . DPROD alg3

    DIVMUL          reduce using rule 110 (alg1 -> alg2 .)
    PLUSMINUS       reduce using rule 110 (alg1 -> alg2 .)
    COLON           reduce using rule 110 (alg1 -> alg2 .)
    LBRACKET        reduce using rule 110 (alg1 -> alg2 .)
    RBRACE          reduce using rule 110 (alg1 -> alg2 .)
    DIVIDER         reduce using rule 110 (alg1 -> alg2 .)
    $end            reduce using rule 110 (alg1 -> alg2 .)
    QUESTION        reduce using rule 110 (alg1 -> alg2 .)
    RBRACKET        reduce using rule 110 (alg1 -> alg2 .)
    COMMA           reduce using rule 110 (alg1 -> alg2 .)
    RPAREN          reduce using rule 110 (alg1 -> alg2 .)
    DPROD           shift and go to state 130


state 78

    (87) exectext -> EXECTEXT . expr
    (45) expr -> . expralg
    (46) expr -> . parttree
    (47) expr -> . alg0
    (48) expr -> . print
    (49) expr -> . varvar
    (50) expr -> . variables
    (51) expr -> . python
    (52) expr -> . execfile
    (53) expr -> . break
    (54) expr -> . curfile
    (55) expr -> . exectext
    (56) expr -> . equal
    (57) expr -> . dequal
    (58) expr -> . element
    (59) expr -> . mlist
    (60) expr -> . evaluate
    (61) expr -> . yield
    (62) expr -> . repeat
    (63) expr -> . pass
    (64) expr -> . dict
    (65) expr -> . return
    (66) expr -> . modules
    (67) expr -> . exfiles
    (68) expr -> . input
    (69) expralg -> . term
    (70) expralg -> . abspath
    (71) expralg -> . invrelpath
    (72) expralg -> . relpath
    (73) expralg -> . relpathbase
    (74) expralg -> . func
    (75) expralg -> . block
    (76) expralg -> . list
    (37) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (83) python -> . PYTHON str
    (84) execfile -> . EXECFILE expr
    (36) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (42) equal -> . WORD EQUALS expr
    (43) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON block
    (85) evaluate -> . EVALUATE expr
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (77) return -> . RETURN expr
    (19) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (18) input -> . INPUT
    (78) term -> . str
    (79) term -> . float
    (80) term -> . int
    (81) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (21) func -> . WORD LPAREN args RPAREN block
    (22) func -> . WORD LPAREN args RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (34) list -> . LBRACKET comms RBRACKET
    (35) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (94) var -> . WORD
    (91) str -> . STRING
    (89) float -> . FLOAT
    (82) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    AMPERSAND       shift and go to state 62
    PLUSMINUS       shift and go to state 68
    PRINT           shift and go to state 53
    VARIABLES       shift and go to state 65
    PYTHON          shift and go to state 59
    EXECFILE        shift and go to state 83
    BREAK           shift and go to state 90
    CURFILE         shift and go to state 3
    EXECTEXT        shift and go to state 78
    WORD            shift and go to state 97
    MLIST           shift and go to state 64
    EVALUATE        shift and go to state 50
    YIELD           shift and go to state 45
    REPEAT          shift and go to state 81
    PASS            shift and go to state 42
    LBRACE          shift and go to state 43
    RETURN          shift and go to state 28
    MODULES         shift and go to state 47
    EXFILES         shift and go to state 74
    INPUT           shift and go to state 79
    ABSPATH         shift and go to state 20
    INVRELPATH      shift and go to state 49
    RELPATH         shift and go to state 36
    RELPATHBASE     shift and go to state 52
    LBRACKET        shift and go to state 27
    STRING          shift and go to state 73
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 39

    python                         shift and go to state 48
    var                            shift and go to state 95
    pass                           shift and go to state 4
    exfiles                        shift and go to state 7
    dequal                         shift and go to state 6
    alg0                           shift and go to state 38
    varvar                         shift and go to state 8
    alg1                           shift and go to state 9
    yield                          shift and go to state 12
    block                          shift and go to state 57
    term                           shift and go to state 14
    dict                           shift and go to state 15
    expr                           shift and go to state 131
    curfile                        shift and go to state 17
    input                          shift and go to state 18
    float                          shift and go to state 1
    exectext                       shift and go to state 13
    mlist                          shift and go to state 61
    return                         shift and go to state 26
    evaluate                       shift and go to state 23
    modules                        shift and go to state 67
    print                          shift and go to state 24
    relpathbase                    shift and go to state 58
    func                           shift and go to state 70
    alg3                           shift and go to state 66
    str                            shift and go to state 75
    repeat                         shift and go to state 30
    alg2                           shift and go to state 77
    list                           shift and go to state 33
    invrelpath                     shift and go to state 80
    abspath                        shift and go to state 55
    break                          shift and go to state 82
    execfile                       shift and go to state 85
    element                        shift and go to state 86
    expralg                        shift and go to state 40
    int                            shift and go to state 41
    relpath                        shift and go to state 88
    variables                      shift and go to state 44
    parttree                       shift and go to state 89
    equal                          shift and go to state 46

state 79

    (18) input -> INPUT .

    LBRACKET        reduce using rule 18 (input -> INPUT .)
    DIVIDER         reduce using rule 18 (input -> INPUT .)
    $end            reduce using rule 18 (input -> INPUT .)
    RBRACE          reduce using rule 18 (input -> INPUT .)
    COLON           reduce using rule 18 (input -> INPUT .)
    QUESTION        reduce using rule 18 (input -> INPUT .)
    RBRACKET        reduce using rule 18 (input -> INPUT .)
    COMMA           reduce using rule 18 (input -> INPUT .)
    RPAREN          reduce using rule 18 (input -> INPUT .)


state 80

    (71) expralg -> invrelpath .

    COLON           reduce using rule 71 (expralg -> invrelpath .)
    LBRACKET        reduce using rule 71 (expralg -> invrelpath .)
    DIVIDER         reduce using rule 71 (expralg -> invrelpath .)
    $end            reduce using rule 71 (expralg -> invrelpath .)
    RBRACE          reduce using rule 71 (expralg -> invrelpath .)
    DPROD           reduce using rule 71 (expralg -> invrelpath .)
    DIVMUL          reduce using rule 71 (expralg -> invrelpath .)
    PLUSMINUS       reduce using rule 71 (expralg -> invrelpath .)
    QUESTION        reduce using rule 71 (expralg -> invrelpath .)
    RBRACKET        reduce using rule 71 (expralg -> invrelpath .)
    COMMA           reduce using rule 71 (expralg -> invrelpath .)
    RPAREN          reduce using rule 71 (expralg -> invrelpath .)


state 81

    (92) repeat -> REPEAT .

    LBRACKET        reduce using rule 92 (repeat -> REPEAT .)
    DIVIDER         reduce using rule 92 (repeat -> REPEAT .)
    $end            reduce using rule 92 (repeat -> REPEAT .)
    RBRACE          reduce using rule 92 (repeat -> REPEAT .)
    COLON           reduce using rule 92 (repeat -> REPEAT .)
    QUESTION        reduce using rule 92 (repeat -> REPEAT .)
    RBRACKET        reduce using rule 92 (repeat -> REPEAT .)
    COMMA           reduce using rule 92 (repeat -> REPEAT .)
    RPAREN          reduce using rule 92 (repeat -> REPEAT .)


state 82

    (53) expr -> break .

    LBRACKET        reduce using rule 53 (expr -> break .)
    COMMA           reduce using rule 53 (expr -> break .)
    RPAREN          reduce using rule 53 (expr -> break .)
    COLON           reduce using rule 53 (expr -> break .)
    RBRACE          reduce using rule 53 (expr -> break .)
    DIVIDER         reduce using rule 53 (expr -> break .)
    RBRACKET        reduce using rule 53 (expr -> break .)
    $end            reduce using rule 53 (expr -> break .)
    QUESTION        reduce using rule 53 (expr -> break .)


state 83

    (84) execfile -> EXECFILE . expr
    (45) expr -> . expralg
    (46) expr -> . parttree
    (47) expr -> . alg0
    (48) expr -> . print
    (49) expr -> . varvar
    (50) expr -> . variables
    (51) expr -> . python
    (52) expr -> . execfile
    (53) expr -> . break
    (54) expr -> . curfile
    (55) expr -> . exectext
    (56) expr -> . equal
    (57) expr -> . dequal
    (58) expr -> . element
    (59) expr -> . mlist
    (60) expr -> . evaluate
    (61) expr -> . yield
    (62) expr -> . repeat
    (63) expr -> . pass
    (64) expr -> . dict
    (65) expr -> . return
    (66) expr -> . modules
    (67) expr -> . exfiles
    (68) expr -> . input
    (69) expralg -> . term
    (70) expralg -> . abspath
    (71) expralg -> . invrelpath
    (72) expralg -> . relpath
    (73) expralg -> . relpathbase
    (74) expralg -> . func
    (75) expralg -> . block
    (76) expralg -> . list
    (37) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (83) python -> . PYTHON str
    (84) execfile -> . EXECFILE expr
    (36) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (42) equal -> . WORD EQUALS expr
    (43) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON block
    (85) evaluate -> . EVALUATE expr
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (77) return -> . RETURN expr
    (19) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (18) input -> . INPUT
    (78) term -> . str
    (79) term -> . float
    (80) term -> . int
    (81) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (21) func -> . WORD LPAREN args RPAREN block
    (22) func -> . WORD LPAREN args RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (34) list -> . LBRACKET comms RBRACKET
    (35) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (94) var -> . WORD
    (91) str -> . STRING
    (89) float -> . FLOAT
    (82) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    AMPERSAND       shift and go to state 62
    PLUSMINUS       shift and go to state 68
    PRINT           shift and go to state 53
    VARIABLES       shift and go to state 65
    PYTHON          shift and go to state 59
    EXECFILE        shift and go to state 83
    BREAK           shift and go to state 90
    CURFILE         shift and go to state 3
    EXECTEXT        shift and go to state 78
    WORD            shift and go to state 97
    MLIST           shift and go to state 64
    EVALUATE        shift and go to state 50
    YIELD           shift and go to state 45
    REPEAT          shift and go to state 81
    PASS            shift and go to state 42
    LBRACE          shift and go to state 43
    RETURN          shift and go to state 28
    MODULES         shift and go to state 47
    EXFILES         shift and go to state 74
    INPUT           shift and go to state 79
    ABSPATH         shift and go to state 20
    INVRELPATH      shift and go to state 49
    RELPATH         shift and go to state 36
    RELPATHBASE     shift and go to state 52
    LBRACKET        shift and go to state 27
    STRING          shift and go to state 73
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 39

    python                         shift and go to state 48
    var                            shift and go to state 95
    pass                           shift and go to state 4
    exfiles                        shift and go to state 7
    dequal                         shift and go to state 6
    alg0                           shift and go to state 38
    varvar                         shift and go to state 8
    alg1                           shift and go to state 9
    yield                          shift and go to state 12
    block                          shift and go to state 57
    term                           shift and go to state 14
    dict                           shift and go to state 15
    expr                           shift and go to state 132
    curfile                        shift and go to state 17
    input                          shift and go to state 18
    float                          shift and go to state 1
    exectext                       shift and go to state 13
    mlist                          shift and go to state 61
    return                         shift and go to state 26
    evaluate                       shift and go to state 23
    modules                        shift and go to state 67
    print                          shift and go to state 24
    relpathbase                    shift and go to state 58
    func                           shift and go to state 70
    alg3                           shift and go to state 66
    str                            shift and go to state 75
    repeat                         shift and go to state 30
    alg2                           shift and go to state 77
    list                           shift and go to state 33
    invrelpath                     shift and go to state 80
    abspath                        shift and go to state 55
    break                          shift and go to state 82
    execfile                       shift and go to state 85
    element                        shift and go to state 86
    expralg                        shift and go to state 40
    int                            shift and go to state 41
    relpath                        shift and go to state 88
    variables                      shift and go to state 44
    parttree                       shift and go to state 89
    equal                          shift and go to state 46

state 84

    (2) inblock -> metaexpr .

    RBRACE          reduce using rule 2 (inblock -> metaexpr .)
    DIVIDER         reduce using rule 2 (inblock -> metaexpr .)
    $end            reduce using rule 2 (inblock -> metaexpr .)


state 85

    (52) expr -> execfile .

    LBRACKET        reduce using rule 52 (expr -> execfile .)
    COMMA           reduce using rule 52 (expr -> execfile .)
    RPAREN          reduce using rule 52 (expr -> execfile .)
    COLON           reduce using rule 52 (expr -> execfile .)
    RBRACE          reduce using rule 52 (expr -> execfile .)
    DIVIDER         reduce using rule 52 (expr -> execfile .)
    RBRACKET        reduce using rule 52 (expr -> execfile .)
    $end            reduce using rule 52 (expr -> execfile .)
    QUESTION        reduce using rule 52 (expr -> execfile .)


state 86

    (58) expr -> element .
    (43) dequal -> element . EQUALS expr

    LBRACKET        reduce using rule 58 (expr -> element .)
    COMMA           reduce using rule 58 (expr -> element .)
    RPAREN          reduce using rule 58 (expr -> element .)
    COLON           reduce using rule 58 (expr -> element .)
    RBRACE          reduce using rule 58 (expr -> element .)
    DIVIDER         reduce using rule 58 (expr -> element .)
    RBRACKET        reduce using rule 58 (expr -> element .)
    $end            reduce using rule 58 (expr -> element .)
    QUESTION        reduce using rule 58 (expr -> element .)
    EQUALS          shift and go to state 133


state 87

    (4) inblock -> divider . inblock
    (2) inblock -> . metaexpr
    (3) inblock -> . inblock divider metaexpr
    (4) inblock -> . divider inblock
    (5) inblock -> . inblock divider
    (23) metaexpr -> . expr
    (24) metaexpr -> . deffunc
    (25) metaexpr -> . module
    (26) metaexpr -> . application
    (27) metaexpr -> . declare
    (28) metaexpr -> . append
    (29) metaexpr -> . define
    (30) metaexpr -> . execscan
    (31) metaexpr -> . compile
    (32) metaexpr -> . downlevel
    (33) metaexpr -> . if
    (17) divider -> . DIVIDER
    (45) expr -> . expralg
    (46) expr -> . parttree
    (47) expr -> . alg0
    (48) expr -> . print
    (49) expr -> . varvar
    (50) expr -> . variables
    (51) expr -> . python
    (52) expr -> . execfile
    (53) expr -> . break
    (54) expr -> . curfile
    (55) expr -> . exectext
    (56) expr -> . equal
    (57) expr -> . dequal
    (58) expr -> . element
    (59) expr -> . mlist
    (60) expr -> . evaluate
    (61) expr -> . yield
    (62) expr -> . repeat
    (63) expr -> . pass
    (64) expr -> . dict
    (65) expr -> . return
    (66) expr -> . modules
    (67) expr -> . exfiles
    (68) expr -> . input
    (8) deffunc -> . DEFFUNC WORD LPAREN args RPAREN block
    (7) module -> . MODULE WORD block
    (44) application -> . APPLICATION WORD block
    (15) declare -> . expr COLON expr
    (20) append -> . var APPEND expr
    (9) define -> . DEFINE WORD expr
    (10) define -> . WORD DEFOP expr
    (86) execscan -> . EXECSCAN expr
    (103) compile -> . COMPILE
    (88) downlevel -> . DOWNLEVEL expr
    (16) if -> . IF expr QUESTION expr COLON expr
    (69) expralg -> . term
    (70) expralg -> . abspath
    (71) expralg -> . invrelpath
    (72) expralg -> . relpath
    (73) expralg -> . relpathbase
    (74) expralg -> . func
    (75) expralg -> . block
    (76) expralg -> . list
    (37) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (83) python -> . PYTHON str
    (84) execfile -> . EXECFILE expr
    (36) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (42) equal -> . WORD EQUALS expr
    (43) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON block
    (85) evaluate -> . EVALUATE expr
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (77) return -> . RETURN expr
    (19) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (18) input -> . INPUT
    (94) var -> . WORD
    (78) term -> . str
    (79) term -> . float
    (80) term -> . int
    (81) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (21) func -> . WORD LPAREN args RPAREN block
    (22) func -> . WORD LPAREN args RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (34) list -> . LBRACKET comms RBRACKET
    (35) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (91) str -> . STRING
    (89) float -> . FLOAT
    (82) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    DIVIDER         shift and go to state 54
    DEFFUNC         shift and go to state 37
    MODULE          shift and go to state 5
    APPLICATION     shift and go to state 29
    DEFINE          shift and go to state 22
    WORD            shift and go to state 19
    EXECSCAN        shift and go to state 72
    COMPILE         shift and go to state 63
    DOWNLEVEL       shift and go to state 25
    IF              shift and go to state 11
    AMPERSAND       shift and go to state 62
    PLUSMINUS       shift and go to state 68
    PRINT           shift and go to state 53
    VARIABLES       shift and go to state 65
    PYTHON          shift and go to state 59
    EXECFILE        shift and go to state 83
    BREAK           shift and go to state 90
    CURFILE         shift and go to state 3
    EXECTEXT        shift and go to state 78
    MLIST           shift and go to state 64
    EVALUATE        shift and go to state 50
    YIELD           shift and go to state 45
    REPEAT          shift and go to state 81
    PASS            shift and go to state 42
    LBRACE          shift and go to state 43
    RETURN          shift and go to state 28
    MODULES         shift and go to state 47
    EXFILES         shift and go to state 74
    INPUT           shift and go to state 79
    ABSPATH         shift and go to state 20
    INVRELPATH      shift and go to state 49
    RELPATH         shift and go to state 36
    RELPATHBASE     shift and go to state 52
    LBRACKET        shift and go to state 27
    STRING          shift and go to state 73
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 39

    python                         shift and go to state 48
    var                            shift and go to state 2
    pass                           shift and go to state 4
    dequal                         shift and go to state 6
    deffunc                        shift and go to state 51
    metaexpr                       shift and go to state 84
    exfiles                        shift and go to state 7
    varvar                         shift and go to state 8
    alg1                           shift and go to state 9
    yield                          shift and go to state 12
    if                             shift and go to state 56
    exectext                       shift and go to state 13
    term                           shift and go to state 14
    dict                           shift and go to state 15
    expr                           shift and go to state 16
    curfile                        shift and go to state 17
    input                          shift and go to state 18
    float                          shift and go to state 1
    block                          shift and go to state 57
    expralg                        shift and go to state 40
    module                         shift and go to state 60
    mlist                          shift and go to state 61
    return                         shift and go to state 26
    declare                        shift and go to state 21
    evaluate                       shift and go to state 23
    modules                        shift and go to state 67
    print                          shift and go to state 24
    relpathbase                    shift and go to state 58
    append                         shift and go to state 69
    func                           shift and go to state 70
    execscan                       shift and go to state 71
    alg3                           shift and go to state 66
    str                            shift and go to state 75
    application                    shift and go to state 76
    define                         shift and go to state 10
    repeat                         shift and go to state 30
    alg2                           shift and go to state 77
    compile                        shift and go to state 31
    list                           shift and go to state 33
    invrelpath                     shift and go to state 80
    abspath                        shift and go to state 55
    break                          shift and go to state 82
    inblock                        shift and go to state 134
    downlevel                      shift and go to state 34
    alg0                           shift and go to state 38
    execfile                       shift and go to state 85
    element                        shift and go to state 86
    divider                        shift and go to state 87
    parttree                       shift and go to state 89
    int                            shift and go to state 41
    relpath                        shift and go to state 88
    variables                      shift and go to state 44
    equal                          shift and go to state 46

state 88

    (72) expralg -> relpath .

    COLON           reduce using rule 72 (expralg -> relpath .)
    LBRACKET        reduce using rule 72 (expralg -> relpath .)
    DIVIDER         reduce using rule 72 (expralg -> relpath .)
    $end            reduce using rule 72 (expralg -> relpath .)
    RBRACE          reduce using rule 72 (expralg -> relpath .)
    DPROD           reduce using rule 72 (expralg -> relpath .)
    DIVMUL          reduce using rule 72 (expralg -> relpath .)
    PLUSMINUS       reduce using rule 72 (expralg -> relpath .)
    QUESTION        reduce using rule 72 (expralg -> relpath .)
    RBRACKET        reduce using rule 72 (expralg -> relpath .)
    COMMA           reduce using rule 72 (expralg -> relpath .)
    RPAREN          reduce using rule 72 (expralg -> relpath .)


state 89

    (46) expr -> parttree .

    LBRACKET        reduce using rule 46 (expr -> parttree .)
    COMMA           reduce using rule 46 (expr -> parttree .)
    RPAREN          reduce using rule 46 (expr -> parttree .)
    COLON           reduce using rule 46 (expr -> parttree .)
    RBRACE          reduce using rule 46 (expr -> parttree .)
    DIVIDER         reduce using rule 46 (expr -> parttree .)
    RBRACKET        reduce using rule 46 (expr -> parttree .)
    $end            reduce using rule 46 (expr -> parttree .)
    QUESTION        reduce using rule 46 (expr -> parttree .)


state 90

    (36) break -> BREAK .

    LBRACKET        reduce using rule 36 (break -> BREAK .)
    DIVIDER         reduce using rule 36 (break -> BREAK .)
    $end            reduce using rule 36 (break -> BREAK .)
    RBRACE          reduce using rule 36 (break -> BREAK .)
    COLON           reduce using rule 36 (break -> BREAK .)
    QUESTION        reduce using rule 36 (break -> BREAK .)
    RBRACKET        reduce using rule 36 (break -> BREAK .)
    COMMA           reduce using rule 36 (break -> BREAK .)
    RPAREN          reduce using rule 36 (break -> BREAK .)


state 91

    (20) append -> var APPEND . expr
    (45) expr -> . expralg
    (46) expr -> . parttree
    (47) expr -> . alg0
    (48) expr -> . print
    (49) expr -> . varvar
    (50) expr -> . variables
    (51) expr -> . python
    (52) expr -> . execfile
    (53) expr -> . break
    (54) expr -> . curfile
    (55) expr -> . exectext
    (56) expr -> . equal
    (57) expr -> . dequal
    (58) expr -> . element
    (59) expr -> . mlist
    (60) expr -> . evaluate
    (61) expr -> . yield
    (62) expr -> . repeat
    (63) expr -> . pass
    (64) expr -> . dict
    (65) expr -> . return
    (66) expr -> . modules
    (67) expr -> . exfiles
    (68) expr -> . input
    (69) expralg -> . term
    (70) expralg -> . abspath
    (71) expralg -> . invrelpath
    (72) expralg -> . relpath
    (73) expralg -> . relpathbase
    (74) expralg -> . func
    (75) expralg -> . block
    (76) expralg -> . list
    (37) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (83) python -> . PYTHON str
    (84) execfile -> . EXECFILE expr
    (36) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (42) equal -> . WORD EQUALS expr
    (43) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON block
    (85) evaluate -> . EVALUATE expr
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (77) return -> . RETURN expr
    (19) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (18) input -> . INPUT
    (78) term -> . str
    (79) term -> . float
    (80) term -> . int
    (81) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (21) func -> . WORD LPAREN args RPAREN block
    (22) func -> . WORD LPAREN args RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (34) list -> . LBRACKET comms RBRACKET
    (35) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (94) var -> . WORD
    (91) str -> . STRING
    (89) float -> . FLOAT
    (82) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    AMPERSAND       shift and go to state 62
    PLUSMINUS       shift and go to state 68
    PRINT           shift and go to state 53
    VARIABLES       shift and go to state 65
    PYTHON          shift and go to state 59
    EXECFILE        shift and go to state 83
    BREAK           shift and go to state 90
    CURFILE         shift and go to state 3
    EXECTEXT        shift and go to state 78
    WORD            shift and go to state 97
    MLIST           shift and go to state 64
    EVALUATE        shift and go to state 50
    YIELD           shift and go to state 45
    REPEAT          shift and go to state 81
    PASS            shift and go to state 42
    LBRACE          shift and go to state 43
    RETURN          shift and go to state 28
    MODULES         shift and go to state 47
    EXFILES         shift and go to state 74
    INPUT           shift and go to state 79
    ABSPATH         shift and go to state 20
    INVRELPATH      shift and go to state 49
    RELPATH         shift and go to state 36
    RELPATHBASE     shift and go to state 52
    LBRACKET        shift and go to state 27
    STRING          shift and go to state 73
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 39

    python                         shift and go to state 48
    var                            shift and go to state 95
    pass                           shift and go to state 4
    exfiles                        shift and go to state 7
    dequal                         shift and go to state 6
    alg0                           shift and go to state 38
    varvar                         shift and go to state 8
    alg1                           shift and go to state 9
    yield                          shift and go to state 12
    block                          shift and go to state 57
    term                           shift and go to state 14
    dict                           shift and go to state 15
    expr                           shift and go to state 135
    curfile                        shift and go to state 17
    input                          shift and go to state 18
    float                          shift and go to state 1
    exectext                       shift and go to state 13
    mlist                          shift and go to state 61
    return                         shift and go to state 26
    evaluate                       shift and go to state 23
    modules                        shift and go to state 67
    print                          shift and go to state 24
    relpathbase                    shift and go to state 58
    func                           shift and go to state 70
    alg3                           shift and go to state 66
    str                            shift and go to state 75
    repeat                         shift and go to state 30
    alg2                           shift and go to state 77
    list                           shift and go to state 33
    invrelpath                     shift and go to state 80
    abspath                        shift and go to state 55
    break                          shift and go to state 82
    execfile                       shift and go to state 85
    element                        shift and go to state 86
    expralg                        shift and go to state 40
    int                            shift and go to state 41
    relpath                        shift and go to state 88
    variables                      shift and go to state 44
    parttree                       shift and go to state 89
    equal                          shift and go to state 46

state 92

    (7) module -> MODULE WORD . block
    (1) block -> . LBRACE inblock RBRACE

    LBRACE          shift and go to state 128

    block                          shift and go to state 136

state 93

    (98) varvar -> varvar POINT . var
    (94) var -> . WORD

    WORD            shift and go to state 137

    var                            shift and go to state 138

state 94

    (111) alg1 -> alg1 DIVMUL . alg2
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg
    (69) expralg -> . term
    (70) expralg -> . abspath
    (71) expralg -> . invrelpath
    (72) expralg -> . relpath
    (73) expralg -> . relpathbase
    (74) expralg -> . func
    (75) expralg -> . block
    (76) expralg -> . list
    (78) term -> . str
    (79) term -> . float
    (80) term -> . int
    (81) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (21) func -> . WORD LPAREN args RPAREN block
    (22) func -> . WORD LPAREN args RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (34) list -> . LBRACKET comms RBRACKET
    (35) list -> . LBRACKET RBRACKET
    (91) str -> . STRING
    (89) float -> . FLOAT
    (82) int -> . NUMBER
    (94) var -> . WORD

    ABSPATH         shift and go to state 20
    INVRELPATH      shift and go to state 49
    RELPATH         shift and go to state 36
    RELPATHBASE     shift and go to state 52
    WORD            shift and go to state 126
    LBRACE          shift and go to state 128
    LBRACKET        shift and go to state 27
    STRING          shift and go to state 73
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 39

    term                           shift and go to state 14
    relpathbase                    shift and go to state 58
    invrelpath                     shift and go to state 80
    func                           shift and go to state 70
    abspath                        shift and go to state 55
    alg3                           shift and go to state 66
    float                          shift and go to state 1
    list                           shift and go to state 33
    expralg                        shift and go to state 127
    int                            shift and go to state 41
    str                            shift and go to state 75
    var                            shift and go to state 124
    alg2                           shift and go to state 139
    block                          shift and go to state 57
    relpath                        shift and go to state 88

state 95

    (97) varvar -> var .
    (81) term -> var .

  ! reduce/reduce conflict for LBRACKET resolved using rule 81 (term -> var .)
  ! reduce/reduce conflict for DIVIDER resolved using rule 81 (term -> var .)
  ! reduce/reduce conflict for $end resolved using rule 81 (term -> var .)
  ! reduce/reduce conflict for RBRACE resolved using rule 81 (term -> var .)
  ! reduce/reduce conflict for COLON resolved using rule 81 (term -> var .)
  ! reduce/reduce conflict for QUESTION resolved using rule 81 (term -> var .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 81 (term -> var .)
  ! reduce/reduce conflict for COMMA resolved using rule 81 (term -> var .)
  ! reduce/reduce conflict for RPAREN resolved using rule 81 (term -> var .)
    POINT           reduce using rule 97 (varvar -> var .)
    LBRACKET        reduce using rule 81 (term -> var .)
    DIVIDER         reduce using rule 81 (term -> var .)
    $end            reduce using rule 81 (term -> var .)
    RBRACE          reduce using rule 81 (term -> var .)
    COLON           reduce using rule 81 (term -> var .)
    QUESTION        reduce using rule 81 (term -> var .)
    RBRACKET        reduce using rule 81 (term -> var .)
    COMMA           reduce using rule 81 (term -> var .)
    RPAREN          reduce using rule 81 (term -> var .)
    DPROD           reduce using rule 81 (term -> var .)
    DIVMUL          reduce using rule 81 (term -> var .)
    PLUSMINUS       reduce using rule 81 (term -> var .)

  ! LBRACKET        [ reduce using rule 97 (varvar -> var .) ]
  ! DIVIDER         [ reduce using rule 97 (varvar -> var .) ]
  ! $end            [ reduce using rule 97 (varvar -> var .) ]
  ! RBRACE          [ reduce using rule 97 (varvar -> var .) ]
  ! COLON           [ reduce using rule 97 (varvar -> var .) ]
  ! QUESTION        [ reduce using rule 97 (varvar -> var .) ]
  ! RBRACKET        [ reduce using rule 97 (varvar -> var .) ]
  ! COMMA           [ reduce using rule 97 (varvar -> var .) ]
  ! RPAREN          [ reduce using rule 97 (varvar -> var .) ]


state 96

    (16) if -> IF expr . QUESTION expr COLON expr
    (93) element -> expr . LBRACKET expr RBRACKET

    QUESTION        shift and go to state 140
    LBRACKET        shift and go to state 99


state 97

    (42) equal -> WORD . EQUALS expr
    (21) func -> WORD . LPAREN args RPAREN block
    (22) func -> WORD . LPAREN args RPAREN
    (94) var -> WORD .

    EQUALS          shift and go to state 102
    LPAREN          shift and go to state 100
    POINT           reduce using rule 94 (var -> WORD .)
    LBRACKET        reduce using rule 94 (var -> WORD .)
    RBRACKET        reduce using rule 94 (var -> WORD .)
    COMMA           reduce using rule 94 (var -> WORD .)
    DPROD           reduce using rule 94 (var -> WORD .)
    DIVMUL          reduce using rule 94 (var -> WORD .)
    PLUSMINUS       reduce using rule 94 (var -> WORD .)
    DIVIDER         reduce using rule 94 (var -> WORD .)
    $end            reduce using rule 94 (var -> WORD .)
    RBRACE          reduce using rule 94 (var -> WORD .)
    COLON           reduce using rule 94 (var -> WORD .)
    QUESTION        reduce using rule 94 (var -> WORD .)
    RPAREN          reduce using rule 94 (var -> WORD .)


state 98

    (15) declare -> expr COLON . expr
    (45) expr -> . expralg
    (46) expr -> . parttree
    (47) expr -> . alg0
    (48) expr -> . print
    (49) expr -> . varvar
    (50) expr -> . variables
    (51) expr -> . python
    (52) expr -> . execfile
    (53) expr -> . break
    (54) expr -> . curfile
    (55) expr -> . exectext
    (56) expr -> . equal
    (57) expr -> . dequal
    (58) expr -> . element
    (59) expr -> . mlist
    (60) expr -> . evaluate
    (61) expr -> . yield
    (62) expr -> . repeat
    (63) expr -> . pass
    (64) expr -> . dict
    (65) expr -> . return
    (66) expr -> . modules
    (67) expr -> . exfiles
    (68) expr -> . input
    (69) expralg -> . term
    (70) expralg -> . abspath
    (71) expralg -> . invrelpath
    (72) expralg -> . relpath
    (73) expralg -> . relpathbase
    (74) expralg -> . func
    (75) expralg -> . block
    (76) expralg -> . list
    (37) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (83) python -> . PYTHON str
    (84) execfile -> . EXECFILE expr
    (36) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (42) equal -> . WORD EQUALS expr
    (43) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON block
    (85) evaluate -> . EVALUATE expr
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (77) return -> . RETURN expr
    (19) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (18) input -> . INPUT
    (78) term -> . str
    (79) term -> . float
    (80) term -> . int
    (81) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (21) func -> . WORD LPAREN args RPAREN block
    (22) func -> . WORD LPAREN args RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (34) list -> . LBRACKET comms RBRACKET
    (35) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (94) var -> . WORD
    (91) str -> . STRING
    (89) float -> . FLOAT
    (82) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    AMPERSAND       shift and go to state 62
    PLUSMINUS       shift and go to state 68
    PRINT           shift and go to state 53
    VARIABLES       shift and go to state 65
    PYTHON          shift and go to state 59
    EXECFILE        shift and go to state 83
    BREAK           shift and go to state 90
    CURFILE         shift and go to state 3
    EXECTEXT        shift and go to state 78
    WORD            shift and go to state 97
    MLIST           shift and go to state 64
    EVALUATE        shift and go to state 50
    YIELD           shift and go to state 45
    REPEAT          shift and go to state 81
    PASS            shift and go to state 42
    LBRACE          shift and go to state 43
    RETURN          shift and go to state 28
    MODULES         shift and go to state 47
    EXFILES         shift and go to state 74
    INPUT           shift and go to state 79
    ABSPATH         shift and go to state 20
    INVRELPATH      shift and go to state 49
    RELPATH         shift and go to state 36
    RELPATHBASE     shift and go to state 52
    LBRACKET        shift and go to state 27
    STRING          shift and go to state 73
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 39

    python                         shift and go to state 48
    var                            shift and go to state 95
    pass                           shift and go to state 4
    exfiles                        shift and go to state 7
    dequal                         shift and go to state 6
    alg0                           shift and go to state 38
    varvar                         shift and go to state 8
    alg1                           shift and go to state 9
    yield                          shift and go to state 12
    block                          shift and go to state 57
    term                           shift and go to state 14
    dict                           shift and go to state 15
    expr                           shift and go to state 141
    curfile                        shift and go to state 17
    input                          shift and go to state 18
    float                          shift and go to state 1
    exectext                       shift and go to state 13
    mlist                          shift and go to state 61
    return                         shift and go to state 26
    evaluate                       shift and go to state 23
    modules                        shift and go to state 67
    print                          shift and go to state 24
    relpathbase                    shift and go to state 58
    func                           shift and go to state 70
    alg3                           shift and go to state 66
    str                            shift and go to state 75
    repeat                         shift and go to state 30
    alg2                           shift and go to state 77
    list                           shift and go to state 33
    invrelpath                     shift and go to state 80
    abspath                        shift and go to state 55
    break                          shift and go to state 82
    execfile                       shift and go to state 85
    element                        shift and go to state 86
    expralg                        shift and go to state 40
    int                            shift and go to state 41
    relpath                        shift and go to state 88
    variables                      shift and go to state 44
    parttree                       shift and go to state 89
    equal                          shift and go to state 46

state 99

    (93) element -> expr LBRACKET . expr RBRACKET
    (45) expr -> . expralg
    (46) expr -> . parttree
    (47) expr -> . alg0
    (48) expr -> . print
    (49) expr -> . varvar
    (50) expr -> . variables
    (51) expr -> . python
    (52) expr -> . execfile
    (53) expr -> . break
    (54) expr -> . curfile
    (55) expr -> . exectext
    (56) expr -> . equal
    (57) expr -> . dequal
    (58) expr -> . element
    (59) expr -> . mlist
    (60) expr -> . evaluate
    (61) expr -> . yield
    (62) expr -> . repeat
    (63) expr -> . pass
    (64) expr -> . dict
    (65) expr -> . return
    (66) expr -> . modules
    (67) expr -> . exfiles
    (68) expr -> . input
    (69) expralg -> . term
    (70) expralg -> . abspath
    (71) expralg -> . invrelpath
    (72) expralg -> . relpath
    (73) expralg -> . relpathbase
    (74) expralg -> . func
    (75) expralg -> . block
    (76) expralg -> . list
    (37) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (83) python -> . PYTHON str
    (84) execfile -> . EXECFILE expr
    (36) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (42) equal -> . WORD EQUALS expr
    (43) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON block
    (85) evaluate -> . EVALUATE expr
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (77) return -> . RETURN expr
    (19) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (18) input -> . INPUT
    (78) term -> . str
    (79) term -> . float
    (80) term -> . int
    (81) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (21) func -> . WORD LPAREN args RPAREN block
    (22) func -> . WORD LPAREN args RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (34) list -> . LBRACKET comms RBRACKET
    (35) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (94) var -> . WORD
    (91) str -> . STRING
    (89) float -> . FLOAT
    (82) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    AMPERSAND       shift and go to state 62
    PLUSMINUS       shift and go to state 68
    PRINT           shift and go to state 53
    VARIABLES       shift and go to state 65
    PYTHON          shift and go to state 59
    EXECFILE        shift and go to state 83
    BREAK           shift and go to state 90
    CURFILE         shift and go to state 3
    EXECTEXT        shift and go to state 78
    WORD            shift and go to state 97
    MLIST           shift and go to state 64
    EVALUATE        shift and go to state 50
    YIELD           shift and go to state 45
    REPEAT          shift and go to state 81
    PASS            shift and go to state 42
    LBRACE          shift and go to state 43
    RETURN          shift and go to state 28
    MODULES         shift and go to state 47
    EXFILES         shift and go to state 74
    INPUT           shift and go to state 79
    ABSPATH         shift and go to state 20
    INVRELPATH      shift and go to state 49
    RELPATH         shift and go to state 36
    RELPATHBASE     shift and go to state 52
    LBRACKET        shift and go to state 27
    STRING          shift and go to state 73
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 39

    python                         shift and go to state 48
    var                            shift and go to state 95
    pass                           shift and go to state 4
    exfiles                        shift and go to state 7
    dequal                         shift and go to state 6
    alg0                           shift and go to state 38
    varvar                         shift and go to state 8
    alg1                           shift and go to state 9
    yield                          shift and go to state 12
    block                          shift and go to state 57
    term                           shift and go to state 14
    dict                           shift and go to state 15
    expr                           shift and go to state 142
    curfile                        shift and go to state 17
    input                          shift and go to state 18
    float                          shift and go to state 1
    exectext                       shift and go to state 13
    mlist                          shift and go to state 61
    return                         shift and go to state 26
    evaluate                       shift and go to state 23
    modules                        shift and go to state 67
    print                          shift and go to state 24
    relpathbase                    shift and go to state 58
    func                           shift and go to state 70
    alg3                           shift and go to state 66
    str                            shift and go to state 75
    repeat                         shift and go to state 30
    alg2                           shift and go to state 77
    list                           shift and go to state 33
    invrelpath                     shift and go to state 80
    abspath                        shift and go to state 55
    break                          shift and go to state 82
    execfile                       shift and go to state 85
    element                        shift and go to state 86
    expralg                        shift and go to state 40
    int                            shift and go to state 41
    relpath                        shift and go to state 88
    variables                      shift and go to state 44
    parttree                       shift and go to state 89
    equal                          shift and go to state 46

state 100

    (21) func -> WORD LPAREN . args RPAREN block
    (22) func -> WORD LPAREN . args RPAREN
    (38) args -> .
    (39) args -> . comms
    (40) comms -> . expr
    (41) comms -> . comms COMMA expr
    (45) expr -> . expralg
    (46) expr -> . parttree
    (47) expr -> . alg0
    (48) expr -> . print
    (49) expr -> . varvar
    (50) expr -> . variables
    (51) expr -> . python
    (52) expr -> . execfile
    (53) expr -> . break
    (54) expr -> . curfile
    (55) expr -> . exectext
    (56) expr -> . equal
    (57) expr -> . dequal
    (58) expr -> . element
    (59) expr -> . mlist
    (60) expr -> . evaluate
    (61) expr -> . yield
    (62) expr -> . repeat
    (63) expr -> . pass
    (64) expr -> . dict
    (65) expr -> . return
    (66) expr -> . modules
    (67) expr -> . exfiles
    (68) expr -> . input
    (69) expralg -> . term
    (70) expralg -> . abspath
    (71) expralg -> . invrelpath
    (72) expralg -> . relpath
    (73) expralg -> . relpathbase
    (74) expralg -> . func
    (75) expralg -> . block
    (76) expralg -> . list
    (37) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (83) python -> . PYTHON str
    (84) execfile -> . EXECFILE expr
    (36) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (42) equal -> . WORD EQUALS expr
    (43) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON block
    (85) evaluate -> . EVALUATE expr
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (77) return -> . RETURN expr
    (19) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (18) input -> . INPUT
    (78) term -> . str
    (79) term -> . float
    (80) term -> . int
    (81) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (21) func -> . WORD LPAREN args RPAREN block
    (22) func -> . WORD LPAREN args RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (34) list -> . LBRACKET comms RBRACKET
    (35) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (94) var -> . WORD
    (91) str -> . STRING
    (89) float -> . FLOAT
    (82) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    RPAREN          reduce using rule 38 (args -> .)
    AMPERSAND       shift and go to state 62
    PLUSMINUS       shift and go to state 68
    PRINT           shift and go to state 53
    VARIABLES       shift and go to state 65
    PYTHON          shift and go to state 59
    EXECFILE        shift and go to state 83
    BREAK           shift and go to state 90
    CURFILE         shift and go to state 3
    EXECTEXT        shift and go to state 78
    WORD            shift and go to state 97
    MLIST           shift and go to state 64
    EVALUATE        shift and go to state 50
    YIELD           shift and go to state 45
    REPEAT          shift and go to state 81
    PASS            shift and go to state 42
    LBRACE          shift and go to state 43
    RETURN          shift and go to state 28
    MODULES         shift and go to state 47
    EXFILES         shift and go to state 74
    INPUT           shift and go to state 79
    ABSPATH         shift and go to state 20
    INVRELPATH      shift and go to state 49
    RELPATH         shift and go to state 36
    RELPATHBASE     shift and go to state 52
    LBRACKET        shift and go to state 27
    STRING          shift and go to state 73
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 39

    python                         shift and go to state 48
    var                            shift and go to state 95
    comms                          shift and go to state 143
    pass                           shift and go to state 4
    exfiles                        shift and go to state 7
    dequal                         shift and go to state 6
    alg0                           shift and go to state 38
    parttree                       shift and go to state 89
    alg1                           shift and go to state 9
    yield                          shift and go to state 12
    args                           shift and go to state 144
    exectext                       shift and go to state 13
    term                           shift and go to state 14
    dict                           shift and go to state 15
    expr                           shift and go to state 107
    curfile                        shift and go to state 17
    input                          shift and go to state 18
    float                          shift and go to state 1
    block                          shift and go to state 57
    mlist                          shift and go to state 61
    return                         shift and go to state 26
    evaluate                       shift and go to state 23
    modules                        shift and go to state 67
    print                          shift and go to state 24
    relpathbase                    shift and go to state 58
    func                           shift and go to state 70
    varvar                         shift and go to state 8
    alg3                           shift and go to state 66
    str                            shift and go to state 75
    repeat                         shift and go to state 30
    alg2                           shift and go to state 77
    list                           shift and go to state 33
    invrelpath                     shift and go to state 80
    abspath                        shift and go to state 55
    break                          shift and go to state 82
    execfile                       shift and go to state 85
    element                        shift and go to state 86
    expralg                        shift and go to state 40
    int                            shift and go to state 41
    relpath                        shift and go to state 88
    variables                      shift and go to state 44
    equal                          shift and go to state 46

state 101

    (10) define -> WORD DEFOP . expr
    (45) expr -> . expralg
    (46) expr -> . parttree
    (47) expr -> . alg0
    (48) expr -> . print
    (49) expr -> . varvar
    (50) expr -> . variables
    (51) expr -> . python
    (52) expr -> . execfile
    (53) expr -> . break
    (54) expr -> . curfile
    (55) expr -> . exectext
    (56) expr -> . equal
    (57) expr -> . dequal
    (58) expr -> . element
    (59) expr -> . mlist
    (60) expr -> . evaluate
    (61) expr -> . yield
    (62) expr -> . repeat
    (63) expr -> . pass
    (64) expr -> . dict
    (65) expr -> . return
    (66) expr -> . modules
    (67) expr -> . exfiles
    (68) expr -> . input
    (69) expralg -> . term
    (70) expralg -> . abspath
    (71) expralg -> . invrelpath
    (72) expralg -> . relpath
    (73) expralg -> . relpathbase
    (74) expralg -> . func
    (75) expralg -> . block
    (76) expralg -> . list
    (37) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (83) python -> . PYTHON str
    (84) execfile -> . EXECFILE expr
    (36) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (42) equal -> . WORD EQUALS expr
    (43) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON block
    (85) evaluate -> . EVALUATE expr
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (77) return -> . RETURN expr
    (19) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (18) input -> . INPUT
    (78) term -> . str
    (79) term -> . float
    (80) term -> . int
    (81) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (21) func -> . WORD LPAREN args RPAREN block
    (22) func -> . WORD LPAREN args RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (34) list -> . LBRACKET comms RBRACKET
    (35) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (94) var -> . WORD
    (91) str -> . STRING
    (89) float -> . FLOAT
    (82) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    AMPERSAND       shift and go to state 62
    PLUSMINUS       shift and go to state 68
    PRINT           shift and go to state 53
    VARIABLES       shift and go to state 65
    PYTHON          shift and go to state 59
    EXECFILE        shift and go to state 83
    BREAK           shift and go to state 90
    CURFILE         shift and go to state 3
    EXECTEXT        shift and go to state 78
    WORD            shift and go to state 97
    MLIST           shift and go to state 64
    EVALUATE        shift and go to state 50
    YIELD           shift and go to state 45
    REPEAT          shift and go to state 81
    PASS            shift and go to state 42
    LBRACE          shift and go to state 43
    RETURN          shift and go to state 28
    MODULES         shift and go to state 47
    EXFILES         shift and go to state 74
    INPUT           shift and go to state 79
    ABSPATH         shift and go to state 20
    INVRELPATH      shift and go to state 49
    RELPATH         shift and go to state 36
    RELPATHBASE     shift and go to state 52
    LBRACKET        shift and go to state 27
    STRING          shift and go to state 73
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 39

    python                         shift and go to state 48
    var                            shift and go to state 95
    pass                           shift and go to state 4
    exfiles                        shift and go to state 7
    dequal                         shift and go to state 6
    alg0                           shift and go to state 38
    varvar                         shift and go to state 8
    alg1                           shift and go to state 9
    yield                          shift and go to state 12
    block                          shift and go to state 57
    term                           shift and go to state 14
    dict                           shift and go to state 15
    expr                           shift and go to state 145
    curfile                        shift and go to state 17
    input                          shift and go to state 18
    float                          shift and go to state 1
    exectext                       shift and go to state 13
    mlist                          shift and go to state 61
    return                         shift and go to state 26
    evaluate                       shift and go to state 23
    modules                        shift and go to state 67
    print                          shift and go to state 24
    relpathbase                    shift and go to state 58
    func                           shift and go to state 70
    alg3                           shift and go to state 66
    str                            shift and go to state 75
    repeat                         shift and go to state 30
    alg2                           shift and go to state 77
    list                           shift and go to state 33
    invrelpath                     shift and go to state 80
    abspath                        shift and go to state 55
    break                          shift and go to state 82
    execfile                       shift and go to state 85
    element                        shift and go to state 86
    expralg                        shift and go to state 40
    int                            shift and go to state 41
    relpath                        shift and go to state 88
    variables                      shift and go to state 44
    parttree                       shift and go to state 89
    equal                          shift and go to state 46

state 102

    (42) equal -> WORD EQUALS . expr
    (45) expr -> . expralg
    (46) expr -> . parttree
    (47) expr -> . alg0
    (48) expr -> . print
    (49) expr -> . varvar
    (50) expr -> . variables
    (51) expr -> . python
    (52) expr -> . execfile
    (53) expr -> . break
    (54) expr -> . curfile
    (55) expr -> . exectext
    (56) expr -> . equal
    (57) expr -> . dequal
    (58) expr -> . element
    (59) expr -> . mlist
    (60) expr -> . evaluate
    (61) expr -> . yield
    (62) expr -> . repeat
    (63) expr -> . pass
    (64) expr -> . dict
    (65) expr -> . return
    (66) expr -> . modules
    (67) expr -> . exfiles
    (68) expr -> . input
    (69) expralg -> . term
    (70) expralg -> . abspath
    (71) expralg -> . invrelpath
    (72) expralg -> . relpath
    (73) expralg -> . relpathbase
    (74) expralg -> . func
    (75) expralg -> . block
    (76) expralg -> . list
    (37) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (83) python -> . PYTHON str
    (84) execfile -> . EXECFILE expr
    (36) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (42) equal -> . WORD EQUALS expr
    (43) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON block
    (85) evaluate -> . EVALUATE expr
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (77) return -> . RETURN expr
    (19) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (18) input -> . INPUT
    (78) term -> . str
    (79) term -> . float
    (80) term -> . int
    (81) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (21) func -> . WORD LPAREN args RPAREN block
    (22) func -> . WORD LPAREN args RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (34) list -> . LBRACKET comms RBRACKET
    (35) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (94) var -> . WORD
    (91) str -> . STRING
    (89) float -> . FLOAT
    (82) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    AMPERSAND       shift and go to state 62
    PLUSMINUS       shift and go to state 68
    PRINT           shift and go to state 53
    VARIABLES       shift and go to state 65
    PYTHON          shift and go to state 59
    EXECFILE        shift and go to state 83
    BREAK           shift and go to state 90
    CURFILE         shift and go to state 3
    EXECTEXT        shift and go to state 78
    WORD            shift and go to state 97
    MLIST           shift and go to state 64
    EVALUATE        shift and go to state 50
    YIELD           shift and go to state 45
    REPEAT          shift and go to state 81
    PASS            shift and go to state 42
    LBRACE          shift and go to state 43
    RETURN          shift and go to state 28
    MODULES         shift and go to state 47
    EXFILES         shift and go to state 74
    INPUT           shift and go to state 79
    ABSPATH         shift and go to state 20
    INVRELPATH      shift and go to state 49
    RELPATH         shift and go to state 36
    RELPATHBASE     shift and go to state 52
    LBRACKET        shift and go to state 27
    STRING          shift and go to state 73
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 39

    python                         shift and go to state 48
    var                            shift and go to state 95
    pass                           shift and go to state 4
    exfiles                        shift and go to state 7
    dequal                         shift and go to state 6
    alg0                           shift and go to state 38
    varvar                         shift and go to state 8
    alg1                           shift and go to state 9
    yield                          shift and go to state 12
    block                          shift and go to state 57
    term                           shift and go to state 14
    dict                           shift and go to state 15
    expr                           shift and go to state 146
    curfile                        shift and go to state 17
    input                          shift and go to state 18
    float                          shift and go to state 1
    exectext                       shift and go to state 13
    mlist                          shift and go to state 61
    return                         shift and go to state 26
    evaluate                       shift and go to state 23
    modules                        shift and go to state 67
    print                          shift and go to state 24
    relpathbase                    shift and go to state 58
    func                           shift and go to state 70
    alg3                           shift and go to state 66
    str                            shift and go to state 75
    repeat                         shift and go to state 30
    alg2                           shift and go to state 77
    list                           shift and go to state 33
    invrelpath                     shift and go to state 80
    abspath                        shift and go to state 55
    break                          shift and go to state 82
    execfile                       shift and go to state 85
    element                        shift and go to state 86
    expralg                        shift and go to state 40
    int                            shift and go to state 41
    relpath                        shift and go to state 88
    variables                      shift and go to state 44
    parttree                       shift and go to state 89
    equal                          shift and go to state 46

state 103

    (9) define -> DEFINE WORD . expr
    (45) expr -> . expralg
    (46) expr -> . parttree
    (47) expr -> . alg0
    (48) expr -> . print
    (49) expr -> . varvar
    (50) expr -> . variables
    (51) expr -> . python
    (52) expr -> . execfile
    (53) expr -> . break
    (54) expr -> . curfile
    (55) expr -> . exectext
    (56) expr -> . equal
    (57) expr -> . dequal
    (58) expr -> . element
    (59) expr -> . mlist
    (60) expr -> . evaluate
    (61) expr -> . yield
    (62) expr -> . repeat
    (63) expr -> . pass
    (64) expr -> . dict
    (65) expr -> . return
    (66) expr -> . modules
    (67) expr -> . exfiles
    (68) expr -> . input
    (69) expralg -> . term
    (70) expralg -> . abspath
    (71) expralg -> . invrelpath
    (72) expralg -> . relpath
    (73) expralg -> . relpathbase
    (74) expralg -> . func
    (75) expralg -> . block
    (76) expralg -> . list
    (37) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (83) python -> . PYTHON str
    (84) execfile -> . EXECFILE expr
    (36) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (42) equal -> . WORD EQUALS expr
    (43) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON block
    (85) evaluate -> . EVALUATE expr
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (77) return -> . RETURN expr
    (19) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (18) input -> . INPUT
    (78) term -> . str
    (79) term -> . float
    (80) term -> . int
    (81) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (21) func -> . WORD LPAREN args RPAREN block
    (22) func -> . WORD LPAREN args RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (34) list -> . LBRACKET comms RBRACKET
    (35) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (94) var -> . WORD
    (91) str -> . STRING
    (89) float -> . FLOAT
    (82) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    AMPERSAND       shift and go to state 62
    PLUSMINUS       shift and go to state 68
    PRINT           shift and go to state 53
    VARIABLES       shift and go to state 65
    PYTHON          shift and go to state 59
    EXECFILE        shift and go to state 83
    BREAK           shift and go to state 90
    CURFILE         shift and go to state 3
    EXECTEXT        shift and go to state 78
    WORD            shift and go to state 97
    MLIST           shift and go to state 64
    EVALUATE        shift and go to state 50
    YIELD           shift and go to state 45
    REPEAT          shift and go to state 81
    PASS            shift and go to state 42
    LBRACE          shift and go to state 43
    RETURN          shift and go to state 28
    MODULES         shift and go to state 47
    EXFILES         shift and go to state 74
    INPUT           shift and go to state 79
    ABSPATH         shift and go to state 20
    INVRELPATH      shift and go to state 49
    RELPATH         shift and go to state 36
    RELPATHBASE     shift and go to state 52
    LBRACKET        shift and go to state 27
    STRING          shift and go to state 73
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 39

    python                         shift and go to state 48
    var                            shift and go to state 95
    pass                           shift and go to state 4
    exfiles                        shift and go to state 7
    dequal                         shift and go to state 6
    alg0                           shift and go to state 38
    varvar                         shift and go to state 8
    alg1                           shift and go to state 9
    yield                          shift and go to state 12
    block                          shift and go to state 57
    term                           shift and go to state 14
    dict                           shift and go to state 15
    expr                           shift and go to state 147
    curfile                        shift and go to state 17
    input                          shift and go to state 18
    float                          shift and go to state 1
    exectext                       shift and go to state 13
    mlist                          shift and go to state 61
    return                         shift and go to state 26
    evaluate                       shift and go to state 23
    modules                        shift and go to state 67
    print                          shift and go to state 24
    relpathbase                    shift and go to state 58
    func                           shift and go to state 70
    alg3                           shift and go to state 66
    str                            shift and go to state 75
    repeat                         shift and go to state 30
    alg2                           shift and go to state 77
    list                           shift and go to state 33
    invrelpath                     shift and go to state 80
    abspath                        shift and go to state 55
    break                          shift and go to state 82
    execfile                       shift and go to state 85
    element                        shift and go to state 86
    expralg                        shift and go to state 40
    int                            shift and go to state 41
    relpath                        shift and go to state 88
    variables                      shift and go to state 44
    parttree                       shift and go to state 89
    equal                          shift and go to state 46

state 104

    (88) downlevel -> DOWNLEVEL expr .
    (93) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    DIVIDER         reduce using rule 88 (downlevel -> DOWNLEVEL expr .)
    $end            reduce using rule 88 (downlevel -> DOWNLEVEL expr .)
    RBRACE          reduce using rule 88 (downlevel -> DOWNLEVEL expr .)
    COLON           reduce using rule 88 (downlevel -> DOWNLEVEL expr .)
    QUESTION        reduce using rule 88 (downlevel -> DOWNLEVEL expr .)
    RBRACKET        reduce using rule 88 (downlevel -> DOWNLEVEL expr .)
    COMMA           reduce using rule 88 (downlevel -> DOWNLEVEL expr .)
    RPAREN          reduce using rule 88 (downlevel -> DOWNLEVEL expr .)
    LBRACKET        shift and go to state 99

  ! LBRACKET        [ reduce using rule 88 (downlevel -> DOWNLEVEL expr .) ]


state 105

    (34) list -> LBRACKET comms . RBRACKET
    (41) comms -> comms . COMMA expr

    RBRACKET        shift and go to state 148
    COMMA           shift and go to state 149


state 106

    (35) list -> LBRACKET RBRACKET .

    QUESTION        reduce using rule 35 (list -> LBRACKET RBRACKET .)
    LBRACKET        reduce using rule 35 (list -> LBRACKET RBRACKET .)
    DPROD           reduce using rule 35 (list -> LBRACKET RBRACKET .)
    DIVMUL          reduce using rule 35 (list -> LBRACKET RBRACKET .)
    PLUSMINUS       reduce using rule 35 (list -> LBRACKET RBRACKET .)
    COLON           reduce using rule 35 (list -> LBRACKET RBRACKET .)
    DIVIDER         reduce using rule 35 (list -> LBRACKET RBRACKET .)
    $end            reduce using rule 35 (list -> LBRACKET RBRACKET .)
    RBRACE          reduce using rule 35 (list -> LBRACKET RBRACKET .)
    RBRACKET        reduce using rule 35 (list -> LBRACKET RBRACKET .)
    COMMA           reduce using rule 35 (list -> LBRACKET RBRACKET .)
    RPAREN          reduce using rule 35 (list -> LBRACKET RBRACKET .)


state 107

    (40) comms -> expr .
    (93) element -> expr . LBRACKET expr RBRACKET

    COMMA           reduce using rule 40 (comms -> expr .)
    RPAREN          reduce using rule 40 (comms -> expr .)
    RBRACKET        reduce using rule 40 (comms -> expr .)
    LBRACKET        shift and go to state 99


state 108

    (77) return -> RETURN expr .
    (93) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    RBRACKET        reduce using rule 77 (return -> RETURN expr .)
    COMMA           reduce using rule 77 (return -> RETURN expr .)
    RPAREN          reduce using rule 77 (return -> RETURN expr .)
    DIVIDER         reduce using rule 77 (return -> RETURN expr .)
    $end            reduce using rule 77 (return -> RETURN expr .)
    RBRACE          reduce using rule 77 (return -> RETURN expr .)
    COLON           reduce using rule 77 (return -> RETURN expr .)
    QUESTION        reduce using rule 77 (return -> RETURN expr .)
    LBRACKET        shift and go to state 99

  ! LBRACKET        [ reduce using rule 77 (return -> RETURN expr .) ]


state 109

    (44) application -> APPLICATION WORD . block
    (1) block -> . LBRACE inblock RBRACE

    LBRACE          shift and go to state 128

    block                          shift and go to state 150

state 110

    (3) inblock -> inblock divider . metaexpr
    (5) inblock -> inblock divider .
    (23) metaexpr -> . expr
    (24) metaexpr -> . deffunc
    (25) metaexpr -> . module
    (26) metaexpr -> . application
    (27) metaexpr -> . declare
    (28) metaexpr -> . append
    (29) metaexpr -> . define
    (30) metaexpr -> . execscan
    (31) metaexpr -> . compile
    (32) metaexpr -> . downlevel
    (33) metaexpr -> . if
    (45) expr -> . expralg
    (46) expr -> . parttree
    (47) expr -> . alg0
    (48) expr -> . print
    (49) expr -> . varvar
    (50) expr -> . variables
    (51) expr -> . python
    (52) expr -> . execfile
    (53) expr -> . break
    (54) expr -> . curfile
    (55) expr -> . exectext
    (56) expr -> . equal
    (57) expr -> . dequal
    (58) expr -> . element
    (59) expr -> . mlist
    (60) expr -> . evaluate
    (61) expr -> . yield
    (62) expr -> . repeat
    (63) expr -> . pass
    (64) expr -> . dict
    (65) expr -> . return
    (66) expr -> . modules
    (67) expr -> . exfiles
    (68) expr -> . input
    (8) deffunc -> . DEFFUNC WORD LPAREN args RPAREN block
    (7) module -> . MODULE WORD block
    (44) application -> . APPLICATION WORD block
    (15) declare -> . expr COLON expr
    (20) append -> . var APPEND expr
    (9) define -> . DEFINE WORD expr
    (10) define -> . WORD DEFOP expr
    (86) execscan -> . EXECSCAN expr
    (103) compile -> . COMPILE
    (88) downlevel -> . DOWNLEVEL expr
    (16) if -> . IF expr QUESTION expr COLON expr
    (69) expralg -> . term
    (70) expralg -> . abspath
    (71) expralg -> . invrelpath
    (72) expralg -> . relpath
    (73) expralg -> . relpathbase
    (74) expralg -> . func
    (75) expralg -> . block
    (76) expralg -> . list
    (37) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (83) python -> . PYTHON str
    (84) execfile -> . EXECFILE expr
    (36) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (42) equal -> . WORD EQUALS expr
    (43) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON block
    (85) evaluate -> . EVALUATE expr
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (77) return -> . RETURN expr
    (19) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (18) input -> . INPUT
    (94) var -> . WORD
    (78) term -> . str
    (79) term -> . float
    (80) term -> . int
    (81) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (21) func -> . WORD LPAREN args RPAREN block
    (22) func -> . WORD LPAREN args RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (34) list -> . LBRACKET comms RBRACKET
    (35) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (91) str -> . STRING
    (89) float -> . FLOAT
    (82) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    RBRACE          reduce using rule 5 (inblock -> inblock divider .)
    DIVIDER         reduce using rule 5 (inblock -> inblock divider .)
    $end            reduce using rule 5 (inblock -> inblock divider .)
    DEFFUNC         shift and go to state 37
    MODULE          shift and go to state 5
    APPLICATION     shift and go to state 29
    DEFINE          shift and go to state 22
    WORD            shift and go to state 19
    EXECSCAN        shift and go to state 72
    COMPILE         shift and go to state 63
    DOWNLEVEL       shift and go to state 25
    IF              shift and go to state 11
    AMPERSAND       shift and go to state 62
    PLUSMINUS       shift and go to state 68
    PRINT           shift and go to state 53
    VARIABLES       shift and go to state 65
    PYTHON          shift and go to state 59
    EXECFILE        shift and go to state 83
    BREAK           shift and go to state 90
    CURFILE         shift and go to state 3
    EXECTEXT        shift and go to state 78
    MLIST           shift and go to state 64
    EVALUATE        shift and go to state 50
    YIELD           shift and go to state 45
    REPEAT          shift and go to state 81
    PASS            shift and go to state 42
    LBRACE          shift and go to state 43
    RETURN          shift and go to state 28
    MODULES         shift and go to state 47
    EXFILES         shift and go to state 74
    INPUT           shift and go to state 79
    ABSPATH         shift and go to state 20
    INVRELPATH      shift and go to state 49
    RELPATH         shift and go to state 36
    RELPATHBASE     shift and go to state 52
    LBRACKET        shift and go to state 27
    STRING          shift and go to state 73
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 39

    python                         shift and go to state 48
    var                            shift and go to state 2
    pass                           shift and go to state 4
    dequal                         shift and go to state 6
    deffunc                        shift and go to state 51
    metaexpr                       shift and go to state 151
    exfiles                        shift and go to state 7
    varvar                         shift and go to state 8
    alg1                           shift and go to state 9
    yield                          shift and go to state 12
    if                             shift and go to state 56
    exectext                       shift and go to state 13
    term                           shift and go to state 14
    dict                           shift and go to state 15
    expr                           shift and go to state 16
    curfile                        shift and go to state 17
    input                          shift and go to state 18
    float                          shift and go to state 1
    block                          shift and go to state 57
    expralg                        shift and go to state 40
    module                         shift and go to state 60
    mlist                          shift and go to state 61
    return                         shift and go to state 26
    declare                        shift and go to state 21
    evaluate                       shift and go to state 23
    modules                        shift and go to state 67
    print                          shift and go to state 24
    relpathbase                    shift and go to state 58
    append                         shift and go to state 69
    func                           shift and go to state 70
    execscan                       shift and go to state 71
    alg3                           shift and go to state 66
    str                            shift and go to state 75
    application                    shift and go to state 76
    define                         shift and go to state 10
    repeat                         shift and go to state 30
    alg2                           shift and go to state 77
    compile                        shift and go to state 31
    list                           shift and go to state 33
    invrelpath                     shift and go to state 80
    abspath                        shift and go to state 55
    break                          shift and go to state 82
    downlevel                      shift and go to state 34
    alg0                           shift and go to state 38
    execfile                       shift and go to state 85
    element                        shift and go to state 86
    parttree                       shift and go to state 89
    int                            shift and go to state 41
    relpath                        shift and go to state 88
    variables                      shift and go to state 44
    equal                          shift and go to state 46

state 111

    (8) deffunc -> DEFFUNC WORD . LPAREN args RPAREN block

    LPAREN          shift and go to state 152


state 112

    (108) alg0 -> alg0 PLUSMINUS . alg1
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg
    (69) expralg -> . term
    (70) expralg -> . abspath
    (71) expralg -> . invrelpath
    (72) expralg -> . relpath
    (73) expralg -> . relpathbase
    (74) expralg -> . func
    (75) expralg -> . block
    (76) expralg -> . list
    (78) term -> . str
    (79) term -> . float
    (80) term -> . int
    (81) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (21) func -> . WORD LPAREN args RPAREN block
    (22) func -> . WORD LPAREN args RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (34) list -> . LBRACKET comms RBRACKET
    (35) list -> . LBRACKET RBRACKET
    (91) str -> . STRING
    (89) float -> . FLOAT
    (82) int -> . NUMBER
    (94) var -> . WORD

    ABSPATH         shift and go to state 20
    INVRELPATH      shift and go to state 49
    RELPATH         shift and go to state 36
    RELPATHBASE     shift and go to state 52
    WORD            shift and go to state 126
    LBRACE          shift and go to state 128
    LBRACKET        shift and go to state 27
    STRING          shift and go to state 73
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 39

    term                           shift and go to state 14
    relpathbase                    shift and go to state 58
    invrelpath                     shift and go to state 80
    func                           shift and go to state 70
    abspath                        shift and go to state 55
    alg3                           shift and go to state 66
    float                          shift and go to state 1
    expralg                        shift and go to state 127
    list                           shift and go to state 33
    alg1                           shift and go to state 153
    var                            shift and go to state 124
    str                            shift and go to state 75
    int                            shift and go to state 41
    alg2                           shift and go to state 77
    block                          shift and go to state 57
    relpath                        shift and go to state 88

state 113

    (15) declare -> expr . COLON expr
    (23) metaexpr -> expr .
    (93) element -> expr . LBRACKET expr RBRACKET

    COLON           shift and go to state 98
    RBRACE          reduce using rule 23 (metaexpr -> expr .)
    DIVIDER         reduce using rule 23 (metaexpr -> expr .)
    LBRACKET        shift and go to state 99


state 114

    (13) declares -> declare .
    (27) metaexpr -> declare .

  ! reduce/reduce conflict for RBRACE resolved using rule 13 (declares -> declare .)
    RBRACE          reduce using rule 13 (declares -> declare .)
    COMMA           reduce using rule 13 (declares -> declare .)
    DIVIDER         reduce using rule 27 (metaexpr -> declare .)

  ! RBRACE          [ reduce using rule 27 (metaexpr -> declare .) ]


state 115

    (1) block -> LBRACE inblock . RBRACE
    (3) inblock -> inblock . divider metaexpr
    (5) inblock -> inblock . divider
    (17) divider -> . DIVIDER

    RBRACE          shift and go to state 154
    DIVIDER         shift and go to state 54

    divider                        shift and go to state 110

state 116

    (12) dict -> LBRACE RBRACE .

    LBRACKET        reduce using rule 12 (dict -> LBRACE RBRACE .)
    DIVIDER         reduce using rule 12 (dict -> LBRACE RBRACE .)
    $end            reduce using rule 12 (dict -> LBRACE RBRACE .)
    RBRACE          reduce using rule 12 (dict -> LBRACE RBRACE .)
    COLON           reduce using rule 12 (dict -> LBRACE RBRACE .)
    QUESTION        reduce using rule 12 (dict -> LBRACE RBRACE .)
    RBRACKET        reduce using rule 12 (dict -> LBRACE RBRACE .)
    COMMA           reduce using rule 12 (dict -> LBRACE RBRACE .)
    RPAREN          reduce using rule 12 (dict -> LBRACE RBRACE .)


state 117

    (11) dict -> LBRACE declares . RBRACE
    (14) declares -> declares . COMMA declare

    RBRACE          shift and go to state 155
    COMMA           shift and go to state 156


state 118

    (85) evaluate -> EVALUATE expr .
    (93) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    DIVIDER         reduce using rule 85 (evaluate -> EVALUATE expr .)
    $end            reduce using rule 85 (evaluate -> EVALUATE expr .)
    RBRACE          reduce using rule 85 (evaluate -> EVALUATE expr .)
    COLON           reduce using rule 85 (evaluate -> EVALUATE expr .)
    QUESTION        reduce using rule 85 (evaluate -> EVALUATE expr .)
    RBRACKET        reduce using rule 85 (evaluate -> EVALUATE expr .)
    COMMA           reduce using rule 85 (evaluate -> EVALUATE expr .)
    RPAREN          reduce using rule 85 (evaluate -> EVALUATE expr .)
    LBRACKET        shift and go to state 99

  ! LBRACKET        [ reduce using rule 85 (evaluate -> EVALUATE expr .) ]


state 119

    (6) print -> PRINT expr .
    (93) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    COLON           reduce using rule 6 (print -> PRINT expr .)
    RBRACE          reduce using rule 6 (print -> PRINT expr .)
    DIVIDER         reduce using rule 6 (print -> PRINT expr .)
    $end            reduce using rule 6 (print -> PRINT expr .)
    QUESTION        reduce using rule 6 (print -> PRINT expr .)
    RBRACKET        reduce using rule 6 (print -> PRINT expr .)
    COMMA           reduce using rule 6 (print -> PRINT expr .)
    RPAREN          reduce using rule 6 (print -> PRINT expr .)
    LBRACKET        shift and go to state 99

  ! LBRACKET        [ reduce using rule 6 (print -> PRINT expr .) ]


state 120

    (83) python -> PYTHON str .

    LBRACKET        reduce using rule 83 (python -> PYTHON str .)
    DIVIDER         reduce using rule 83 (python -> PYTHON str .)
    $end            reduce using rule 83 (python -> PYTHON str .)
    RBRACE          reduce using rule 83 (python -> PYTHON str .)
    COLON           reduce using rule 83 (python -> PYTHON str .)
    QUESTION        reduce using rule 83 (python -> PYTHON str .)
    RBRACKET        reduce using rule 83 (python -> PYTHON str .)
    COMMA           reduce using rule 83 (python -> PYTHON str .)
    RPAREN          reduce using rule 83 (python -> PYTHON str .)


state 121

    (37) parttree -> AMPERSAND metaexpr .

    LBRACKET        reduce using rule 37 (parttree -> AMPERSAND metaexpr .)
    DIVIDER         reduce using rule 37 (parttree -> AMPERSAND metaexpr .)
    $end            reduce using rule 37 (parttree -> AMPERSAND metaexpr .)
    RBRACE          reduce using rule 37 (parttree -> AMPERSAND metaexpr .)
    COLON           reduce using rule 37 (parttree -> AMPERSAND metaexpr .)
    QUESTION        reduce using rule 37 (parttree -> AMPERSAND metaexpr .)
    RBRACKET        reduce using rule 37 (parttree -> AMPERSAND metaexpr .)
    COMMA           reduce using rule 37 (parttree -> AMPERSAND metaexpr .)
    RPAREN          reduce using rule 37 (parttree -> AMPERSAND metaexpr .)


state 122

    (96) mlist -> MLIST COLON . block
    (1) block -> . LBRACE inblock RBRACE

    LBRACE          shift and go to state 128

    block                          shift and go to state 157

state 123

    (95) variables -> VARIABLES expr .
    (93) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    DIVIDER         reduce using rule 95 (variables -> VARIABLES expr .)
    $end            reduce using rule 95 (variables -> VARIABLES expr .)
    RBRACE          reduce using rule 95 (variables -> VARIABLES expr .)
    COLON           reduce using rule 95 (variables -> VARIABLES expr .)
    QUESTION        reduce using rule 95 (variables -> VARIABLES expr .)
    RBRACKET        reduce using rule 95 (variables -> VARIABLES expr .)
    COMMA           reduce using rule 95 (variables -> VARIABLES expr .)
    RPAREN          reduce using rule 95 (variables -> VARIABLES expr .)
    LBRACKET        shift and go to state 99

  ! LBRACKET        [ reduce using rule 95 (variables -> VARIABLES expr .) ]


state 124

    (81) term -> var .

    DPROD           reduce using rule 81 (term -> var .)
    DIVMUL          reduce using rule 81 (term -> var .)
    PLUSMINUS       reduce using rule 81 (term -> var .)
    COLON           reduce using rule 81 (term -> var .)
    LBRACKET        reduce using rule 81 (term -> var .)
    DIVIDER         reduce using rule 81 (term -> var .)
    $end            reduce using rule 81 (term -> var .)
    QUESTION        reduce using rule 81 (term -> var .)
    RBRACE          reduce using rule 81 (term -> var .)
    RBRACKET        reduce using rule 81 (term -> var .)
    COMMA           reduce using rule 81 (term -> var .)
    RPAREN          reduce using rule 81 (term -> var .)


state 125

    (109) alg0 -> PLUSMINUS alg1 .
    (111) alg1 -> alg1 . DIVMUL alg2

    PLUSMINUS       reduce using rule 109 (alg0 -> PLUSMINUS alg1 .)
    LBRACKET        reduce using rule 109 (alg0 -> PLUSMINUS alg1 .)
    DIVIDER         reduce using rule 109 (alg0 -> PLUSMINUS alg1 .)
    $end            reduce using rule 109 (alg0 -> PLUSMINUS alg1 .)
    RBRACE          reduce using rule 109 (alg0 -> PLUSMINUS alg1 .)
    COLON           reduce using rule 109 (alg0 -> PLUSMINUS alg1 .)
    QUESTION        reduce using rule 109 (alg0 -> PLUSMINUS alg1 .)
    RBRACKET        reduce using rule 109 (alg0 -> PLUSMINUS alg1 .)
    COMMA           reduce using rule 109 (alg0 -> PLUSMINUS alg1 .)
    RPAREN          reduce using rule 109 (alg0 -> PLUSMINUS alg1 .)
    DIVMUL          shift and go to state 94


state 126

    (21) func -> WORD . LPAREN args RPAREN block
    (22) func -> WORD . LPAREN args RPAREN
    (94) var -> WORD .

    LPAREN          shift and go to state 100
    DPROD           reduce using rule 94 (var -> WORD .)
    DIVMUL          reduce using rule 94 (var -> WORD .)
    PLUSMINUS       reduce using rule 94 (var -> WORD .)
    COLON           reduce using rule 94 (var -> WORD .)
    LBRACKET        reduce using rule 94 (var -> WORD .)
    DIVIDER         reduce using rule 94 (var -> WORD .)
    $end            reduce using rule 94 (var -> WORD .)
    QUESTION        reduce using rule 94 (var -> WORD .)
    RBRACE          reduce using rule 94 (var -> WORD .)
    RBRACKET        reduce using rule 94 (var -> WORD .)
    COMMA           reduce using rule 94 (var -> WORD .)
    RPAREN          reduce using rule 94 (var -> WORD .)


state 127

    (114) alg3 -> expralg .

    DPROD           reduce using rule 114 (alg3 -> expralg .)
    DIVMUL          reduce using rule 114 (alg3 -> expralg .)
    PLUSMINUS       reduce using rule 114 (alg3 -> expralg .)
    COLON           reduce using rule 114 (alg3 -> expralg .)
    LBRACKET        reduce using rule 114 (alg3 -> expralg .)
    DIVIDER         reduce using rule 114 (alg3 -> expralg .)
    $end            reduce using rule 114 (alg3 -> expralg .)
    QUESTION        reduce using rule 114 (alg3 -> expralg .)
    RBRACE          reduce using rule 114 (alg3 -> expralg .)
    RBRACKET        reduce using rule 114 (alg3 -> expralg .)
    COMMA           reduce using rule 114 (alg3 -> expralg .)
    RPAREN          reduce using rule 114 (alg3 -> expralg .)


state 128

    (1) block -> LBRACE . inblock RBRACE
    (2) inblock -> . metaexpr
    (3) inblock -> . inblock divider metaexpr
    (4) inblock -> . divider inblock
    (5) inblock -> . inblock divider
    (23) metaexpr -> . expr
    (24) metaexpr -> . deffunc
    (25) metaexpr -> . module
    (26) metaexpr -> . application
    (27) metaexpr -> . declare
    (28) metaexpr -> . append
    (29) metaexpr -> . define
    (30) metaexpr -> . execscan
    (31) metaexpr -> . compile
    (32) metaexpr -> . downlevel
    (33) metaexpr -> . if
    (17) divider -> . DIVIDER
    (45) expr -> . expralg
    (46) expr -> . parttree
    (47) expr -> . alg0
    (48) expr -> . print
    (49) expr -> . varvar
    (50) expr -> . variables
    (51) expr -> . python
    (52) expr -> . execfile
    (53) expr -> . break
    (54) expr -> . curfile
    (55) expr -> . exectext
    (56) expr -> . equal
    (57) expr -> . dequal
    (58) expr -> . element
    (59) expr -> . mlist
    (60) expr -> . evaluate
    (61) expr -> . yield
    (62) expr -> . repeat
    (63) expr -> . pass
    (64) expr -> . dict
    (65) expr -> . return
    (66) expr -> . modules
    (67) expr -> . exfiles
    (68) expr -> . input
    (8) deffunc -> . DEFFUNC WORD LPAREN args RPAREN block
    (7) module -> . MODULE WORD block
    (44) application -> . APPLICATION WORD block
    (15) declare -> . expr COLON expr
    (20) append -> . var APPEND expr
    (9) define -> . DEFINE WORD expr
    (10) define -> . WORD DEFOP expr
    (86) execscan -> . EXECSCAN expr
    (103) compile -> . COMPILE
    (88) downlevel -> . DOWNLEVEL expr
    (16) if -> . IF expr QUESTION expr COLON expr
    (69) expralg -> . term
    (70) expralg -> . abspath
    (71) expralg -> . invrelpath
    (72) expralg -> . relpath
    (73) expralg -> . relpathbase
    (74) expralg -> . func
    (75) expralg -> . block
    (76) expralg -> . list
    (37) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (83) python -> . PYTHON str
    (84) execfile -> . EXECFILE expr
    (36) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (42) equal -> . WORD EQUALS expr
    (43) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON block
    (85) evaluate -> . EVALUATE expr
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (77) return -> . RETURN expr
    (19) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (18) input -> . INPUT
    (94) var -> . WORD
    (78) term -> . str
    (79) term -> . float
    (80) term -> . int
    (81) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (21) func -> . WORD LPAREN args RPAREN block
    (22) func -> . WORD LPAREN args RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (34) list -> . LBRACKET comms RBRACKET
    (35) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (91) str -> . STRING
    (89) float -> . FLOAT
    (82) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    DIVIDER         shift and go to state 54
    DEFFUNC         shift and go to state 37
    MODULE          shift and go to state 5
    APPLICATION     shift and go to state 29
    DEFINE          shift and go to state 22
    WORD            shift and go to state 19
    EXECSCAN        shift and go to state 72
    COMPILE         shift and go to state 63
    DOWNLEVEL       shift and go to state 25
    IF              shift and go to state 11
    AMPERSAND       shift and go to state 62
    PLUSMINUS       shift and go to state 68
    PRINT           shift and go to state 53
    VARIABLES       shift and go to state 65
    PYTHON          shift and go to state 59
    EXECFILE        shift and go to state 83
    BREAK           shift and go to state 90
    CURFILE         shift and go to state 3
    EXECTEXT        shift and go to state 78
    MLIST           shift and go to state 64
    EVALUATE        shift and go to state 50
    YIELD           shift and go to state 45
    REPEAT          shift and go to state 81
    PASS            shift and go to state 42
    LBRACE          shift and go to state 43
    RETURN          shift and go to state 28
    MODULES         shift and go to state 47
    EXFILES         shift and go to state 74
    INPUT           shift and go to state 79
    ABSPATH         shift and go to state 20
    INVRELPATH      shift and go to state 49
    RELPATH         shift and go to state 36
    RELPATHBASE     shift and go to state 52
    LBRACKET        shift and go to state 27
    STRING          shift and go to state 73
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 39

    python                         shift and go to state 48
    var                            shift and go to state 2
    pass                           shift and go to state 4
    dequal                         shift and go to state 6
    deffunc                        shift and go to state 51
    metaexpr                       shift and go to state 84
    exfiles                        shift and go to state 7
    varvar                         shift and go to state 8
    alg1                           shift and go to state 9
    yield                          shift and go to state 12
    if                             shift and go to state 56
    exectext                       shift and go to state 13
    term                           shift and go to state 14
    dict                           shift and go to state 15
    expr                           shift and go to state 16
    curfile                        shift and go to state 17
    input                          shift and go to state 18
    float                          shift and go to state 1
    block                          shift and go to state 57
    expralg                        shift and go to state 40
    module                         shift and go to state 60
    mlist                          shift and go to state 61
    return                         shift and go to state 26
    declare                        shift and go to state 21
    evaluate                       shift and go to state 23
    modules                        shift and go to state 67
    print                          shift and go to state 24
    relpathbase                    shift and go to state 58
    append                         shift and go to state 69
    func                           shift and go to state 70
    execscan                       shift and go to state 71
    alg3                           shift and go to state 66
    str                            shift and go to state 75
    application                    shift and go to state 76
    define                         shift and go to state 10
    repeat                         shift and go to state 30
    alg2                           shift and go to state 77
    compile                        shift and go to state 31
    list                           shift and go to state 33
    invrelpath                     shift and go to state 80
    abspath                        shift and go to state 55
    break                          shift and go to state 82
    inblock                        shift and go to state 115
    downlevel                      shift and go to state 34
    alg0                           shift and go to state 38
    execfile                       shift and go to state 85
    element                        shift and go to state 86
    divider                        shift and go to state 87
    parttree                       shift and go to state 89
    int                            shift and go to state 41
    relpath                        shift and go to state 88
    variables                      shift and go to state 44
    equal                          shift and go to state 46

state 129

    (86) execscan -> EXECSCAN expr .
    (93) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    DIVIDER         reduce using rule 86 (execscan -> EXECSCAN expr .)
    $end            reduce using rule 86 (execscan -> EXECSCAN expr .)
    RBRACE          reduce using rule 86 (execscan -> EXECSCAN expr .)
    COLON           reduce using rule 86 (execscan -> EXECSCAN expr .)
    QUESTION        reduce using rule 86 (execscan -> EXECSCAN expr .)
    RBRACKET        reduce using rule 86 (execscan -> EXECSCAN expr .)
    COMMA           reduce using rule 86 (execscan -> EXECSCAN expr .)
    RPAREN          reduce using rule 86 (execscan -> EXECSCAN expr .)
    LBRACKET        shift and go to state 99

  ! LBRACKET        [ reduce using rule 86 (execscan -> EXECSCAN expr .) ]


state 130

    (113) alg2 -> alg2 DPROD . alg3
    (114) alg3 -> . expralg
    (69) expralg -> . term
    (70) expralg -> . abspath
    (71) expralg -> . invrelpath
    (72) expralg -> . relpath
    (73) expralg -> . relpathbase
    (74) expralg -> . func
    (75) expralg -> . block
    (76) expralg -> . list
    (78) term -> . str
    (79) term -> . float
    (80) term -> . int
    (81) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (21) func -> . WORD LPAREN args RPAREN block
    (22) func -> . WORD LPAREN args RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (34) list -> . LBRACKET comms RBRACKET
    (35) list -> . LBRACKET RBRACKET
    (91) str -> . STRING
    (89) float -> . FLOAT
    (82) int -> . NUMBER
    (94) var -> . WORD

    ABSPATH         shift and go to state 20
    INVRELPATH      shift and go to state 49
    RELPATH         shift and go to state 36
    RELPATHBASE     shift and go to state 52
    WORD            shift and go to state 126
    LBRACE          shift and go to state 128
    LBRACKET        shift and go to state 27
    STRING          shift and go to state 73
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 39

    term                           shift and go to state 14
    relpathbase                    shift and go to state 58
    invrelpath                     shift and go to state 80
    list                           shift and go to state 33
    abspath                        shift and go to state 55
    func                           shift and go to state 70
    alg3                           shift and go to state 158
    float                          shift and go to state 1
    expralg                        shift and go to state 127
    int                            shift and go to state 41
    relpath                        shift and go to state 88
    str                            shift and go to state 75
    var                            shift and go to state 124
    block                          shift and go to state 57

state 131

    (87) exectext -> EXECTEXT expr .
    (93) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    DIVIDER         reduce using rule 87 (exectext -> EXECTEXT expr .)
    $end            reduce using rule 87 (exectext -> EXECTEXT expr .)
    RBRACE          reduce using rule 87 (exectext -> EXECTEXT expr .)
    COLON           reduce using rule 87 (exectext -> EXECTEXT expr .)
    QUESTION        reduce using rule 87 (exectext -> EXECTEXT expr .)
    RBRACKET        reduce using rule 87 (exectext -> EXECTEXT expr .)
    COMMA           reduce using rule 87 (exectext -> EXECTEXT expr .)
    RPAREN          reduce using rule 87 (exectext -> EXECTEXT expr .)
    LBRACKET        shift and go to state 99

  ! LBRACKET        [ reduce using rule 87 (exectext -> EXECTEXT expr .) ]


state 132

    (84) execfile -> EXECFILE expr .
    (93) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    DIVIDER         reduce using rule 84 (execfile -> EXECFILE expr .)
    $end            reduce using rule 84 (execfile -> EXECFILE expr .)
    RBRACE          reduce using rule 84 (execfile -> EXECFILE expr .)
    COLON           reduce using rule 84 (execfile -> EXECFILE expr .)
    QUESTION        reduce using rule 84 (execfile -> EXECFILE expr .)
    RBRACKET        reduce using rule 84 (execfile -> EXECFILE expr .)
    COMMA           reduce using rule 84 (execfile -> EXECFILE expr .)
    RPAREN          reduce using rule 84 (execfile -> EXECFILE expr .)
    LBRACKET        shift and go to state 99

  ! LBRACKET        [ reduce using rule 84 (execfile -> EXECFILE expr .) ]


state 133

    (43) dequal -> element EQUALS . expr
    (45) expr -> . expralg
    (46) expr -> . parttree
    (47) expr -> . alg0
    (48) expr -> . print
    (49) expr -> . varvar
    (50) expr -> . variables
    (51) expr -> . python
    (52) expr -> . execfile
    (53) expr -> . break
    (54) expr -> . curfile
    (55) expr -> . exectext
    (56) expr -> . equal
    (57) expr -> . dequal
    (58) expr -> . element
    (59) expr -> . mlist
    (60) expr -> . evaluate
    (61) expr -> . yield
    (62) expr -> . repeat
    (63) expr -> . pass
    (64) expr -> . dict
    (65) expr -> . return
    (66) expr -> . modules
    (67) expr -> . exfiles
    (68) expr -> . input
    (69) expralg -> . term
    (70) expralg -> . abspath
    (71) expralg -> . invrelpath
    (72) expralg -> . relpath
    (73) expralg -> . relpathbase
    (74) expralg -> . func
    (75) expralg -> . block
    (76) expralg -> . list
    (37) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (83) python -> . PYTHON str
    (84) execfile -> . EXECFILE expr
    (36) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (42) equal -> . WORD EQUALS expr
    (43) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON block
    (85) evaluate -> . EVALUATE expr
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (77) return -> . RETURN expr
    (19) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (18) input -> . INPUT
    (78) term -> . str
    (79) term -> . float
    (80) term -> . int
    (81) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (21) func -> . WORD LPAREN args RPAREN block
    (22) func -> . WORD LPAREN args RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (34) list -> . LBRACKET comms RBRACKET
    (35) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (94) var -> . WORD
    (91) str -> . STRING
    (89) float -> . FLOAT
    (82) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    AMPERSAND       shift and go to state 62
    PLUSMINUS       shift and go to state 68
    PRINT           shift and go to state 53
    VARIABLES       shift and go to state 65
    PYTHON          shift and go to state 59
    EXECFILE        shift and go to state 83
    BREAK           shift and go to state 90
    CURFILE         shift and go to state 3
    EXECTEXT        shift and go to state 78
    WORD            shift and go to state 97
    MLIST           shift and go to state 64
    EVALUATE        shift and go to state 50
    YIELD           shift and go to state 45
    REPEAT          shift and go to state 81
    PASS            shift and go to state 42
    LBRACE          shift and go to state 43
    RETURN          shift and go to state 28
    MODULES         shift and go to state 47
    EXFILES         shift and go to state 74
    INPUT           shift and go to state 79
    ABSPATH         shift and go to state 20
    INVRELPATH      shift and go to state 49
    RELPATH         shift and go to state 36
    RELPATHBASE     shift and go to state 52
    LBRACKET        shift and go to state 27
    STRING          shift and go to state 73
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 39

    python                         shift and go to state 48
    var                            shift and go to state 95
    pass                           shift and go to state 4
    exfiles                        shift and go to state 7
    dequal                         shift and go to state 6
    alg0                           shift and go to state 38
    varvar                         shift and go to state 8
    alg1                           shift and go to state 9
    yield                          shift and go to state 12
    block                          shift and go to state 57
    term                           shift and go to state 14
    dict                           shift and go to state 15
    expr                           shift and go to state 159
    element                        shift and go to state 86
    input                          shift and go to state 18
    float                          shift and go to state 1
    exectext                       shift and go to state 13
    mlist                          shift and go to state 61
    return                         shift and go to state 26
    evaluate                       shift and go to state 23
    modules                        shift and go to state 67
    print                          shift and go to state 24
    relpathbase                    shift and go to state 58
    func                           shift and go to state 70
    alg3                           shift and go to state 66
    str                            shift and go to state 75
    repeat                         shift and go to state 30
    alg2                           shift and go to state 77
    list                           shift and go to state 33
    invrelpath                     shift and go to state 80
    abspath                        shift and go to state 55
    break                          shift and go to state 82
    execfile                       shift and go to state 85
    curfile                        shift and go to state 17
    expralg                        shift and go to state 40
    int                            shift and go to state 41
    relpath                        shift and go to state 88
    variables                      shift and go to state 44
    parttree                       shift and go to state 89
    equal                          shift and go to state 46

state 134

    (4) inblock -> divider inblock .
    (3) inblock -> inblock . divider metaexpr
    (5) inblock -> inblock . divider
    (17) divider -> . DIVIDER

  ! shift/reduce conflict for DIVIDER resolved as shift
    RBRACE          reduce using rule 4 (inblock -> divider inblock .)
    $end            reduce using rule 4 (inblock -> divider inblock .)
    DIVIDER         shift and go to state 54

  ! DIVIDER         [ reduce using rule 4 (inblock -> divider inblock .) ]

    divider                        shift and go to state 110

state 135

    (20) append -> var APPEND expr .
    (93) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    RBRACE          reduce using rule 20 (append -> var APPEND expr .)
    DIVIDER         reduce using rule 20 (append -> var APPEND expr .)
    $end            reduce using rule 20 (append -> var APPEND expr .)
    COLON           reduce using rule 20 (append -> var APPEND expr .)
    QUESTION        reduce using rule 20 (append -> var APPEND expr .)
    RBRACKET        reduce using rule 20 (append -> var APPEND expr .)
    COMMA           reduce using rule 20 (append -> var APPEND expr .)
    RPAREN          reduce using rule 20 (append -> var APPEND expr .)
    LBRACKET        shift and go to state 99

  ! LBRACKET        [ reduce using rule 20 (append -> var APPEND expr .) ]


state 136

    (7) module -> MODULE WORD block .

    LBRACKET        reduce using rule 7 (module -> MODULE WORD block .)
    DIVIDER         reduce using rule 7 (module -> MODULE WORD block .)
    $end            reduce using rule 7 (module -> MODULE WORD block .)
    RBRACE          reduce using rule 7 (module -> MODULE WORD block .)
    COLON           reduce using rule 7 (module -> MODULE WORD block .)
    QUESTION        reduce using rule 7 (module -> MODULE WORD block .)
    RBRACKET        reduce using rule 7 (module -> MODULE WORD block .)
    COMMA           reduce using rule 7 (module -> MODULE WORD block .)
    RPAREN          reduce using rule 7 (module -> MODULE WORD block .)


state 137

    (94) var -> WORD .

    POINT           reduce using rule 94 (var -> WORD .)
    COLON           reduce using rule 94 (var -> WORD .)
    LBRACKET        reduce using rule 94 (var -> WORD .)
    DIVIDER         reduce using rule 94 (var -> WORD .)
    $end            reduce using rule 94 (var -> WORD .)
    QUESTION        reduce using rule 94 (var -> WORD .)
    RBRACE          reduce using rule 94 (var -> WORD .)
    RBRACKET        reduce using rule 94 (var -> WORD .)
    COMMA           reduce using rule 94 (var -> WORD .)
    RPAREN          reduce using rule 94 (var -> WORD .)


state 138

    (98) varvar -> varvar POINT var .

    POINT           reduce using rule 98 (varvar -> varvar POINT var .)
    LBRACKET        reduce using rule 98 (varvar -> varvar POINT var .)
    DIVIDER         reduce using rule 98 (varvar -> varvar POINT var .)
    $end            reduce using rule 98 (varvar -> varvar POINT var .)
    RBRACE          reduce using rule 98 (varvar -> varvar POINT var .)
    COLON           reduce using rule 98 (varvar -> varvar POINT var .)
    QUESTION        reduce using rule 98 (varvar -> varvar POINT var .)
    RBRACKET        reduce using rule 98 (varvar -> varvar POINT var .)
    COMMA           reduce using rule 98 (varvar -> varvar POINT var .)
    RPAREN          reduce using rule 98 (varvar -> varvar POINT var .)


state 139

    (111) alg1 -> alg1 DIVMUL alg2 .
    (113) alg2 -> alg2 . DPROD alg3

    DIVMUL          reduce using rule 111 (alg1 -> alg1 DIVMUL alg2 .)
    PLUSMINUS       reduce using rule 111 (alg1 -> alg1 DIVMUL alg2 .)
    COLON           reduce using rule 111 (alg1 -> alg1 DIVMUL alg2 .)
    LBRACKET        reduce using rule 111 (alg1 -> alg1 DIVMUL alg2 .)
    RBRACE          reduce using rule 111 (alg1 -> alg1 DIVMUL alg2 .)
    DIVIDER         reduce using rule 111 (alg1 -> alg1 DIVMUL alg2 .)
    $end            reduce using rule 111 (alg1 -> alg1 DIVMUL alg2 .)
    QUESTION        reduce using rule 111 (alg1 -> alg1 DIVMUL alg2 .)
    RBRACKET        reduce using rule 111 (alg1 -> alg1 DIVMUL alg2 .)
    COMMA           reduce using rule 111 (alg1 -> alg1 DIVMUL alg2 .)
    RPAREN          reduce using rule 111 (alg1 -> alg1 DIVMUL alg2 .)
    DPROD           shift and go to state 130


state 140

    (16) if -> IF expr QUESTION . expr COLON expr
    (45) expr -> . expralg
    (46) expr -> . parttree
    (47) expr -> . alg0
    (48) expr -> . print
    (49) expr -> . varvar
    (50) expr -> . variables
    (51) expr -> . python
    (52) expr -> . execfile
    (53) expr -> . break
    (54) expr -> . curfile
    (55) expr -> . exectext
    (56) expr -> . equal
    (57) expr -> . dequal
    (58) expr -> . element
    (59) expr -> . mlist
    (60) expr -> . evaluate
    (61) expr -> . yield
    (62) expr -> . repeat
    (63) expr -> . pass
    (64) expr -> . dict
    (65) expr -> . return
    (66) expr -> . modules
    (67) expr -> . exfiles
    (68) expr -> . input
    (69) expralg -> . term
    (70) expralg -> . abspath
    (71) expralg -> . invrelpath
    (72) expralg -> . relpath
    (73) expralg -> . relpathbase
    (74) expralg -> . func
    (75) expralg -> . block
    (76) expralg -> . list
    (37) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (83) python -> . PYTHON str
    (84) execfile -> . EXECFILE expr
    (36) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (42) equal -> . WORD EQUALS expr
    (43) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON block
    (85) evaluate -> . EVALUATE expr
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (77) return -> . RETURN expr
    (19) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (18) input -> . INPUT
    (78) term -> . str
    (79) term -> . float
    (80) term -> . int
    (81) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (21) func -> . WORD LPAREN args RPAREN block
    (22) func -> . WORD LPAREN args RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (34) list -> . LBRACKET comms RBRACKET
    (35) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (94) var -> . WORD
    (91) str -> . STRING
    (89) float -> . FLOAT
    (82) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    AMPERSAND       shift and go to state 62
    PLUSMINUS       shift and go to state 68
    PRINT           shift and go to state 53
    VARIABLES       shift and go to state 65
    PYTHON          shift and go to state 59
    EXECFILE        shift and go to state 83
    BREAK           shift and go to state 90
    CURFILE         shift and go to state 3
    EXECTEXT        shift and go to state 78
    WORD            shift and go to state 97
    MLIST           shift and go to state 64
    EVALUATE        shift and go to state 50
    YIELD           shift and go to state 45
    REPEAT          shift and go to state 81
    PASS            shift and go to state 42
    LBRACE          shift and go to state 43
    RETURN          shift and go to state 28
    MODULES         shift and go to state 47
    EXFILES         shift and go to state 74
    INPUT           shift and go to state 79
    ABSPATH         shift and go to state 20
    INVRELPATH      shift and go to state 49
    RELPATH         shift and go to state 36
    RELPATHBASE     shift and go to state 52
    LBRACKET        shift and go to state 27
    STRING          shift and go to state 73
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 39

    python                         shift and go to state 48
    var                            shift and go to state 95
    pass                           shift and go to state 4
    exfiles                        shift and go to state 7
    dequal                         shift and go to state 6
    alg0                           shift and go to state 38
    varvar                         shift and go to state 8
    alg1                           shift and go to state 9
    yield                          shift and go to state 12
    block                          shift and go to state 57
    term                           shift and go to state 14
    dict                           shift and go to state 15
    expr                           shift and go to state 160
    curfile                        shift and go to state 17
    input                          shift and go to state 18
    float                          shift and go to state 1
    exectext                       shift and go to state 13
    mlist                          shift and go to state 61
    return                         shift and go to state 26
    evaluate                       shift and go to state 23
    modules                        shift and go to state 67
    print                          shift and go to state 24
    relpathbase                    shift and go to state 58
    func                           shift and go to state 70
    alg3                           shift and go to state 66
    str                            shift and go to state 75
    repeat                         shift and go to state 30
    alg2                           shift and go to state 77
    list                           shift and go to state 33
    invrelpath                     shift and go to state 80
    abspath                        shift and go to state 55
    break                          shift and go to state 82
    execfile                       shift and go to state 85
    element                        shift and go to state 86
    expralg                        shift and go to state 40
    int                            shift and go to state 41
    relpath                        shift and go to state 88
    variables                      shift and go to state 44
    parttree                       shift and go to state 89
    equal                          shift and go to state 46

state 141

    (15) declare -> expr COLON expr .
    (93) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    RBRACE          reduce using rule 15 (declare -> expr COLON expr .)
    COMMA           reduce using rule 15 (declare -> expr COLON expr .)
    DIVIDER         reduce using rule 15 (declare -> expr COLON expr .)
    $end            reduce using rule 15 (declare -> expr COLON expr .)
    COLON           reduce using rule 15 (declare -> expr COLON expr .)
    QUESTION        reduce using rule 15 (declare -> expr COLON expr .)
    RBRACKET        reduce using rule 15 (declare -> expr COLON expr .)
    RPAREN          reduce using rule 15 (declare -> expr COLON expr .)
    LBRACKET        shift and go to state 99

  ! LBRACKET        [ reduce using rule 15 (declare -> expr COLON expr .) ]


state 142

    (93) element -> expr LBRACKET expr . RBRACKET
    (93) element -> expr . LBRACKET expr RBRACKET

    RBRACKET        shift and go to state 161
    LBRACKET        shift and go to state 99


state 143

    (39) args -> comms .
    (41) comms -> comms . COMMA expr

    RPAREN          reduce using rule 39 (args -> comms .)
    COMMA           shift and go to state 149


state 144

    (21) func -> WORD LPAREN args . RPAREN block
    (22) func -> WORD LPAREN args . RPAREN

    RPAREN          shift and go to state 162


state 145

    (10) define -> WORD DEFOP expr .
    (93) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    DIVIDER         reduce using rule 10 (define -> WORD DEFOP expr .)
    $end            reduce using rule 10 (define -> WORD DEFOP expr .)
    RBRACE          reduce using rule 10 (define -> WORD DEFOP expr .)
    COLON           reduce using rule 10 (define -> WORD DEFOP expr .)
    QUESTION        reduce using rule 10 (define -> WORD DEFOP expr .)
    RBRACKET        reduce using rule 10 (define -> WORD DEFOP expr .)
    COMMA           reduce using rule 10 (define -> WORD DEFOP expr .)
    RPAREN          reduce using rule 10 (define -> WORD DEFOP expr .)
    LBRACKET        shift and go to state 99

  ! LBRACKET        [ reduce using rule 10 (define -> WORD DEFOP expr .) ]


state 146

    (42) equal -> WORD EQUALS expr .
    (93) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    DIVIDER         reduce using rule 42 (equal -> WORD EQUALS expr .)
    $end            reduce using rule 42 (equal -> WORD EQUALS expr .)
    RBRACE          reduce using rule 42 (equal -> WORD EQUALS expr .)
    COLON           reduce using rule 42 (equal -> WORD EQUALS expr .)
    QUESTION        reduce using rule 42 (equal -> WORD EQUALS expr .)
    RBRACKET        reduce using rule 42 (equal -> WORD EQUALS expr .)
    COMMA           reduce using rule 42 (equal -> WORD EQUALS expr .)
    RPAREN          reduce using rule 42 (equal -> WORD EQUALS expr .)
    LBRACKET        shift and go to state 99

  ! LBRACKET        [ reduce using rule 42 (equal -> WORD EQUALS expr .) ]


state 147

    (9) define -> DEFINE WORD expr .
    (93) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    DIVIDER         reduce using rule 9 (define -> DEFINE WORD expr .)
    $end            reduce using rule 9 (define -> DEFINE WORD expr .)
    RBRACE          reduce using rule 9 (define -> DEFINE WORD expr .)
    COLON           reduce using rule 9 (define -> DEFINE WORD expr .)
    QUESTION        reduce using rule 9 (define -> DEFINE WORD expr .)
    RBRACKET        reduce using rule 9 (define -> DEFINE WORD expr .)
    COMMA           reduce using rule 9 (define -> DEFINE WORD expr .)
    RPAREN          reduce using rule 9 (define -> DEFINE WORD expr .)
    LBRACKET        shift and go to state 99

  ! LBRACKET        [ reduce using rule 9 (define -> DEFINE WORD expr .) ]


state 148

    (34) list -> LBRACKET comms RBRACKET .

    QUESTION        reduce using rule 34 (list -> LBRACKET comms RBRACKET .)
    LBRACKET        reduce using rule 34 (list -> LBRACKET comms RBRACKET .)
    DPROD           reduce using rule 34 (list -> LBRACKET comms RBRACKET .)
    DIVMUL          reduce using rule 34 (list -> LBRACKET comms RBRACKET .)
    PLUSMINUS       reduce using rule 34 (list -> LBRACKET comms RBRACKET .)
    COLON           reduce using rule 34 (list -> LBRACKET comms RBRACKET .)
    DIVIDER         reduce using rule 34 (list -> LBRACKET comms RBRACKET .)
    $end            reduce using rule 34 (list -> LBRACKET comms RBRACKET .)
    RBRACE          reduce using rule 34 (list -> LBRACKET comms RBRACKET .)
    RBRACKET        reduce using rule 34 (list -> LBRACKET comms RBRACKET .)
    COMMA           reduce using rule 34 (list -> LBRACKET comms RBRACKET .)
    RPAREN          reduce using rule 34 (list -> LBRACKET comms RBRACKET .)


state 149

    (41) comms -> comms COMMA . expr
    (45) expr -> . expralg
    (46) expr -> . parttree
    (47) expr -> . alg0
    (48) expr -> . print
    (49) expr -> . varvar
    (50) expr -> . variables
    (51) expr -> . python
    (52) expr -> . execfile
    (53) expr -> . break
    (54) expr -> . curfile
    (55) expr -> . exectext
    (56) expr -> . equal
    (57) expr -> . dequal
    (58) expr -> . element
    (59) expr -> . mlist
    (60) expr -> . evaluate
    (61) expr -> . yield
    (62) expr -> . repeat
    (63) expr -> . pass
    (64) expr -> . dict
    (65) expr -> . return
    (66) expr -> . modules
    (67) expr -> . exfiles
    (68) expr -> . input
    (69) expralg -> . term
    (70) expralg -> . abspath
    (71) expralg -> . invrelpath
    (72) expralg -> . relpath
    (73) expralg -> . relpathbase
    (74) expralg -> . func
    (75) expralg -> . block
    (76) expralg -> . list
    (37) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (83) python -> . PYTHON str
    (84) execfile -> . EXECFILE expr
    (36) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (42) equal -> . WORD EQUALS expr
    (43) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON block
    (85) evaluate -> . EVALUATE expr
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (77) return -> . RETURN expr
    (19) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (18) input -> . INPUT
    (78) term -> . str
    (79) term -> . float
    (80) term -> . int
    (81) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (21) func -> . WORD LPAREN args RPAREN block
    (22) func -> . WORD LPAREN args RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (34) list -> . LBRACKET comms RBRACKET
    (35) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (94) var -> . WORD
    (91) str -> . STRING
    (89) float -> . FLOAT
    (82) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    AMPERSAND       shift and go to state 62
    PLUSMINUS       shift and go to state 68
    PRINT           shift and go to state 53
    VARIABLES       shift and go to state 65
    PYTHON          shift and go to state 59
    EXECFILE        shift and go to state 83
    BREAK           shift and go to state 90
    CURFILE         shift and go to state 3
    EXECTEXT        shift and go to state 78
    WORD            shift and go to state 97
    MLIST           shift and go to state 64
    EVALUATE        shift and go to state 50
    YIELD           shift and go to state 45
    REPEAT          shift and go to state 81
    PASS            shift and go to state 42
    LBRACE          shift and go to state 43
    RETURN          shift and go to state 28
    MODULES         shift and go to state 47
    EXFILES         shift and go to state 74
    INPUT           shift and go to state 79
    ABSPATH         shift and go to state 20
    INVRELPATH      shift and go to state 49
    RELPATH         shift and go to state 36
    RELPATHBASE     shift and go to state 52
    LBRACKET        shift and go to state 27
    STRING          shift and go to state 73
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 39

    python                         shift and go to state 48
    var                            shift and go to state 95
    pass                           shift and go to state 4
    exfiles                        shift and go to state 7
    dequal                         shift and go to state 6
    alg0                           shift and go to state 38
    varvar                         shift and go to state 8
    alg1                           shift and go to state 9
    yield                          shift and go to state 12
    block                          shift and go to state 57
    term                           shift and go to state 14
    dict                           shift and go to state 15
    expr                           shift and go to state 163
    curfile                        shift and go to state 17
    input                          shift and go to state 18
    float                          shift and go to state 1
    exectext                       shift and go to state 13
    mlist                          shift and go to state 61
    return                         shift and go to state 26
    evaluate                       shift and go to state 23
    modules                        shift and go to state 67
    print                          shift and go to state 24
    relpathbase                    shift and go to state 58
    func                           shift and go to state 70
    alg3                           shift and go to state 66
    str                            shift and go to state 75
    repeat                         shift and go to state 30
    alg2                           shift and go to state 77
    list                           shift and go to state 33
    invrelpath                     shift and go to state 80
    abspath                        shift and go to state 55
    break                          shift and go to state 82
    execfile                       shift and go to state 85
    element                        shift and go to state 86
    expralg                        shift and go to state 40
    int                            shift and go to state 41
    relpath                        shift and go to state 88
    variables                      shift and go to state 44
    parttree                       shift and go to state 89
    equal                          shift and go to state 46

state 150

    (44) application -> APPLICATION WORD block .

    RBRACE          reduce using rule 44 (application -> APPLICATION WORD block .)
    DIVIDER         reduce using rule 44 (application -> APPLICATION WORD block .)
    $end            reduce using rule 44 (application -> APPLICATION WORD block .)
    LBRACKET        reduce using rule 44 (application -> APPLICATION WORD block .)
    COLON           reduce using rule 44 (application -> APPLICATION WORD block .)
    QUESTION        reduce using rule 44 (application -> APPLICATION WORD block .)
    RBRACKET        reduce using rule 44 (application -> APPLICATION WORD block .)
    COMMA           reduce using rule 44 (application -> APPLICATION WORD block .)
    RPAREN          reduce using rule 44 (application -> APPLICATION WORD block .)


state 151

    (3) inblock -> inblock divider metaexpr .

    RBRACE          reduce using rule 3 (inblock -> inblock divider metaexpr .)
    DIVIDER         reduce using rule 3 (inblock -> inblock divider metaexpr .)
    $end            reduce using rule 3 (inblock -> inblock divider metaexpr .)


state 152

    (8) deffunc -> DEFFUNC WORD LPAREN . args RPAREN block
    (38) args -> .
    (39) args -> . comms
    (40) comms -> . expr
    (41) comms -> . comms COMMA expr
    (45) expr -> . expralg
    (46) expr -> . parttree
    (47) expr -> . alg0
    (48) expr -> . print
    (49) expr -> . varvar
    (50) expr -> . variables
    (51) expr -> . python
    (52) expr -> . execfile
    (53) expr -> . break
    (54) expr -> . curfile
    (55) expr -> . exectext
    (56) expr -> . equal
    (57) expr -> . dequal
    (58) expr -> . element
    (59) expr -> . mlist
    (60) expr -> . evaluate
    (61) expr -> . yield
    (62) expr -> . repeat
    (63) expr -> . pass
    (64) expr -> . dict
    (65) expr -> . return
    (66) expr -> . modules
    (67) expr -> . exfiles
    (68) expr -> . input
    (69) expralg -> . term
    (70) expralg -> . abspath
    (71) expralg -> . invrelpath
    (72) expralg -> . relpath
    (73) expralg -> . relpathbase
    (74) expralg -> . func
    (75) expralg -> . block
    (76) expralg -> . list
    (37) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (83) python -> . PYTHON str
    (84) execfile -> . EXECFILE expr
    (36) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (42) equal -> . WORD EQUALS expr
    (43) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON block
    (85) evaluate -> . EVALUATE expr
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (77) return -> . RETURN expr
    (19) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (18) input -> . INPUT
    (78) term -> . str
    (79) term -> . float
    (80) term -> . int
    (81) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (21) func -> . WORD LPAREN args RPAREN block
    (22) func -> . WORD LPAREN args RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (34) list -> . LBRACKET comms RBRACKET
    (35) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (94) var -> . WORD
    (91) str -> . STRING
    (89) float -> . FLOAT
    (82) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    RPAREN          reduce using rule 38 (args -> .)
    AMPERSAND       shift and go to state 62
    PLUSMINUS       shift and go to state 68
    PRINT           shift and go to state 53
    VARIABLES       shift and go to state 65
    PYTHON          shift and go to state 59
    EXECFILE        shift and go to state 83
    BREAK           shift and go to state 90
    CURFILE         shift and go to state 3
    EXECTEXT        shift and go to state 78
    WORD            shift and go to state 97
    MLIST           shift and go to state 64
    EVALUATE        shift and go to state 50
    YIELD           shift and go to state 45
    REPEAT          shift and go to state 81
    PASS            shift and go to state 42
    LBRACE          shift and go to state 43
    RETURN          shift and go to state 28
    MODULES         shift and go to state 47
    EXFILES         shift and go to state 74
    INPUT           shift and go to state 79
    ABSPATH         shift and go to state 20
    INVRELPATH      shift and go to state 49
    RELPATH         shift and go to state 36
    RELPATHBASE     shift and go to state 52
    LBRACKET        shift and go to state 27
    STRING          shift and go to state 73
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 39

    python                         shift and go to state 48
    var                            shift and go to state 95
    comms                          shift and go to state 143
    pass                           shift and go to state 4
    exfiles                        shift and go to state 7
    dequal                         shift and go to state 6
    alg0                           shift and go to state 38
    parttree                       shift and go to state 89
    alg1                           shift and go to state 9
    yield                          shift and go to state 12
    args                           shift and go to state 164
    exectext                       shift and go to state 13
    term                           shift and go to state 14
    dict                           shift and go to state 15
    expr                           shift and go to state 107
    curfile                        shift and go to state 17
    input                          shift and go to state 18
    float                          shift and go to state 1
    block                          shift and go to state 57
    mlist                          shift and go to state 61
    return                         shift and go to state 26
    evaluate                       shift and go to state 23
    modules                        shift and go to state 67
    print                          shift and go to state 24
    relpathbase                    shift and go to state 58
    func                           shift and go to state 70
    varvar                         shift and go to state 8
    alg3                           shift and go to state 66
    str                            shift and go to state 75
    repeat                         shift and go to state 30
    alg2                           shift and go to state 77
    list                           shift and go to state 33
    invrelpath                     shift and go to state 80
    abspath                        shift and go to state 55
    break                          shift and go to state 82
    execfile                       shift and go to state 85
    element                        shift and go to state 86
    expralg                        shift and go to state 40
    int                            shift and go to state 41
    relpath                        shift and go to state 88
    variables                      shift and go to state 44
    equal                          shift and go to state 46

state 153

    (108) alg0 -> alg0 PLUSMINUS alg1 .
    (111) alg1 -> alg1 . DIVMUL alg2

    PLUSMINUS       reduce using rule 108 (alg0 -> alg0 PLUSMINUS alg1 .)
    LBRACKET        reduce using rule 108 (alg0 -> alg0 PLUSMINUS alg1 .)
    DIVIDER         reduce using rule 108 (alg0 -> alg0 PLUSMINUS alg1 .)
    $end            reduce using rule 108 (alg0 -> alg0 PLUSMINUS alg1 .)
    RBRACE          reduce using rule 108 (alg0 -> alg0 PLUSMINUS alg1 .)
    COLON           reduce using rule 108 (alg0 -> alg0 PLUSMINUS alg1 .)
    QUESTION        reduce using rule 108 (alg0 -> alg0 PLUSMINUS alg1 .)
    RBRACKET        reduce using rule 108 (alg0 -> alg0 PLUSMINUS alg1 .)
    COMMA           reduce using rule 108 (alg0 -> alg0 PLUSMINUS alg1 .)
    RPAREN          reduce using rule 108 (alg0 -> alg0 PLUSMINUS alg1 .)
    DIVMUL          shift and go to state 94


state 154

    (1) block -> LBRACE inblock RBRACE .

    LBRACKET        reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    DIVIDER         reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    $end            reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    RBRACE          reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    COLON           reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    QUESTION        reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    RBRACKET        reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    COMMA           reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    RPAREN          reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    DPROD           reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    DIVMUL          reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    PLUSMINUS       reduce using rule 1 (block -> LBRACE inblock RBRACE .)


state 155

    (11) dict -> LBRACE declares RBRACE .

    LBRACKET        reduce using rule 11 (dict -> LBRACE declares RBRACE .)
    DIVIDER         reduce using rule 11 (dict -> LBRACE declares RBRACE .)
    $end            reduce using rule 11 (dict -> LBRACE declares RBRACE .)
    RBRACE          reduce using rule 11 (dict -> LBRACE declares RBRACE .)
    COLON           reduce using rule 11 (dict -> LBRACE declares RBRACE .)
    QUESTION        reduce using rule 11 (dict -> LBRACE declares RBRACE .)
    RBRACKET        reduce using rule 11 (dict -> LBRACE declares RBRACE .)
    COMMA           reduce using rule 11 (dict -> LBRACE declares RBRACE .)
    RPAREN          reduce using rule 11 (dict -> LBRACE declares RBRACE .)


state 156

    (14) declares -> declares COMMA . declare
    (15) declare -> . expr COLON expr
    (45) expr -> . expralg
    (46) expr -> . parttree
    (47) expr -> . alg0
    (48) expr -> . print
    (49) expr -> . varvar
    (50) expr -> . variables
    (51) expr -> . python
    (52) expr -> . execfile
    (53) expr -> . break
    (54) expr -> . curfile
    (55) expr -> . exectext
    (56) expr -> . equal
    (57) expr -> . dequal
    (58) expr -> . element
    (59) expr -> . mlist
    (60) expr -> . evaluate
    (61) expr -> . yield
    (62) expr -> . repeat
    (63) expr -> . pass
    (64) expr -> . dict
    (65) expr -> . return
    (66) expr -> . modules
    (67) expr -> . exfiles
    (68) expr -> . input
    (69) expralg -> . term
    (70) expralg -> . abspath
    (71) expralg -> . invrelpath
    (72) expralg -> . relpath
    (73) expralg -> . relpathbase
    (74) expralg -> . func
    (75) expralg -> . block
    (76) expralg -> . list
    (37) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (83) python -> . PYTHON str
    (84) execfile -> . EXECFILE expr
    (36) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (42) equal -> . WORD EQUALS expr
    (43) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON block
    (85) evaluate -> . EVALUATE expr
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (77) return -> . RETURN expr
    (19) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (18) input -> . INPUT
    (78) term -> . str
    (79) term -> . float
    (80) term -> . int
    (81) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (21) func -> . WORD LPAREN args RPAREN block
    (22) func -> . WORD LPAREN args RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (34) list -> . LBRACKET comms RBRACKET
    (35) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (94) var -> . WORD
    (91) str -> . STRING
    (89) float -> . FLOAT
    (82) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    AMPERSAND       shift and go to state 62
    PLUSMINUS       shift and go to state 68
    PRINT           shift and go to state 53
    VARIABLES       shift and go to state 65
    PYTHON          shift and go to state 59
    EXECFILE        shift and go to state 83
    BREAK           shift and go to state 90
    CURFILE         shift and go to state 3
    EXECTEXT        shift and go to state 78
    WORD            shift and go to state 97
    MLIST           shift and go to state 64
    EVALUATE        shift and go to state 50
    YIELD           shift and go to state 45
    REPEAT          shift and go to state 81
    PASS            shift and go to state 42
    LBRACE          shift and go to state 43
    RETURN          shift and go to state 28
    MODULES         shift and go to state 47
    EXFILES         shift and go to state 74
    INPUT           shift and go to state 79
    ABSPATH         shift and go to state 20
    INVRELPATH      shift and go to state 49
    RELPATH         shift and go to state 36
    RELPATHBASE     shift and go to state 52
    LBRACKET        shift and go to state 27
    STRING          shift and go to state 73
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 39

    python                         shift and go to state 48
    var                            shift and go to state 95
    pass                           shift and go to state 4
    exfiles                        shift and go to state 7
    dequal                         shift and go to state 6
    alg0                           shift and go to state 38
    varvar                         shift and go to state 8
    alg1                           shift and go to state 9
    yield                          shift and go to state 12
    block                          shift and go to state 57
    term                           shift and go to state 14
    dict                           shift and go to state 15
    expr                           shift and go to state 165
    curfile                        shift and go to state 17
    input                          shift and go to state 18
    float                          shift and go to state 1
    exectext                       shift and go to state 13
    declare                        shift and go to state 166
    mlist                          shift and go to state 61
    return                         shift and go to state 26
    evaluate                       shift and go to state 23
    modules                        shift and go to state 67
    print                          shift and go to state 24
    relpathbase                    shift and go to state 58
    func                           shift and go to state 70
    alg3                           shift and go to state 66
    str                            shift and go to state 75
    repeat                         shift and go to state 30
    alg2                           shift and go to state 77
    list                           shift and go to state 33
    invrelpath                     shift and go to state 80
    abspath                        shift and go to state 55
    break                          shift and go to state 82
    execfile                       shift and go to state 85
    element                        shift and go to state 86
    expralg                        shift and go to state 40
    int                            shift and go to state 41
    relpath                        shift and go to state 88
    variables                      shift and go to state 44
    parttree                       shift and go to state 89
    equal                          shift and go to state 46

state 157

    (96) mlist -> MLIST COLON block .

    LBRACKET        reduce using rule 96 (mlist -> MLIST COLON block .)
    DIVIDER         reduce using rule 96 (mlist -> MLIST COLON block .)
    $end            reduce using rule 96 (mlist -> MLIST COLON block .)
    RBRACE          reduce using rule 96 (mlist -> MLIST COLON block .)
    COLON           reduce using rule 96 (mlist -> MLIST COLON block .)
    QUESTION        reduce using rule 96 (mlist -> MLIST COLON block .)
    RBRACKET        reduce using rule 96 (mlist -> MLIST COLON block .)
    COMMA           reduce using rule 96 (mlist -> MLIST COLON block .)
    RPAREN          reduce using rule 96 (mlist -> MLIST COLON block .)


state 158

    (113) alg2 -> alg2 DPROD alg3 .

    DPROD           reduce using rule 113 (alg2 -> alg2 DPROD alg3 .)
    DIVMUL          reduce using rule 113 (alg2 -> alg2 DPROD alg3 .)
    PLUSMINUS       reduce using rule 113 (alg2 -> alg2 DPROD alg3 .)
    COLON           reduce using rule 113 (alg2 -> alg2 DPROD alg3 .)
    LBRACKET        reduce using rule 113 (alg2 -> alg2 DPROD alg3 .)
    DIVIDER         reduce using rule 113 (alg2 -> alg2 DPROD alg3 .)
    $end            reduce using rule 113 (alg2 -> alg2 DPROD alg3 .)
    QUESTION        reduce using rule 113 (alg2 -> alg2 DPROD alg3 .)
    RBRACE          reduce using rule 113 (alg2 -> alg2 DPROD alg3 .)
    RBRACKET        reduce using rule 113 (alg2 -> alg2 DPROD alg3 .)
    COMMA           reduce using rule 113 (alg2 -> alg2 DPROD alg3 .)
    RPAREN          reduce using rule 113 (alg2 -> alg2 DPROD alg3 .)


state 159

    (43) dequal -> element EQUALS expr .
    (93) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    COLON           reduce using rule 43 (dequal -> element EQUALS expr .)
    DIVIDER         reduce using rule 43 (dequal -> element EQUALS expr .)
    $end            reduce using rule 43 (dequal -> element EQUALS expr .)
    RBRACE          reduce using rule 43 (dequal -> element EQUALS expr .)
    QUESTION        reduce using rule 43 (dequal -> element EQUALS expr .)
    RBRACKET        reduce using rule 43 (dequal -> element EQUALS expr .)
    COMMA           reduce using rule 43 (dequal -> element EQUALS expr .)
    RPAREN          reduce using rule 43 (dequal -> element EQUALS expr .)
    LBRACKET        shift and go to state 99

  ! LBRACKET        [ reduce using rule 43 (dequal -> element EQUALS expr .) ]


state 160

    (16) if -> IF expr QUESTION expr . COLON expr
    (93) element -> expr . LBRACKET expr RBRACKET

    COLON           shift and go to state 167
    LBRACKET        shift and go to state 99


state 161

    (93) element -> expr LBRACKET expr RBRACKET .

    EQUALS          reduce using rule 93 (element -> expr LBRACKET expr RBRACKET .)
    LBRACKET        reduce using rule 93 (element -> expr LBRACKET expr RBRACKET .)
    DIVIDER         reduce using rule 93 (element -> expr LBRACKET expr RBRACKET .)
    $end            reduce using rule 93 (element -> expr LBRACKET expr RBRACKET .)
    RBRACE          reduce using rule 93 (element -> expr LBRACKET expr RBRACKET .)
    COLON           reduce using rule 93 (element -> expr LBRACKET expr RBRACKET .)
    QUESTION        reduce using rule 93 (element -> expr LBRACKET expr RBRACKET .)
    RBRACKET        reduce using rule 93 (element -> expr LBRACKET expr RBRACKET .)
    COMMA           reduce using rule 93 (element -> expr LBRACKET expr RBRACKET .)
    RPAREN          reduce using rule 93 (element -> expr LBRACKET expr RBRACKET .)


state 162

    (21) func -> WORD LPAREN args RPAREN . block
    (22) func -> WORD LPAREN args RPAREN .
    (1) block -> . LBRACE inblock RBRACE

    LBRACKET        reduce using rule 22 (func -> WORD LPAREN args RPAREN .)
    DIVIDER         reduce using rule 22 (func -> WORD LPAREN args RPAREN .)
    $end            reduce using rule 22 (func -> WORD LPAREN args RPAREN .)
    RBRACE          reduce using rule 22 (func -> WORD LPAREN args RPAREN .)
    COLON           reduce using rule 22 (func -> WORD LPAREN args RPAREN .)
    QUESTION        reduce using rule 22 (func -> WORD LPAREN args RPAREN .)
    RBRACKET        reduce using rule 22 (func -> WORD LPAREN args RPAREN .)
    COMMA           reduce using rule 22 (func -> WORD LPAREN args RPAREN .)
    RPAREN          reduce using rule 22 (func -> WORD LPAREN args RPAREN .)
    DPROD           reduce using rule 22 (func -> WORD LPAREN args RPAREN .)
    DIVMUL          reduce using rule 22 (func -> WORD LPAREN args RPAREN .)
    PLUSMINUS       reduce using rule 22 (func -> WORD LPAREN args RPAREN .)
    LBRACE          shift and go to state 128

    block                          shift and go to state 168

state 163

    (41) comms -> comms COMMA expr .
    (93) element -> expr . LBRACKET expr RBRACKET

    COMMA           reduce using rule 41 (comms -> comms COMMA expr .)
    RPAREN          reduce using rule 41 (comms -> comms COMMA expr .)
    RBRACKET        reduce using rule 41 (comms -> comms COMMA expr .)
    LBRACKET        shift and go to state 99


state 164

    (8) deffunc -> DEFFUNC WORD LPAREN args . RPAREN block

    RPAREN          shift and go to state 169


state 165

    (15) declare -> expr . COLON expr
    (93) element -> expr . LBRACKET expr RBRACKET

    COLON           shift and go to state 98
    LBRACKET        shift and go to state 99


state 166

    (14) declares -> declares COMMA declare .

    RBRACE          reduce using rule 14 (declares -> declares COMMA declare .)
    COMMA           reduce using rule 14 (declares -> declares COMMA declare .)


state 167

    (16) if -> IF expr QUESTION expr COLON . expr
    (45) expr -> . expralg
    (46) expr -> . parttree
    (47) expr -> . alg0
    (48) expr -> . print
    (49) expr -> . varvar
    (50) expr -> . variables
    (51) expr -> . python
    (52) expr -> . execfile
    (53) expr -> . break
    (54) expr -> . curfile
    (55) expr -> . exectext
    (56) expr -> . equal
    (57) expr -> . dequal
    (58) expr -> . element
    (59) expr -> . mlist
    (60) expr -> . evaluate
    (61) expr -> . yield
    (62) expr -> . repeat
    (63) expr -> . pass
    (64) expr -> . dict
    (65) expr -> . return
    (66) expr -> . modules
    (67) expr -> . exfiles
    (68) expr -> . input
    (69) expralg -> . term
    (70) expralg -> . abspath
    (71) expralg -> . invrelpath
    (72) expralg -> . relpath
    (73) expralg -> . relpathbase
    (74) expralg -> . func
    (75) expralg -> . block
    (76) expralg -> . list
    (37) parttree -> . AMPERSAND metaexpr
    (107) alg0 -> . alg1
    (108) alg0 -> . alg0 PLUSMINUS alg1
    (109) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (97) varvar -> . var
    (98) varvar -> . varvar POINT var
    (95) variables -> . VARIABLES expr
    (83) python -> . PYTHON str
    (84) execfile -> . EXECFILE expr
    (36) break -> . BREAK
    (99) curfile -> . CURFILE
    (87) exectext -> . EXECTEXT expr
    (42) equal -> . WORD EQUALS expr
    (43) dequal -> . element EQUALS expr
    (93) element -> . expr LBRACKET expr RBRACKET
    (96) mlist -> . MLIST COLON block
    (85) evaluate -> . EVALUATE expr
    (90) yield -> . YIELD
    (92) repeat -> . REPEAT
    (104) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (77) return -> . RETURN expr
    (19) modules -> . MODULES
    (101) exfiles -> . EXFILES
    (18) input -> . INPUT
    (78) term -> . str
    (79) term -> . float
    (80) term -> . int
    (81) term -> . var
    (106) abspath -> . ABSPATH
    (105) invrelpath -> . INVRELPATH
    (100) relpath -> . RELPATH
    (102) relpathbase -> . RELPATHBASE
    (21) func -> . WORD LPAREN args RPAREN block
    (22) func -> . WORD LPAREN args RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (34) list -> . LBRACKET comms RBRACKET
    (35) list -> . LBRACKET RBRACKET
    (110) alg1 -> . alg2
    (111) alg1 -> . alg1 DIVMUL alg2
    (94) var -> . WORD
    (91) str -> . STRING
    (89) float -> . FLOAT
    (82) int -> . NUMBER
    (112) alg2 -> . alg3
    (113) alg2 -> . alg2 DPROD alg3
    (114) alg3 -> . expralg

    AMPERSAND       shift and go to state 62
    PLUSMINUS       shift and go to state 68
    PRINT           shift and go to state 53
    VARIABLES       shift and go to state 65
    PYTHON          shift and go to state 59
    EXECFILE        shift and go to state 83
    BREAK           shift and go to state 90
    CURFILE         shift and go to state 3
    EXECTEXT        shift and go to state 78
    WORD            shift and go to state 97
    MLIST           shift and go to state 64
    EVALUATE        shift and go to state 50
    YIELD           shift and go to state 45
    REPEAT          shift and go to state 81
    PASS            shift and go to state 42
    LBRACE          shift and go to state 43
    RETURN          shift and go to state 28
    MODULES         shift and go to state 47
    EXFILES         shift and go to state 74
    INPUT           shift and go to state 79
    ABSPATH         shift and go to state 20
    INVRELPATH      shift and go to state 49
    RELPATH         shift and go to state 36
    RELPATHBASE     shift and go to state 52
    LBRACKET        shift and go to state 27
    STRING          shift and go to state 73
    FLOAT           shift and go to state 32
    NUMBER          shift and go to state 39

    python                         shift and go to state 48
    var                            shift and go to state 95
    pass                           shift and go to state 4
    exfiles                        shift and go to state 7
    dequal                         shift and go to state 6
    alg0                           shift and go to state 38
    varvar                         shift and go to state 8
    alg1                           shift and go to state 9
    yield                          shift and go to state 12
    block                          shift and go to state 57
    term                           shift and go to state 14
    dict                           shift and go to state 15
    expr                           shift and go to state 170
    curfile                        shift and go to state 17
    input                          shift and go to state 18
    float                          shift and go to state 1
    exectext                       shift and go to state 13
    mlist                          shift and go to state 61
    return                         shift and go to state 26
    evaluate                       shift and go to state 23
    modules                        shift and go to state 67
    print                          shift and go to state 24
    relpathbase                    shift and go to state 58
    func                           shift and go to state 70
    alg3                           shift and go to state 66
    str                            shift and go to state 75
    repeat                         shift and go to state 30
    alg2                           shift and go to state 77
    list                           shift and go to state 33
    invrelpath                     shift and go to state 80
    abspath                        shift and go to state 55
    break                          shift and go to state 82
    execfile                       shift and go to state 85
    element                        shift and go to state 86
    expralg                        shift and go to state 40
    int                            shift and go to state 41
    relpath                        shift and go to state 88
    variables                      shift and go to state 44
    parttree                       shift and go to state 89
    equal                          shift and go to state 46

state 168

    (21) func -> WORD LPAREN args RPAREN block .

    LBRACKET        reduce using rule 21 (func -> WORD LPAREN args RPAREN block .)
    DIVIDER         reduce using rule 21 (func -> WORD LPAREN args RPAREN block .)
    $end            reduce using rule 21 (func -> WORD LPAREN args RPAREN block .)
    RBRACE          reduce using rule 21 (func -> WORD LPAREN args RPAREN block .)
    COLON           reduce using rule 21 (func -> WORD LPAREN args RPAREN block .)
    QUESTION        reduce using rule 21 (func -> WORD LPAREN args RPAREN block .)
    RBRACKET        reduce using rule 21 (func -> WORD LPAREN args RPAREN block .)
    COMMA           reduce using rule 21 (func -> WORD LPAREN args RPAREN block .)
    RPAREN          reduce using rule 21 (func -> WORD LPAREN args RPAREN block .)
    DPROD           reduce using rule 21 (func -> WORD LPAREN args RPAREN block .)
    DIVMUL          reduce using rule 21 (func -> WORD LPAREN args RPAREN block .)
    PLUSMINUS       reduce using rule 21 (func -> WORD LPAREN args RPAREN block .)


state 169

    (8) deffunc -> DEFFUNC WORD LPAREN args RPAREN . block
    (1) block -> . LBRACE inblock RBRACE

    LBRACE          shift and go to state 128

    block                          shift and go to state 171

state 170

    (16) if -> IF expr QUESTION expr COLON expr .
    (93) element -> expr . LBRACKET expr RBRACKET

  ! shift/reduce conflict for LBRACKET resolved as shift
    DIVIDER         reduce using rule 16 (if -> IF expr QUESTION expr COLON expr .)
    $end            reduce using rule 16 (if -> IF expr QUESTION expr COLON expr .)
    RBRACE          reduce using rule 16 (if -> IF expr QUESTION expr COLON expr .)
    COLON           reduce using rule 16 (if -> IF expr QUESTION expr COLON expr .)
    QUESTION        reduce using rule 16 (if -> IF expr QUESTION expr COLON expr .)
    RBRACKET        reduce using rule 16 (if -> IF expr QUESTION expr COLON expr .)
    COMMA           reduce using rule 16 (if -> IF expr QUESTION expr COLON expr .)
    RPAREN          reduce using rule 16 (if -> IF expr QUESTION expr COLON expr .)
    LBRACKET        shift and go to state 99

  ! LBRACKET        [ reduce using rule 16 (if -> IF expr QUESTION expr COLON expr .) ]


state 171

    (8) deffunc -> DEFFUNC WORD LPAREN args RPAREN block .

    RBRACE          reduce using rule 8 (deffunc -> DEFFUNC WORD LPAREN args RPAREN block .)
    DIVIDER         reduce using rule 8 (deffunc -> DEFFUNC WORD LPAREN args RPAREN block .)
    LBRACKET        reduce using rule 8 (deffunc -> DEFFUNC WORD LPAREN args RPAREN block .)
    $end            reduce using rule 8 (deffunc -> DEFFUNC WORD LPAREN args RPAREN block .)
    COLON           reduce using rule 8 (deffunc -> DEFFUNC WORD LPAREN args RPAREN block .)
    QUESTION        reduce using rule 8 (deffunc -> DEFFUNC WORD LPAREN args RPAREN block .)
    RBRACKET        reduce using rule 8 (deffunc -> DEFFUNC WORD LPAREN args RPAREN block .)
    COMMA           reduce using rule 8 (deffunc -> DEFFUNC WORD LPAREN args RPAREN block .)
    RPAREN          reduce using rule 8 (deffunc -> DEFFUNC WORD LPAREN args RPAREN block .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COLON in state 16 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 16 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 104 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 108 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 118 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 119 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 123 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 129 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 131 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 132 resolved as shift
WARNING: shift/reduce conflict for DIVIDER in state 134 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 135 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 141 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 145 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 146 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 147 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 159 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 170 resolved as shift
WARNING: reduce/reduce conflict in state 2 resolved using rule (term -> var)
WARNING: rejected rule (varvar -> var) in state 2
WARNING: reduce/reduce conflict in state 40 resolved using rule (expr -> expralg)
WARNING: rejected rule (alg3 -> expralg) in state 40
WARNING: reduce/reduce conflict in state 95 resolved using rule (term -> var)
WARNING: rejected rule (varvar -> var) in state 95
WARNING: reduce/reduce conflict in state 114 resolved using rule (declares -> declare)
WARNING: rejected rule (metaexpr -> declare) in state 114
