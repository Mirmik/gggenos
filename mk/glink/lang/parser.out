Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Unused terminals:

    APLICATION
    MPROD
    BINNUMBER
    DOUBLECOLON
    SEMI
    QUESTION
    NEWLINE
    IN
    WRONGSTRING
    OR
    HEXNUMBER

Grammar

Rule 0     S' -> inblock
Rule 1     block -> LBRACE inblock RBRACE
Rule 2     inblock -> metaexpr
Rule 3     inblock -> inblock divider metaexpr
Rule 4     inblock -> divider inblock
Rule 5     inblock -> inblock divider
Rule 6     print -> PRINT expr
Rule 7     module -> MODULE WORD block
Rule 8     deffunc -> DEFFUNC WORD LPAREN args RPAREN block
Rule 9     define -> DEFINE WORD expr
Rule 10    define -> WORD DEFOP expr
Rule 11    dict -> LBRACE declares RBRACE
Rule 12    dict -> LBRACE RBRACE
Rule 13    declares -> declare
Rule 14    declares -> declares COMMA declare
Rule 15    declare -> expr COLON expr
Rule 16    if -> IF LPAREN expr RPAREN expr
Rule 17    unless -> UNLESS LPAREN expr RPAREN expr
Rule 18    unless -> UNLESS LPAREN expr RPAREN expr ELSE expr
Rule 19    divider -> DIVIDER
Rule 20    input -> INPUT
Rule 21    modules -> MODULES
Rule 22    append -> var APPEND expr
Rule 23    func -> WORD LPAREN args RPAREN block
Rule 24    func -> WORD LPAREN args RPAREN
Rule 25    metaexpr -> expr
Rule 26    metaexpr -> deffunc
Rule 27    metaexpr -> module
Rule 28    metaexpr -> application
Rule 29    metaexpr -> declare
Rule 30    metaexpr -> append
Rule 31    metaexpr -> define
Rule 32    metaexpr -> execscan
Rule 33    metaexpr -> compile
Rule 34    metaexpr -> downlevel
Rule 35    metaexpr -> if
Rule 36    list -> LBRACKET comms RBRACKET
Rule 37    list -> LBRACKET RBRACKET
Rule 38    undervar -> AT undervar
Rule 39    undervar -> AT var
Rule 40    break -> BREAK
Rule 41    parttree -> AMPERSAND metaexpr
Rule 42    args -> <empty>
Rule 43    args -> comms
Rule 44    comms -> expr
Rule 45    comms -> comms COMMA expr
Rule 46    equal -> expr EQUALS expr
Rule 47    application -> APPLICATION WORD block
Rule 48    isdir -> ISDIR LPAREN expr RPAREN
Rule 49    listdir -> LISTDIR LPAREN expr RPAREN
Rule 50    expr -> expralg
Rule 51    expr -> parttree
Rule 52    expr -> alg0
Rule 53    expr -> print
Rule 54    expr -> varvar
Rule 55    expr -> variables
Rule 56    expr -> python
Rule 57    expr -> execfile
Rule 58    expr -> break
Rule 59    expr -> unless
Rule 60    expr -> curfile
Rule 61    expr -> exectext
Rule 62    expr -> equal
Rule 63    expr -> element
Rule 64    expr -> less
Rule 65    expr -> length
Rule 66    expr -> cycle
Rule 67    expr -> mlist
Rule 68    expr -> evaluate
Rule 69    expr -> yield
Rule 70    expr -> repeat
Rule 71    expr -> pass
Rule 72    expr -> dict
Rule 73    expr -> return
Rule 74    expr -> modules
Rule 75    expr -> exfiles
Rule 76    expr -> input
Rule 77    expralg -> term
Rule 78    expralg -> abspath
Rule 79    expralg -> invrelpath
Rule 80    expralg -> subst
Rule 81    expralg -> relpath
Rule 82    expralg -> relpathbase
Rule 83    expralg -> func
Rule 84    expralg -> listdir
Rule 85    expralg -> isdir
Rule 86    expralg -> block
Rule 87    expralg -> list
Rule 88    return -> RETURN expr
Rule 89    cycle -> CYCLE
Rule 90    term -> str
Rule 91    term -> float
Rule 92    term -> int
Rule 93    term -> var
Rule 94    term -> undervar
Rule 95    int -> NUMBER
Rule 96    python -> PYTHON str
Rule 97    execfile -> EXECFILE expr
Rule 98    evaluate -> EVALUATE expr
Rule 99    subst -> SUBST LPAREN expr RPAREN
Rule 100   execscan -> EXECSCAN expr
Rule 101   less -> expr LESS expr
Rule 102   length -> LENGTH LPAREN expr RPAREN
Rule 103   exectext -> EXECTEXT expr
Rule 104   downlevel -> DOWNLEVEL expr
Rule 105   float -> FLOAT
Rule 106   yield -> YIELD
Rule 107   str -> STRING
Rule 108   repeat -> REPEAT
Rule 109   element -> expr LBRACKET expr RBRACKET
Rule 110   var -> WORD
Rule 111   variables -> VARIABLES expr
Rule 112   mlist -> MLIST COLON block
Rule 113   varvar -> var
Rule 114   varvar -> varvar POINT var
Rule 115   curfile -> CURFILE
Rule 116   relpath -> RELPATH
Rule 117   exfiles -> EXFILES
Rule 118   relpathbase -> RELPATHBASE
Rule 119   compile -> COMPILE
Rule 120   pass -> PASS
Rule 121   invrelpath -> INVRELPATH
Rule 122   abspath -> ABSPATH
Rule 123   alg0 -> alg1
Rule 124   alg0 -> alg0 PLUSMINUS alg1
Rule 125   alg0 -> PLUSMINUS alg1
Rule 126   alg1 -> alg2
Rule 127   alg1 -> alg1 DIVMUL alg2
Rule 128   alg2 -> alg3
Rule 129   alg2 -> alg2 DPROD alg3
Rule 130   alg3 -> expralg

Terminals, with rules where they appear

ABSPATH              : 122
AMPERSAND            : 41
APLICATION           : 
APPEND               : 22
APPLICATION          : 47
AT                   : 38 39
BINNUMBER            : 
BREAK                : 40
COLON                : 15 112
COMMA                : 14 45
COMPILE              : 119
CURFILE              : 115
CYCLE                : 89
DEFFUNC              : 8
DEFINE               : 9
DEFOP                : 10
DIVIDER              : 19
DIVMUL               : 127
DOUBLECOLON          : 
DOWNLEVEL            : 104
DPROD                : 129
ELSE                 : 18
EQUALS               : 46
EVALUATE             : 98
EXECFILE             : 97
EXECSCAN             : 100
EXECTEXT             : 103
EXFILES              : 117
FLOAT                : 105
HEXNUMBER            : 
IF                   : 16
IN                   : 
INPUT                : 20
INVRELPATH           : 121
ISDIR                : 48
LBRACE               : 1 11 12
LBRACKET             : 36 37 109
LENGTH               : 102
LESS                 : 101
LISTDIR              : 49
LPAREN               : 8 16 17 18 23 24 48 49 99 102
MLIST                : 112
MODULE               : 7
MODULES              : 21
MPROD                : 
NEWLINE              : 
NUMBER               : 95
OR                   : 
PASS                 : 120
PLUSMINUS            : 124 125
POINT                : 114
PRINT                : 6
PYTHON               : 96
QUESTION             : 
RBRACE               : 1 11 12
RBRACKET             : 36 37 109
RELPATH              : 116
RELPATHBASE          : 118
REPEAT               : 108
RETURN               : 88
RPAREN               : 8 16 17 18 23 24 48 49 99 102
SEMI                 : 
STRING               : 107
SUBST                : 99
UNLESS               : 17 18
VARIABLES            : 111
WORD                 : 7 8 9 10 23 24 47 110
WRONGSTRING          : 
YIELD                : 106
error                : 

Nonterminals, with rules where they appear

abspath              : 78
alg0                 : 52 124
alg1                 : 123 124 125 127
alg2                 : 126 127 129
alg3                 : 128 129
append               : 30
application          : 28
args                 : 8 23 24
block                : 7 8 23 47 86 112
break                : 58
comms                : 36 43 45
compile              : 33
curfile              : 60
cycle                : 66
declare              : 13 14 29
declares             : 11 14
deffunc              : 26
define               : 31
dict                 : 72
divider              : 3 4 5
downlevel            : 34
element              : 63
equal                : 62
evaluate             : 68
execfile             : 57
execscan             : 32
exectext             : 61
exfiles              : 75
expr                 : 6 9 10 15 15 16 16 17 17 18 18 18 22 25 44 45 46 46 48 49 88 97 98 99 100 101 101 102 103 104 109 109 111
expralg              : 50 130
float                : 91
func                 : 83
if                   : 35
inblock              : 1 3 4 5 0
input                : 76
int                  : 92
invrelpath           : 79
isdir                : 85
length               : 65
less                 : 64
list                 : 87
listdir              : 84
metaexpr             : 2 3 41
mlist                : 67
module               : 27
modules              : 74
parttree             : 51
pass                 : 71
print                : 53
python               : 56
relpath              : 81
relpathbase          : 82
repeat               : 70
return               : 73
str                  : 90 96
subst                : 80
term                 : 77
undervar             : 38 94
unless               : 59
var                  : 22 39 93 113 114
variables            : 55
varvar               : 54 114
yield                : 69

Parsing method: LALR

state 0

    (0) S' -> . inblock
    (2) inblock -> . metaexpr
    (3) inblock -> . inblock divider metaexpr
    (4) inblock -> . divider inblock
    (5) inblock -> . inblock divider
    (25) metaexpr -> . expr
    (26) metaexpr -> . deffunc
    (27) metaexpr -> . module
    (28) metaexpr -> . application
    (29) metaexpr -> . declare
    (30) metaexpr -> . append
    (31) metaexpr -> . define
    (32) metaexpr -> . execscan
    (33) metaexpr -> . compile
    (34) metaexpr -> . downlevel
    (35) metaexpr -> . if
    (19) divider -> . DIVIDER
    (50) expr -> . expralg
    (51) expr -> . parttree
    (52) expr -> . alg0
    (53) expr -> . print
    (54) expr -> . varvar
    (55) expr -> . variables
    (56) expr -> . python
    (57) expr -> . execfile
    (58) expr -> . break
    (59) expr -> . unless
    (60) expr -> . curfile
    (61) expr -> . exectext
    (62) expr -> . equal
    (63) expr -> . element
    (64) expr -> . less
    (65) expr -> . length
    (66) expr -> . cycle
    (67) expr -> . mlist
    (68) expr -> . evaluate
    (69) expr -> . yield
    (70) expr -> . repeat
    (71) expr -> . pass
    (72) expr -> . dict
    (73) expr -> . return
    (74) expr -> . modules
    (75) expr -> . exfiles
    (76) expr -> . input
    (8) deffunc -> . DEFFUNC WORD LPAREN args RPAREN block
    (7) module -> . MODULE WORD block
    (47) application -> . APPLICATION WORD block
    (15) declare -> . expr COLON expr
    (22) append -> . var APPEND expr
    (9) define -> . DEFINE WORD expr
    (10) define -> . WORD DEFOP expr
    (100) execscan -> . EXECSCAN expr
    (119) compile -> . COMPILE
    (104) downlevel -> . DOWNLEVEL expr
    (16) if -> . IF LPAREN expr RPAREN expr
    (77) expralg -> . term
    (78) expralg -> . abspath
    (79) expralg -> . invrelpath
    (80) expralg -> . subst
    (81) expralg -> . relpath
    (82) expralg -> . relpathbase
    (83) expralg -> . func
    (84) expralg -> . listdir
    (85) expralg -> . isdir
    (86) expralg -> . block
    (87) expralg -> . list
    (41) parttree -> . AMPERSAND metaexpr
    (123) alg0 -> . alg1
    (124) alg0 -> . alg0 PLUSMINUS alg1
    (125) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (113) varvar -> . var
    (114) varvar -> . varvar POINT var
    (111) variables -> . VARIABLES expr
    (96) python -> . PYTHON str
    (97) execfile -> . EXECFILE expr
    (40) break -> . BREAK
    (17) unless -> . UNLESS LPAREN expr RPAREN expr
    (18) unless -> . UNLESS LPAREN expr RPAREN expr ELSE expr
    (115) curfile -> . CURFILE
    (103) exectext -> . EXECTEXT expr
    (46) equal -> . expr EQUALS expr
    (109) element -> . expr LBRACKET expr RBRACKET
    (101) less -> . expr LESS expr
    (102) length -> . LENGTH LPAREN expr RPAREN
    (89) cycle -> . CYCLE
    (112) mlist -> . MLIST COLON block
    (98) evaluate -> . EVALUATE expr
    (106) yield -> . YIELD
    (108) repeat -> . REPEAT
    (120) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (88) return -> . RETURN expr
    (21) modules -> . MODULES
    (117) exfiles -> . EXFILES
    (20) input -> . INPUT
    (110) var -> . WORD
    (90) term -> . str
    (91) term -> . float
    (92) term -> . int
    (93) term -> . var
    (94) term -> . undervar
    (122) abspath -> . ABSPATH
    (121) invrelpath -> . INVRELPATH
    (99) subst -> . SUBST LPAREN expr RPAREN
    (116) relpath -> . RELPATH
    (118) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN block
    (24) func -> . WORD LPAREN args RPAREN
    (49) listdir -> . LISTDIR LPAREN expr RPAREN
    (48) isdir -> . ISDIR LPAREN expr RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (126) alg1 -> . alg2
    (127) alg1 -> . alg1 DIVMUL alg2
    (107) str -> . STRING
    (105) float -> . FLOAT
    (95) int -> . NUMBER
    (38) undervar -> . AT undervar
    (39) undervar -> . AT var
    (128) alg2 -> . alg3
    (129) alg2 -> . alg2 DPROD alg3
    (130) alg3 -> . expralg

    DIVIDER         shift and go to state 38
    DEFFUNC         shift and go to state 59
    MODULE          shift and go to state 52
    APPLICATION     shift and go to state 75
    DEFINE          shift and go to state 67
    WORD            shift and go to state 77
    EXECSCAN        shift and go to state 46
    COMPILE         shift and go to state 72
    DOWNLEVEL       shift and go to state 29
    IF              shift and go to state 101
    AMPERSAND       shift and go to state 12
    PLUSMINUS       shift and go to state 69
    PRINT           shift and go to state 47
    VARIABLES       shift and go to state 55
    PYTHON          shift and go to state 57
    EXECFILE        shift and go to state 73
    BREAK           shift and go to state 82
    UNLESS          shift and go to state 74
    CURFILE         shift and go to state 88
    EXECTEXT        shift and go to state 39
    LENGTH          shift and go to state 7
    CYCLE           shift and go to state 43
    MLIST           shift and go to state 90
    EVALUATE        shift and go to state 26
    YIELD           shift and go to state 4
    REPEAT          shift and go to state 103
    PASS            shift and go to state 34
    LBRACE          shift and go to state 31
    RETURN          shift and go to state 54
    MODULES         shift and go to state 63
    EXFILES         shift and go to state 14
    INPUT           shift and go to state 95
    ABSPATH         shift and go to state 33
    INVRELPATH      shift and go to state 36
    SUBST           shift and go to state 102
    RELPATH         shift and go to state 25
    RELPATHBASE     shift and go to state 5
    LISTDIR         shift and go to state 30
    ISDIR           shift and go to state 51
    LBRACKET        shift and go to state 83
    STRING          shift and go to state 70
    FLOAT           shift and go to state 3
    NUMBER          shift and go to state 28
    AT              shift and go to state 56

    isdir                          shift and go to state 1
    metaexpr                       shift and go to state 61
    undervar                       shift and go to state 62
    alg1                           shift and go to state 6
    expralg                        shift and go to state 64
    curfile                        shift and go to state 35
    length                         shift and go to state 66
    parttree                       shift and go to state 10
    invrelpath                     shift and go to state 16
    float                          shift and go to state 8
    execfile                       shift and go to state 68
    less                           shift and go to state 9
    equal                          shift and go to state 84
    application                    shift and go to state 11
    subst                          shift and go to state 86
    pass                           shift and go to state 37
    element                        shift and go to state 13
    relpath                        shift and go to state 15
    modules                        shift and go to state 91
    break                          shift and go to state 17
    alg2                           shift and go to state 2
    list                           shift and go to state 23
    relpathbase                    shift and go to state 94
    alg3                           shift and go to state 19
    varvar                         shift and go to state 20
    expr                           shift and go to state 21
    return                         shift and go to state 65
    execscan                       shift and go to state 60
    str                            shift and go to state 78
    downlevel                      shift and go to state 79
    inblock                        shift and go to state 24
    unless                         shift and go to state 81
    exfiles                        shift and go to state 85
    func                           shift and go to state 50
    evaluate                       shift and go to state 92
    if                             shift and go to state 87
    int                            shift and go to state 32
    alg0                           shift and go to state 89
    declare                        shift and go to state 27
    compile                        shift and go to state 80
    define                         shift and go to state 40
    module                         shift and go to state 22
    exectext                       shift and go to state 41
    var                            shift and go to state 42
    listdir                        shift and go to state 44
    deffunc                        shift and go to state 93
    append                         shift and go to state 18
    input                          shift and go to state 48
    term                           shift and go to state 45
    variables                      shift and go to state 96
    print                          shift and go to state 49
    divider                        shift and go to state 104
    dict                           shift and go to state 98
    mlist                          shift and go to state 100
    block                          shift and go to state 76
    python                         shift and go to state 53
    cycle                          shift and go to state 97
    repeat                         shift and go to state 99
    yield                          shift and go to state 71
    abspath                        shift and go to state 58

state 1

    (85) expralg -> isdir .

    COLON           reduce using rule 85 (expralg -> isdir .)
    EQUALS          reduce using rule 85 (expralg -> isdir .)
    LBRACKET        reduce using rule 85 (expralg -> isdir .)
    LESS            reduce using rule 85 (expralg -> isdir .)
    DIVIDER         reduce using rule 85 (expralg -> isdir .)
    $end            reduce using rule 85 (expralg -> isdir .)
    RBRACE          reduce using rule 85 (expralg -> isdir .)
    RBRACKET        reduce using rule 85 (expralg -> isdir .)
    COMMA           reduce using rule 85 (expralg -> isdir .)
    RPAREN          reduce using rule 85 (expralg -> isdir .)
    ELSE            reduce using rule 85 (expralg -> isdir .)
    DPROD           reduce using rule 85 (expralg -> isdir .)
    DIVMUL          reduce using rule 85 (expralg -> isdir .)
    PLUSMINUS       reduce using rule 85 (expralg -> isdir .)


state 2

    (126) alg1 -> alg2 .
    (129) alg2 -> alg2 . DPROD alg3

    DIVMUL          reduce using rule 126 (alg1 -> alg2 .)
    PLUSMINUS       reduce using rule 126 (alg1 -> alg2 .)
    RPAREN          reduce using rule 126 (alg1 -> alg2 .)
    EQUALS          reduce using rule 126 (alg1 -> alg2 .)
    LBRACKET        reduce using rule 126 (alg1 -> alg2 .)
    LESS            reduce using rule 126 (alg1 -> alg2 .)
    COLON           reduce using rule 126 (alg1 -> alg2 .)
    DIVIDER         reduce using rule 126 (alg1 -> alg2 .)
    $end            reduce using rule 126 (alg1 -> alg2 .)
    RBRACE          reduce using rule 126 (alg1 -> alg2 .)
    RBRACKET        reduce using rule 126 (alg1 -> alg2 .)
    COMMA           reduce using rule 126 (alg1 -> alg2 .)
    ELSE            reduce using rule 126 (alg1 -> alg2 .)
    DPROD           shift and go to state 105


state 3

    (105) float -> FLOAT .

    RPAREN          reduce using rule 105 (float -> FLOAT .)
    EQUALS          reduce using rule 105 (float -> FLOAT .)
    LBRACKET        reduce using rule 105 (float -> FLOAT .)
    LESS            reduce using rule 105 (float -> FLOAT .)
    DPROD           reduce using rule 105 (float -> FLOAT .)
    DIVMUL          reduce using rule 105 (float -> FLOAT .)
    PLUSMINUS       reduce using rule 105 (float -> FLOAT .)
    RBRACKET        reduce using rule 105 (float -> FLOAT .)
    COMMA           reduce using rule 105 (float -> FLOAT .)
    COLON           reduce using rule 105 (float -> FLOAT .)
    DIVIDER         reduce using rule 105 (float -> FLOAT .)
    $end            reduce using rule 105 (float -> FLOAT .)
    RBRACE          reduce using rule 105 (float -> FLOAT .)
    ELSE            reduce using rule 105 (float -> FLOAT .)


state 4

    (106) yield -> YIELD .

    RPAREN          reduce using rule 106 (yield -> YIELD .)
    EQUALS          reduce using rule 106 (yield -> YIELD .)
    LBRACKET        reduce using rule 106 (yield -> YIELD .)
    LESS            reduce using rule 106 (yield -> YIELD .)
    COLON           reduce using rule 106 (yield -> YIELD .)
    DIVIDER         reduce using rule 106 (yield -> YIELD .)
    $end            reduce using rule 106 (yield -> YIELD .)
    RBRACE          reduce using rule 106 (yield -> YIELD .)
    RBRACKET        reduce using rule 106 (yield -> YIELD .)
    COMMA           reduce using rule 106 (yield -> YIELD .)
    ELSE            reduce using rule 106 (yield -> YIELD .)


state 5

    (118) relpathbase -> RELPATHBASE .

    RPAREN          reduce using rule 118 (relpathbase -> RELPATHBASE .)
    EQUALS          reduce using rule 118 (relpathbase -> RELPATHBASE .)
    LBRACKET        reduce using rule 118 (relpathbase -> RELPATHBASE .)
    LESS            reduce using rule 118 (relpathbase -> RELPATHBASE .)
    DPROD           reduce using rule 118 (relpathbase -> RELPATHBASE .)
    DIVMUL          reduce using rule 118 (relpathbase -> RELPATHBASE .)
    PLUSMINUS       reduce using rule 118 (relpathbase -> RELPATHBASE .)
    COLON           reduce using rule 118 (relpathbase -> RELPATHBASE .)
    DIVIDER         reduce using rule 118 (relpathbase -> RELPATHBASE .)
    $end            reduce using rule 118 (relpathbase -> RELPATHBASE .)
    RBRACE          reduce using rule 118 (relpathbase -> RELPATHBASE .)
    RBRACKET        reduce using rule 118 (relpathbase -> RELPATHBASE .)
    COMMA           reduce using rule 118 (relpathbase -> RELPATHBASE .)
    ELSE            reduce using rule 118 (relpathbase -> RELPATHBASE .)


state 6

    (123) alg0 -> alg1 .
    (127) alg1 -> alg1 . DIVMUL alg2

    PLUSMINUS       reduce using rule 123 (alg0 -> alg1 .)
    RPAREN          reduce using rule 123 (alg0 -> alg1 .)
    EQUALS          reduce using rule 123 (alg0 -> alg1 .)
    LBRACKET        reduce using rule 123 (alg0 -> alg1 .)
    LESS            reduce using rule 123 (alg0 -> alg1 .)
    COLON           reduce using rule 123 (alg0 -> alg1 .)
    DIVIDER         reduce using rule 123 (alg0 -> alg1 .)
    $end            reduce using rule 123 (alg0 -> alg1 .)
    RBRACE          reduce using rule 123 (alg0 -> alg1 .)
    RBRACKET        reduce using rule 123 (alg0 -> alg1 .)
    COMMA           reduce using rule 123 (alg0 -> alg1 .)
    ELSE            reduce using rule 123 (alg0 -> alg1 .)
    DIVMUL          shift and go to state 106


state 7

    (102) length -> LENGTH . LPAREN expr RPAREN

    LPAREN          shift and go to state 107


state 8

    (91) term -> float .

    COLON           reduce using rule 91 (term -> float .)
    EQUALS          reduce using rule 91 (term -> float .)
    LBRACKET        reduce using rule 91 (term -> float .)
    LESS            reduce using rule 91 (term -> float .)
    DIVIDER         reduce using rule 91 (term -> float .)
    $end            reduce using rule 91 (term -> float .)
    RBRACE          reduce using rule 91 (term -> float .)
    RBRACKET        reduce using rule 91 (term -> float .)
    COMMA           reduce using rule 91 (term -> float .)
    RPAREN          reduce using rule 91 (term -> float .)
    ELSE            reduce using rule 91 (term -> float .)
    DPROD           reduce using rule 91 (term -> float .)
    DIVMUL          reduce using rule 91 (term -> float .)
    PLUSMINUS       reduce using rule 91 (term -> float .)


state 9

    (64) expr -> less .

    EQUALS          reduce using rule 64 (expr -> less .)
    LBRACKET        reduce using rule 64 (expr -> less .)
    LESS            reduce using rule 64 (expr -> less .)
    RBRACKET        reduce using rule 64 (expr -> less .)
    COMMA           reduce using rule 64 (expr -> less .)
    RPAREN          reduce using rule 64 (expr -> less .)
    COLON           reduce using rule 64 (expr -> less .)
    DIVIDER         reduce using rule 64 (expr -> less .)
    $end            reduce using rule 64 (expr -> less .)
    RBRACE          reduce using rule 64 (expr -> less .)
    ELSE            reduce using rule 64 (expr -> less .)


state 10

    (51) expr -> parttree .

    EQUALS          reduce using rule 51 (expr -> parttree .)
    LBRACKET        reduce using rule 51 (expr -> parttree .)
    LESS            reduce using rule 51 (expr -> parttree .)
    RBRACKET        reduce using rule 51 (expr -> parttree .)
    COMMA           reduce using rule 51 (expr -> parttree .)
    RPAREN          reduce using rule 51 (expr -> parttree .)
    COLON           reduce using rule 51 (expr -> parttree .)
    DIVIDER         reduce using rule 51 (expr -> parttree .)
    $end            reduce using rule 51 (expr -> parttree .)
    RBRACE          reduce using rule 51 (expr -> parttree .)
    ELSE            reduce using rule 51 (expr -> parttree .)


state 11

    (28) metaexpr -> application .

    DIVIDER         reduce using rule 28 (metaexpr -> application .)
    $end            reduce using rule 28 (metaexpr -> application .)
    RBRACE          reduce using rule 28 (metaexpr -> application .)
    COLON           reduce using rule 28 (metaexpr -> application .)
    EQUALS          reduce using rule 28 (metaexpr -> application .)
    LBRACKET        reduce using rule 28 (metaexpr -> application .)
    LESS            reduce using rule 28 (metaexpr -> application .)
    RBRACKET        reduce using rule 28 (metaexpr -> application .)
    COMMA           reduce using rule 28 (metaexpr -> application .)
    RPAREN          reduce using rule 28 (metaexpr -> application .)
    ELSE            reduce using rule 28 (metaexpr -> application .)


state 12

    (41) parttree -> AMPERSAND . metaexpr
    (25) metaexpr -> . expr
    (26) metaexpr -> . deffunc
    (27) metaexpr -> . module
    (28) metaexpr -> . application
    (29) metaexpr -> . declare
    (30) metaexpr -> . append
    (31) metaexpr -> . define
    (32) metaexpr -> . execscan
    (33) metaexpr -> . compile
    (34) metaexpr -> . downlevel
    (35) metaexpr -> . if
    (50) expr -> . expralg
    (51) expr -> . parttree
    (52) expr -> . alg0
    (53) expr -> . print
    (54) expr -> . varvar
    (55) expr -> . variables
    (56) expr -> . python
    (57) expr -> . execfile
    (58) expr -> . break
    (59) expr -> . unless
    (60) expr -> . curfile
    (61) expr -> . exectext
    (62) expr -> . equal
    (63) expr -> . element
    (64) expr -> . less
    (65) expr -> . length
    (66) expr -> . cycle
    (67) expr -> . mlist
    (68) expr -> . evaluate
    (69) expr -> . yield
    (70) expr -> . repeat
    (71) expr -> . pass
    (72) expr -> . dict
    (73) expr -> . return
    (74) expr -> . modules
    (75) expr -> . exfiles
    (76) expr -> . input
    (8) deffunc -> . DEFFUNC WORD LPAREN args RPAREN block
    (7) module -> . MODULE WORD block
    (47) application -> . APPLICATION WORD block
    (15) declare -> . expr COLON expr
    (22) append -> . var APPEND expr
    (9) define -> . DEFINE WORD expr
    (10) define -> . WORD DEFOP expr
    (100) execscan -> . EXECSCAN expr
    (119) compile -> . COMPILE
    (104) downlevel -> . DOWNLEVEL expr
    (16) if -> . IF LPAREN expr RPAREN expr
    (77) expralg -> . term
    (78) expralg -> . abspath
    (79) expralg -> . invrelpath
    (80) expralg -> . subst
    (81) expralg -> . relpath
    (82) expralg -> . relpathbase
    (83) expralg -> . func
    (84) expralg -> . listdir
    (85) expralg -> . isdir
    (86) expralg -> . block
    (87) expralg -> . list
    (41) parttree -> . AMPERSAND metaexpr
    (123) alg0 -> . alg1
    (124) alg0 -> . alg0 PLUSMINUS alg1
    (125) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (113) varvar -> . var
    (114) varvar -> . varvar POINT var
    (111) variables -> . VARIABLES expr
    (96) python -> . PYTHON str
    (97) execfile -> . EXECFILE expr
    (40) break -> . BREAK
    (17) unless -> . UNLESS LPAREN expr RPAREN expr
    (18) unless -> . UNLESS LPAREN expr RPAREN expr ELSE expr
    (115) curfile -> . CURFILE
    (103) exectext -> . EXECTEXT expr
    (46) equal -> . expr EQUALS expr
    (109) element -> . expr LBRACKET expr RBRACKET
    (101) less -> . expr LESS expr
    (102) length -> . LENGTH LPAREN expr RPAREN
    (89) cycle -> . CYCLE
    (112) mlist -> . MLIST COLON block
    (98) evaluate -> . EVALUATE expr
    (106) yield -> . YIELD
    (108) repeat -> . REPEAT
    (120) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (88) return -> . RETURN expr
    (21) modules -> . MODULES
    (117) exfiles -> . EXFILES
    (20) input -> . INPUT
    (110) var -> . WORD
    (90) term -> . str
    (91) term -> . float
    (92) term -> . int
    (93) term -> . var
    (94) term -> . undervar
    (122) abspath -> . ABSPATH
    (121) invrelpath -> . INVRELPATH
    (99) subst -> . SUBST LPAREN expr RPAREN
    (116) relpath -> . RELPATH
    (118) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN block
    (24) func -> . WORD LPAREN args RPAREN
    (49) listdir -> . LISTDIR LPAREN expr RPAREN
    (48) isdir -> . ISDIR LPAREN expr RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (126) alg1 -> . alg2
    (127) alg1 -> . alg1 DIVMUL alg2
    (107) str -> . STRING
    (105) float -> . FLOAT
    (95) int -> . NUMBER
    (38) undervar -> . AT undervar
    (39) undervar -> . AT var
    (128) alg2 -> . alg3
    (129) alg2 -> . alg2 DPROD alg3
    (130) alg3 -> . expralg

    DEFFUNC         shift and go to state 59
    MODULE          shift and go to state 52
    APPLICATION     shift and go to state 75
    DEFINE          shift and go to state 67
    WORD            shift and go to state 77
    EXECSCAN        shift and go to state 46
    COMPILE         shift and go to state 72
    DOWNLEVEL       shift and go to state 29
    IF              shift and go to state 101
    AMPERSAND       shift and go to state 12
    PLUSMINUS       shift and go to state 69
    PRINT           shift and go to state 47
    VARIABLES       shift and go to state 55
    PYTHON          shift and go to state 57
    EXECFILE        shift and go to state 73
    BREAK           shift and go to state 82
    UNLESS          shift and go to state 74
    CURFILE         shift and go to state 88
    EXECTEXT        shift and go to state 39
    LENGTH          shift and go to state 7
    CYCLE           shift and go to state 43
    MLIST           shift and go to state 90
    EVALUATE        shift and go to state 26
    YIELD           shift and go to state 4
    REPEAT          shift and go to state 103
    PASS            shift and go to state 34
    LBRACE          shift and go to state 31
    RETURN          shift and go to state 54
    MODULES         shift and go to state 63
    EXFILES         shift and go to state 14
    INPUT           shift and go to state 95
    ABSPATH         shift and go to state 33
    INVRELPATH      shift and go to state 36
    SUBST           shift and go to state 102
    RELPATH         shift and go to state 25
    RELPATHBASE     shift and go to state 5
    LISTDIR         shift and go to state 30
    ISDIR           shift and go to state 51
    LBRACKET        shift and go to state 83
    STRING          shift and go to state 70
    FLOAT           shift and go to state 3
    NUMBER          shift and go to state 28
    AT              shift and go to state 56

    isdir                          shift and go to state 1
    metaexpr                       shift and go to state 108
    undervar                       shift and go to state 62
    alg1                           shift and go to state 6
    expralg                        shift and go to state 64
    curfile                        shift and go to state 35
    length                         shift and go to state 66
    invrelpath                     shift and go to state 16
    float                          shift and go to state 8
    parttree                       shift and go to state 10
    less                           shift and go to state 9
    equal                          shift and go to state 84
    application                    shift and go to state 11
    subst                          shift and go to state 86
    pass                           shift and go to state 37
    element                        shift and go to state 13
    relpath                        shift and go to state 15
    modules                        shift and go to state 91
    break                          shift and go to state 17
    alg2                           shift and go to state 2
    list                           shift and go to state 23
    relpathbase                    shift and go to state 94
    alg3                           shift and go to state 19
    varvar                         shift and go to state 20
    compile                        shift and go to state 80
    return                         shift and go to state 65
    execscan                       shift and go to state 60
    str                            shift and go to state 78
    downlevel                      shift and go to state 79
    unless                         shift and go to state 81
    exfiles                        shift and go to state 85
    evaluate                       shift and go to state 92
    if                             shift and go to state 87
    int                            shift and go to state 32
    alg0                           shift and go to state 89
    declare                        shift and go to state 27
    expr                           shift and go to state 21
    define                         shift and go to state 40
    module                         shift and go to state 22
    exectext                       shift and go to state 41
    var                            shift and go to state 42
    listdir                        shift and go to state 44
    deffunc                        shift and go to state 93
    append                         shift and go to state 18
    input                          shift and go to state 48
    term                           shift and go to state 45
    variables                      shift and go to state 96
    print                          shift and go to state 49
    func                           shift and go to state 50
    dict                           shift and go to state 98
    repeat                         shift and go to state 99
    mlist                          shift and go to state 100
    block                          shift and go to state 76
    python                         shift and go to state 53
    cycle                          shift and go to state 97
    execfile                       shift and go to state 68
    yield                          shift and go to state 71
    abspath                        shift and go to state 58

state 13

    (63) expr -> element .

    EQUALS          reduce using rule 63 (expr -> element .)
    LBRACKET        reduce using rule 63 (expr -> element .)
    LESS            reduce using rule 63 (expr -> element .)
    RBRACKET        reduce using rule 63 (expr -> element .)
    COMMA           reduce using rule 63 (expr -> element .)
    RPAREN          reduce using rule 63 (expr -> element .)
    COLON           reduce using rule 63 (expr -> element .)
    DIVIDER         reduce using rule 63 (expr -> element .)
    $end            reduce using rule 63 (expr -> element .)
    RBRACE          reduce using rule 63 (expr -> element .)
    ELSE            reduce using rule 63 (expr -> element .)


state 14

    (117) exfiles -> EXFILES .

    EQUALS          reduce using rule 117 (exfiles -> EXFILES .)
    LBRACKET        reduce using rule 117 (exfiles -> EXFILES .)
    LESS            reduce using rule 117 (exfiles -> EXFILES .)
    COMMA           reduce using rule 117 (exfiles -> EXFILES .)
    RPAREN          reduce using rule 117 (exfiles -> EXFILES .)
    COLON           reduce using rule 117 (exfiles -> EXFILES .)
    DIVIDER         reduce using rule 117 (exfiles -> EXFILES .)
    $end            reduce using rule 117 (exfiles -> EXFILES .)
    RBRACE          reduce using rule 117 (exfiles -> EXFILES .)
    RBRACKET        reduce using rule 117 (exfiles -> EXFILES .)
    ELSE            reduce using rule 117 (exfiles -> EXFILES .)


state 15

    (81) expralg -> relpath .

    COLON           reduce using rule 81 (expralg -> relpath .)
    EQUALS          reduce using rule 81 (expralg -> relpath .)
    LBRACKET        reduce using rule 81 (expralg -> relpath .)
    LESS            reduce using rule 81 (expralg -> relpath .)
    DIVIDER         reduce using rule 81 (expralg -> relpath .)
    $end            reduce using rule 81 (expralg -> relpath .)
    RBRACE          reduce using rule 81 (expralg -> relpath .)
    RBRACKET        reduce using rule 81 (expralg -> relpath .)
    COMMA           reduce using rule 81 (expralg -> relpath .)
    RPAREN          reduce using rule 81 (expralg -> relpath .)
    ELSE            reduce using rule 81 (expralg -> relpath .)
    DPROD           reduce using rule 81 (expralg -> relpath .)
    DIVMUL          reduce using rule 81 (expralg -> relpath .)
    PLUSMINUS       reduce using rule 81 (expralg -> relpath .)


state 16

    (79) expralg -> invrelpath .

    COLON           reduce using rule 79 (expralg -> invrelpath .)
    EQUALS          reduce using rule 79 (expralg -> invrelpath .)
    LBRACKET        reduce using rule 79 (expralg -> invrelpath .)
    LESS            reduce using rule 79 (expralg -> invrelpath .)
    DIVIDER         reduce using rule 79 (expralg -> invrelpath .)
    $end            reduce using rule 79 (expralg -> invrelpath .)
    RBRACE          reduce using rule 79 (expralg -> invrelpath .)
    RBRACKET        reduce using rule 79 (expralg -> invrelpath .)
    COMMA           reduce using rule 79 (expralg -> invrelpath .)
    RPAREN          reduce using rule 79 (expralg -> invrelpath .)
    ELSE            reduce using rule 79 (expralg -> invrelpath .)
    DPROD           reduce using rule 79 (expralg -> invrelpath .)
    DIVMUL          reduce using rule 79 (expralg -> invrelpath .)
    PLUSMINUS       reduce using rule 79 (expralg -> invrelpath .)


state 17

    (58) expr -> break .

    EQUALS          reduce using rule 58 (expr -> break .)
    LBRACKET        reduce using rule 58 (expr -> break .)
    LESS            reduce using rule 58 (expr -> break .)
    RBRACKET        reduce using rule 58 (expr -> break .)
    COMMA           reduce using rule 58 (expr -> break .)
    RPAREN          reduce using rule 58 (expr -> break .)
    COLON           reduce using rule 58 (expr -> break .)
    DIVIDER         reduce using rule 58 (expr -> break .)
    $end            reduce using rule 58 (expr -> break .)
    RBRACE          reduce using rule 58 (expr -> break .)
    ELSE            reduce using rule 58 (expr -> break .)


state 18

    (30) metaexpr -> append .

    DIVIDER         reduce using rule 30 (metaexpr -> append .)
    $end            reduce using rule 30 (metaexpr -> append .)
    RBRACE          reduce using rule 30 (metaexpr -> append .)
    COLON           reduce using rule 30 (metaexpr -> append .)
    EQUALS          reduce using rule 30 (metaexpr -> append .)
    LBRACKET        reduce using rule 30 (metaexpr -> append .)
    LESS            reduce using rule 30 (metaexpr -> append .)
    RBRACKET        reduce using rule 30 (metaexpr -> append .)
    COMMA           reduce using rule 30 (metaexpr -> append .)
    RPAREN          reduce using rule 30 (metaexpr -> append .)
    ELSE            reduce using rule 30 (metaexpr -> append .)


state 19

    (128) alg2 -> alg3 .

    DPROD           reduce using rule 128 (alg2 -> alg3 .)
    DIVMUL          reduce using rule 128 (alg2 -> alg3 .)
    PLUSMINUS       reduce using rule 128 (alg2 -> alg3 .)
    COLON           reduce using rule 128 (alg2 -> alg3 .)
    EQUALS          reduce using rule 128 (alg2 -> alg3 .)
    LBRACKET        reduce using rule 128 (alg2 -> alg3 .)
    LESS            reduce using rule 128 (alg2 -> alg3 .)
    DIVIDER         reduce using rule 128 (alg2 -> alg3 .)
    $end            reduce using rule 128 (alg2 -> alg3 .)
    RBRACE          reduce using rule 128 (alg2 -> alg3 .)
    RBRACKET        reduce using rule 128 (alg2 -> alg3 .)
    COMMA           reduce using rule 128 (alg2 -> alg3 .)
    RPAREN          reduce using rule 128 (alg2 -> alg3 .)
    ELSE            reduce using rule 128 (alg2 -> alg3 .)


state 20

    (54) expr -> varvar .
    (114) varvar -> varvar . POINT var

    EQUALS          reduce using rule 54 (expr -> varvar .)
    LBRACKET        reduce using rule 54 (expr -> varvar .)
    LESS            reduce using rule 54 (expr -> varvar .)
    RBRACKET        reduce using rule 54 (expr -> varvar .)
    COMMA           reduce using rule 54 (expr -> varvar .)
    RPAREN          reduce using rule 54 (expr -> varvar .)
    COLON           reduce using rule 54 (expr -> varvar .)
    DIVIDER         reduce using rule 54 (expr -> varvar .)
    $end            reduce using rule 54 (expr -> varvar .)
    RBRACE          reduce using rule 54 (expr -> varvar .)
    ELSE            reduce using rule 54 (expr -> varvar .)
    POINT           shift and go to state 109


state 21

    (25) metaexpr -> expr .
    (15) declare -> expr . COLON expr
    (46) equal -> expr . EQUALS expr
    (109) element -> expr . LBRACKET expr RBRACKET
    (101) less -> expr . LESS expr

  ! shift/reduce conflict for COLON resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
    DIVIDER         reduce using rule 25 (metaexpr -> expr .)
    $end            reduce using rule 25 (metaexpr -> expr .)
    RBRACE          reduce using rule 25 (metaexpr -> expr .)
    RBRACKET        reduce using rule 25 (metaexpr -> expr .)
    COMMA           reduce using rule 25 (metaexpr -> expr .)
    RPAREN          reduce using rule 25 (metaexpr -> expr .)
    ELSE            reduce using rule 25 (metaexpr -> expr .)
    COLON           shift and go to state 113
    EQUALS          shift and go to state 111
    LBRACKET        shift and go to state 112
    LESS            shift and go to state 110

  ! COLON           [ reduce using rule 25 (metaexpr -> expr .) ]
  ! EQUALS          [ reduce using rule 25 (metaexpr -> expr .) ]
  ! LBRACKET        [ reduce using rule 25 (metaexpr -> expr .) ]
  ! LESS            [ reduce using rule 25 (metaexpr -> expr .) ]


state 22

    (27) metaexpr -> module .

    DIVIDER         reduce using rule 27 (metaexpr -> module .)
    $end            reduce using rule 27 (metaexpr -> module .)
    RBRACE          reduce using rule 27 (metaexpr -> module .)
    COLON           reduce using rule 27 (metaexpr -> module .)
    EQUALS          reduce using rule 27 (metaexpr -> module .)
    LBRACKET        reduce using rule 27 (metaexpr -> module .)
    LESS            reduce using rule 27 (metaexpr -> module .)
    RBRACKET        reduce using rule 27 (metaexpr -> module .)
    COMMA           reduce using rule 27 (metaexpr -> module .)
    RPAREN          reduce using rule 27 (metaexpr -> module .)
    ELSE            reduce using rule 27 (metaexpr -> module .)


state 23

    (87) expralg -> list .

    COLON           reduce using rule 87 (expralg -> list .)
    EQUALS          reduce using rule 87 (expralg -> list .)
    LBRACKET        reduce using rule 87 (expralg -> list .)
    LESS            reduce using rule 87 (expralg -> list .)
    DIVIDER         reduce using rule 87 (expralg -> list .)
    $end            reduce using rule 87 (expralg -> list .)
    RBRACE          reduce using rule 87 (expralg -> list .)
    RBRACKET        reduce using rule 87 (expralg -> list .)
    COMMA           reduce using rule 87 (expralg -> list .)
    RPAREN          reduce using rule 87 (expralg -> list .)
    ELSE            reduce using rule 87 (expralg -> list .)
    DPROD           reduce using rule 87 (expralg -> list .)
    DIVMUL          reduce using rule 87 (expralg -> list .)
    PLUSMINUS       reduce using rule 87 (expralg -> list .)


state 24

    (0) S' -> inblock .
    (3) inblock -> inblock . divider metaexpr
    (5) inblock -> inblock . divider
    (19) divider -> . DIVIDER

    DIVIDER         shift and go to state 38

    divider                        shift and go to state 114

state 25

    (116) relpath -> RELPATH .

    COLON           reduce using rule 116 (relpath -> RELPATH .)
    EQUALS          reduce using rule 116 (relpath -> RELPATH .)
    LBRACKET        reduce using rule 116 (relpath -> RELPATH .)
    LESS            reduce using rule 116 (relpath -> RELPATH .)
    DIVIDER         reduce using rule 116 (relpath -> RELPATH .)
    $end            reduce using rule 116 (relpath -> RELPATH .)
    RBRACE          reduce using rule 116 (relpath -> RELPATH .)
    RBRACKET        reduce using rule 116 (relpath -> RELPATH .)
    COMMA           reduce using rule 116 (relpath -> RELPATH .)
    RPAREN          reduce using rule 116 (relpath -> RELPATH .)
    ELSE            reduce using rule 116 (relpath -> RELPATH .)
    DPROD           reduce using rule 116 (relpath -> RELPATH .)
    DIVMUL          reduce using rule 116 (relpath -> RELPATH .)
    PLUSMINUS       reduce using rule 116 (relpath -> RELPATH .)


state 26

    (98) evaluate -> EVALUATE . expr
    (50) expr -> . expralg
    (51) expr -> . parttree
    (52) expr -> . alg0
    (53) expr -> . print
    (54) expr -> . varvar
    (55) expr -> . variables
    (56) expr -> . python
    (57) expr -> . execfile
    (58) expr -> . break
    (59) expr -> . unless
    (60) expr -> . curfile
    (61) expr -> . exectext
    (62) expr -> . equal
    (63) expr -> . element
    (64) expr -> . less
    (65) expr -> . length
    (66) expr -> . cycle
    (67) expr -> . mlist
    (68) expr -> . evaluate
    (69) expr -> . yield
    (70) expr -> . repeat
    (71) expr -> . pass
    (72) expr -> . dict
    (73) expr -> . return
    (74) expr -> . modules
    (75) expr -> . exfiles
    (76) expr -> . input
    (77) expralg -> . term
    (78) expralg -> . abspath
    (79) expralg -> . invrelpath
    (80) expralg -> . subst
    (81) expralg -> . relpath
    (82) expralg -> . relpathbase
    (83) expralg -> . func
    (84) expralg -> . listdir
    (85) expralg -> . isdir
    (86) expralg -> . block
    (87) expralg -> . list
    (41) parttree -> . AMPERSAND metaexpr
    (123) alg0 -> . alg1
    (124) alg0 -> . alg0 PLUSMINUS alg1
    (125) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (113) varvar -> . var
    (114) varvar -> . varvar POINT var
    (111) variables -> . VARIABLES expr
    (96) python -> . PYTHON str
    (97) execfile -> . EXECFILE expr
    (40) break -> . BREAK
    (17) unless -> . UNLESS LPAREN expr RPAREN expr
    (18) unless -> . UNLESS LPAREN expr RPAREN expr ELSE expr
    (115) curfile -> . CURFILE
    (103) exectext -> . EXECTEXT expr
    (46) equal -> . expr EQUALS expr
    (109) element -> . expr LBRACKET expr RBRACKET
    (101) less -> . expr LESS expr
    (102) length -> . LENGTH LPAREN expr RPAREN
    (89) cycle -> . CYCLE
    (112) mlist -> . MLIST COLON block
    (98) evaluate -> . EVALUATE expr
    (106) yield -> . YIELD
    (108) repeat -> . REPEAT
    (120) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (88) return -> . RETURN expr
    (21) modules -> . MODULES
    (117) exfiles -> . EXFILES
    (20) input -> . INPUT
    (90) term -> . str
    (91) term -> . float
    (92) term -> . int
    (93) term -> . var
    (94) term -> . undervar
    (122) abspath -> . ABSPATH
    (121) invrelpath -> . INVRELPATH
    (99) subst -> . SUBST LPAREN expr RPAREN
    (116) relpath -> . RELPATH
    (118) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN block
    (24) func -> . WORD LPAREN args RPAREN
    (49) listdir -> . LISTDIR LPAREN expr RPAREN
    (48) isdir -> . ISDIR LPAREN expr RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (126) alg1 -> . alg2
    (127) alg1 -> . alg1 DIVMUL alg2
    (110) var -> . WORD
    (107) str -> . STRING
    (105) float -> . FLOAT
    (95) int -> . NUMBER
    (38) undervar -> . AT undervar
    (39) undervar -> . AT var
    (128) alg2 -> . alg3
    (129) alg2 -> . alg2 DPROD alg3
    (130) alg3 -> . expralg

    AMPERSAND       shift and go to state 12
    PLUSMINUS       shift and go to state 69
    PRINT           shift and go to state 47
    VARIABLES       shift and go to state 55
    PYTHON          shift and go to state 57
    EXECFILE        shift and go to state 73
    BREAK           shift and go to state 82
    UNLESS          shift and go to state 74
    CURFILE         shift and go to state 88
    EXECTEXT        shift and go to state 39
    LENGTH          shift and go to state 7
    CYCLE           shift and go to state 43
    MLIST           shift and go to state 90
    EVALUATE        shift and go to state 26
    YIELD           shift and go to state 4
    REPEAT          shift and go to state 103
    PASS            shift and go to state 34
    LBRACE          shift and go to state 31
    RETURN          shift and go to state 54
    MODULES         shift and go to state 63
    EXFILES         shift and go to state 14
    INPUT           shift and go to state 95
    ABSPATH         shift and go to state 33
    INVRELPATH      shift and go to state 36
    SUBST           shift and go to state 102
    RELPATH         shift and go to state 25
    RELPATHBASE     shift and go to state 5
    WORD            shift and go to state 117
    LISTDIR         shift and go to state 30
    ISDIR           shift and go to state 51
    LBRACKET        shift and go to state 83
    STRING          shift and go to state 70
    FLOAT           shift and go to state 3
    NUMBER          shift and go to state 28
    AT              shift and go to state 56

    isdir                          shift and go to state 1
    undervar                       shift and go to state 62
    alg1                           shift and go to state 6
    expralg                        shift and go to state 64
    alg0                           shift and go to state 89
    length                         shift and go to state 66
    float                          shift and go to state 8
    equal                          shift and go to state 84
    less                           shift and go to state 9
    parttree                       shift and go to state 10
    element                        shift and go to state 13
    relpath                        shift and go to state 15
    invrelpath                     shift and go to state 16
    break                          shift and go to state 17
    alg2                           shift and go to state 2
    execfile                       shift and go to state 68
    alg3                           shift and go to state 19
    varvar                         shift and go to state 20
    return                         shift and go to state 65
    str                            shift and go to state 78
    list                           shift and go to state 23
    unless                         shift and go to state 81
    exfiles                        shift and go to state 85
    evaluate                       shift and go to state 92
    int                            shift and go to state 32
    curfile                        shift and go to state 35
    pass                           shift and go to state 37
    expr                           shift and go to state 115
    subst                          shift and go to state 86
    exectext                       shift and go to state 41
    var                            shift and go to state 116
    modules                        shift and go to state 91
    listdir                        shift and go to state 44
    term                           shift and go to state 45
    relpathbase                    shift and go to state 94
    input                          shift and go to state 48
    variables                      shift and go to state 96
    print                          shift and go to state 49
    func                           shift and go to state 50
    dict                           shift and go to state 98
    mlist                          shift and go to state 100
    block                          shift and go to state 76
    python                         shift and go to state 53
    cycle                          shift and go to state 97
    repeat                         shift and go to state 99
    yield                          shift and go to state 71
    abspath                        shift and go to state 58

state 27

    (29) metaexpr -> declare .

    DIVIDER         reduce using rule 29 (metaexpr -> declare .)
    $end            reduce using rule 29 (metaexpr -> declare .)
    RBRACE          reduce using rule 29 (metaexpr -> declare .)
    COLON           reduce using rule 29 (metaexpr -> declare .)
    EQUALS          reduce using rule 29 (metaexpr -> declare .)
    LBRACKET        reduce using rule 29 (metaexpr -> declare .)
    LESS            reduce using rule 29 (metaexpr -> declare .)
    RBRACKET        reduce using rule 29 (metaexpr -> declare .)
    COMMA           reduce using rule 29 (metaexpr -> declare .)
    RPAREN          reduce using rule 29 (metaexpr -> declare .)
    ELSE            reduce using rule 29 (metaexpr -> declare .)


state 28

    (95) int -> NUMBER .

    COLON           reduce using rule 95 (int -> NUMBER .)
    EQUALS          reduce using rule 95 (int -> NUMBER .)
    LBRACKET        reduce using rule 95 (int -> NUMBER .)
    LESS            reduce using rule 95 (int -> NUMBER .)
    DIVIDER         reduce using rule 95 (int -> NUMBER .)
    $end            reduce using rule 95 (int -> NUMBER .)
    RBRACE          reduce using rule 95 (int -> NUMBER .)
    RBRACKET        reduce using rule 95 (int -> NUMBER .)
    COMMA           reduce using rule 95 (int -> NUMBER .)
    RPAREN          reduce using rule 95 (int -> NUMBER .)
    ELSE            reduce using rule 95 (int -> NUMBER .)
    DPROD           reduce using rule 95 (int -> NUMBER .)
    DIVMUL          reduce using rule 95 (int -> NUMBER .)
    PLUSMINUS       reduce using rule 95 (int -> NUMBER .)


state 29

    (104) downlevel -> DOWNLEVEL . expr
    (50) expr -> . expralg
    (51) expr -> . parttree
    (52) expr -> . alg0
    (53) expr -> . print
    (54) expr -> . varvar
    (55) expr -> . variables
    (56) expr -> . python
    (57) expr -> . execfile
    (58) expr -> . break
    (59) expr -> . unless
    (60) expr -> . curfile
    (61) expr -> . exectext
    (62) expr -> . equal
    (63) expr -> . element
    (64) expr -> . less
    (65) expr -> . length
    (66) expr -> . cycle
    (67) expr -> . mlist
    (68) expr -> . evaluate
    (69) expr -> . yield
    (70) expr -> . repeat
    (71) expr -> . pass
    (72) expr -> . dict
    (73) expr -> . return
    (74) expr -> . modules
    (75) expr -> . exfiles
    (76) expr -> . input
    (77) expralg -> . term
    (78) expralg -> . abspath
    (79) expralg -> . invrelpath
    (80) expralg -> . subst
    (81) expralg -> . relpath
    (82) expralg -> . relpathbase
    (83) expralg -> . func
    (84) expralg -> . listdir
    (85) expralg -> . isdir
    (86) expralg -> . block
    (87) expralg -> . list
    (41) parttree -> . AMPERSAND metaexpr
    (123) alg0 -> . alg1
    (124) alg0 -> . alg0 PLUSMINUS alg1
    (125) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (113) varvar -> . var
    (114) varvar -> . varvar POINT var
    (111) variables -> . VARIABLES expr
    (96) python -> . PYTHON str
    (97) execfile -> . EXECFILE expr
    (40) break -> . BREAK
    (17) unless -> . UNLESS LPAREN expr RPAREN expr
    (18) unless -> . UNLESS LPAREN expr RPAREN expr ELSE expr
    (115) curfile -> . CURFILE
    (103) exectext -> . EXECTEXT expr
    (46) equal -> . expr EQUALS expr
    (109) element -> . expr LBRACKET expr RBRACKET
    (101) less -> . expr LESS expr
    (102) length -> . LENGTH LPAREN expr RPAREN
    (89) cycle -> . CYCLE
    (112) mlist -> . MLIST COLON block
    (98) evaluate -> . EVALUATE expr
    (106) yield -> . YIELD
    (108) repeat -> . REPEAT
    (120) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (88) return -> . RETURN expr
    (21) modules -> . MODULES
    (117) exfiles -> . EXFILES
    (20) input -> . INPUT
    (90) term -> . str
    (91) term -> . float
    (92) term -> . int
    (93) term -> . var
    (94) term -> . undervar
    (122) abspath -> . ABSPATH
    (121) invrelpath -> . INVRELPATH
    (99) subst -> . SUBST LPAREN expr RPAREN
    (116) relpath -> . RELPATH
    (118) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN block
    (24) func -> . WORD LPAREN args RPAREN
    (49) listdir -> . LISTDIR LPAREN expr RPAREN
    (48) isdir -> . ISDIR LPAREN expr RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (126) alg1 -> . alg2
    (127) alg1 -> . alg1 DIVMUL alg2
    (110) var -> . WORD
    (107) str -> . STRING
    (105) float -> . FLOAT
    (95) int -> . NUMBER
    (38) undervar -> . AT undervar
    (39) undervar -> . AT var
    (128) alg2 -> . alg3
    (129) alg2 -> . alg2 DPROD alg3
    (130) alg3 -> . expralg

    AMPERSAND       shift and go to state 12
    PLUSMINUS       shift and go to state 69
    PRINT           shift and go to state 47
    VARIABLES       shift and go to state 55
    PYTHON          shift and go to state 57
    EXECFILE        shift and go to state 73
    BREAK           shift and go to state 82
    UNLESS          shift and go to state 74
    CURFILE         shift and go to state 88
    EXECTEXT        shift and go to state 39
    LENGTH          shift and go to state 7
    CYCLE           shift and go to state 43
    MLIST           shift and go to state 90
    EVALUATE        shift and go to state 26
    YIELD           shift and go to state 4
    REPEAT          shift and go to state 103
    PASS            shift and go to state 34
    LBRACE          shift and go to state 31
    RETURN          shift and go to state 54
    MODULES         shift and go to state 63
    EXFILES         shift and go to state 14
    INPUT           shift and go to state 95
    ABSPATH         shift and go to state 33
    INVRELPATH      shift and go to state 36
    SUBST           shift and go to state 102
    RELPATH         shift and go to state 25
    RELPATHBASE     shift and go to state 5
    WORD            shift and go to state 117
    LISTDIR         shift and go to state 30
    ISDIR           shift and go to state 51
    LBRACKET        shift and go to state 83
    STRING          shift and go to state 70
    FLOAT           shift and go to state 3
    NUMBER          shift and go to state 28
    AT              shift and go to state 56

    isdir                          shift and go to state 1
    undervar                       shift and go to state 62
    alg1                           shift and go to state 6
    expralg                        shift and go to state 64
    alg0                           shift and go to state 89
    length                         shift and go to state 66
    float                          shift and go to state 8
    equal                          shift and go to state 84
    less                           shift and go to state 9
    parttree                       shift and go to state 10
    element                        shift and go to state 13
    relpath                        shift and go to state 15
    invrelpath                     shift and go to state 16
    break                          shift and go to state 17
    alg2                           shift and go to state 2
    execfile                       shift and go to state 68
    alg3                           shift and go to state 19
    varvar                         shift and go to state 20
    return                         shift and go to state 65
    str                            shift and go to state 78
    list                           shift and go to state 23
    unless                         shift and go to state 81
    exfiles                        shift and go to state 85
    evaluate                       shift and go to state 92
    int                            shift and go to state 32
    curfile                        shift and go to state 35
    pass                           shift and go to state 37
    expr                           shift and go to state 118
    subst                          shift and go to state 86
    exectext                       shift and go to state 41
    var                            shift and go to state 116
    modules                        shift and go to state 91
    listdir                        shift and go to state 44
    term                           shift and go to state 45
    relpathbase                    shift and go to state 94
    input                          shift and go to state 48
    variables                      shift and go to state 96
    print                          shift and go to state 49
    func                           shift and go to state 50
    dict                           shift and go to state 98
    mlist                          shift and go to state 100
    block                          shift and go to state 76
    python                         shift and go to state 53
    cycle                          shift and go to state 97
    repeat                         shift and go to state 99
    yield                          shift and go to state 71
    abspath                        shift and go to state 58

state 30

    (49) listdir -> LISTDIR . LPAREN expr RPAREN

    LPAREN          shift and go to state 119


state 31

    (11) dict -> LBRACE . declares RBRACE
    (12) dict -> LBRACE . RBRACE
    (1) block -> LBRACE . inblock RBRACE
    (13) declares -> . declare
    (14) declares -> . declares COMMA declare
    (2) inblock -> . metaexpr
    (3) inblock -> . inblock divider metaexpr
    (4) inblock -> . divider inblock
    (5) inblock -> . inblock divider
    (15) declare -> . expr COLON expr
    (25) metaexpr -> . expr
    (26) metaexpr -> . deffunc
    (27) metaexpr -> . module
    (28) metaexpr -> . application
    (29) metaexpr -> . declare
    (30) metaexpr -> . append
    (31) metaexpr -> . define
    (32) metaexpr -> . execscan
    (33) metaexpr -> . compile
    (34) metaexpr -> . downlevel
    (35) metaexpr -> . if
    (19) divider -> . DIVIDER
    (50) expr -> . expralg
    (51) expr -> . parttree
    (52) expr -> . alg0
    (53) expr -> . print
    (54) expr -> . varvar
    (55) expr -> . variables
    (56) expr -> . python
    (57) expr -> . execfile
    (58) expr -> . break
    (59) expr -> . unless
    (60) expr -> . curfile
    (61) expr -> . exectext
    (62) expr -> . equal
    (63) expr -> . element
    (64) expr -> . less
    (65) expr -> . length
    (66) expr -> . cycle
    (67) expr -> . mlist
    (68) expr -> . evaluate
    (69) expr -> . yield
    (70) expr -> . repeat
    (71) expr -> . pass
    (72) expr -> . dict
    (73) expr -> . return
    (74) expr -> . modules
    (75) expr -> . exfiles
    (76) expr -> . input
    (8) deffunc -> . DEFFUNC WORD LPAREN args RPAREN block
    (7) module -> . MODULE WORD block
    (47) application -> . APPLICATION WORD block
    (22) append -> . var APPEND expr
    (9) define -> . DEFINE WORD expr
    (10) define -> . WORD DEFOP expr
    (100) execscan -> . EXECSCAN expr
    (119) compile -> . COMPILE
    (104) downlevel -> . DOWNLEVEL expr
    (16) if -> . IF LPAREN expr RPAREN expr
    (77) expralg -> . term
    (78) expralg -> . abspath
    (79) expralg -> . invrelpath
    (80) expralg -> . subst
    (81) expralg -> . relpath
    (82) expralg -> . relpathbase
    (83) expralg -> . func
    (84) expralg -> . listdir
    (85) expralg -> . isdir
    (86) expralg -> . block
    (87) expralg -> . list
    (41) parttree -> . AMPERSAND metaexpr
    (123) alg0 -> . alg1
    (124) alg0 -> . alg0 PLUSMINUS alg1
    (125) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (113) varvar -> . var
    (114) varvar -> . varvar POINT var
    (111) variables -> . VARIABLES expr
    (96) python -> . PYTHON str
    (97) execfile -> . EXECFILE expr
    (40) break -> . BREAK
    (17) unless -> . UNLESS LPAREN expr RPAREN expr
    (18) unless -> . UNLESS LPAREN expr RPAREN expr ELSE expr
    (115) curfile -> . CURFILE
    (103) exectext -> . EXECTEXT expr
    (46) equal -> . expr EQUALS expr
    (109) element -> . expr LBRACKET expr RBRACKET
    (101) less -> . expr LESS expr
    (102) length -> . LENGTH LPAREN expr RPAREN
    (89) cycle -> . CYCLE
    (112) mlist -> . MLIST COLON block
    (98) evaluate -> . EVALUATE expr
    (106) yield -> . YIELD
    (108) repeat -> . REPEAT
    (120) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (88) return -> . RETURN expr
    (21) modules -> . MODULES
    (117) exfiles -> . EXFILES
    (20) input -> . INPUT
    (110) var -> . WORD
    (90) term -> . str
    (91) term -> . float
    (92) term -> . int
    (93) term -> . var
    (94) term -> . undervar
    (122) abspath -> . ABSPATH
    (121) invrelpath -> . INVRELPATH
    (99) subst -> . SUBST LPAREN expr RPAREN
    (116) relpath -> . RELPATH
    (118) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN block
    (24) func -> . WORD LPAREN args RPAREN
    (49) listdir -> . LISTDIR LPAREN expr RPAREN
    (48) isdir -> . ISDIR LPAREN expr RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (126) alg1 -> . alg2
    (127) alg1 -> . alg1 DIVMUL alg2
    (107) str -> . STRING
    (105) float -> . FLOAT
    (95) int -> . NUMBER
    (38) undervar -> . AT undervar
    (39) undervar -> . AT var
    (128) alg2 -> . alg3
    (129) alg2 -> . alg2 DPROD alg3
    (130) alg3 -> . expralg

    RBRACE          shift and go to state 124
    DIVIDER         shift and go to state 38
    DEFFUNC         shift and go to state 59
    MODULE          shift and go to state 52
    APPLICATION     shift and go to state 75
    DEFINE          shift and go to state 67
    WORD            shift and go to state 77
    EXECSCAN        shift and go to state 46
    COMPILE         shift and go to state 72
    DOWNLEVEL       shift and go to state 29
    IF              shift and go to state 101
    AMPERSAND       shift and go to state 12
    PLUSMINUS       shift and go to state 69
    PRINT           shift and go to state 47
    VARIABLES       shift and go to state 55
    PYTHON          shift and go to state 57
    EXECFILE        shift and go to state 73
    BREAK           shift and go to state 82
    UNLESS          shift and go to state 74
    CURFILE         shift and go to state 88
    EXECTEXT        shift and go to state 39
    LENGTH          shift and go to state 7
    CYCLE           shift and go to state 43
    MLIST           shift and go to state 90
    EVALUATE        shift and go to state 26
    YIELD           shift and go to state 4
    REPEAT          shift and go to state 103
    PASS            shift and go to state 34
    LBRACE          shift and go to state 31
    RETURN          shift and go to state 54
    MODULES         shift and go to state 63
    EXFILES         shift and go to state 14
    INPUT           shift and go to state 95
    ABSPATH         shift and go to state 33
    INVRELPATH      shift and go to state 36
    SUBST           shift and go to state 102
    RELPATH         shift and go to state 25
    RELPATHBASE     shift and go to state 5
    LISTDIR         shift and go to state 30
    ISDIR           shift and go to state 51
    LBRACKET        shift and go to state 83
    STRING          shift and go to state 70
    FLOAT           shift and go to state 3
    NUMBER          shift and go to state 28
    AT              shift and go to state 56

    isdir                          shift and go to state 1
    metaexpr                       shift and go to state 61
    undervar                       shift and go to state 62
    alg1                           shift and go to state 6
    expralg                        shift and go to state 64
    curfile                        shift and go to state 35
    length                         shift and go to state 66
    parttree                       shift and go to state 10
    invrelpath                     shift and go to state 16
    float                          shift and go to state 8
    execfile                       shift and go to state 68
    less                           shift and go to state 9
    equal                          shift and go to state 84
    application                    shift and go to state 11
    subst                          shift and go to state 86
    pass                           shift and go to state 37
    element                        shift and go to state 13
    relpath                        shift and go to state 15
    modules                        shift and go to state 91
    break                          shift and go to state 17
    alg2                           shift and go to state 2
    list                           shift and go to state 23
    relpathbase                    shift and go to state 94
    alg3                           shift and go to state 19
    varvar                         shift and go to state 20
    expr                           shift and go to state 122
    return                         shift and go to state 65
    execscan                       shift and go to state 60
    str                            shift and go to state 78
    downlevel                      shift and go to state 79
    declares                       shift and go to state 123
    inblock                        shift and go to state 120
    unless                         shift and go to state 81
    exfiles                        shift and go to state 85
    func                           shift and go to state 50
    evaluate                       shift and go to state 92
    if                             shift and go to state 87
    int                            shift and go to state 32
    alg0                           shift and go to state 89
    declare                        shift and go to state 121
    compile                        shift and go to state 80
    define                         shift and go to state 40
    module                         shift and go to state 22
    exectext                       shift and go to state 41
    var                            shift and go to state 42
    listdir                        shift and go to state 44
    deffunc                        shift and go to state 93
    append                         shift and go to state 18
    input                          shift and go to state 48
    term                           shift and go to state 45
    variables                      shift and go to state 96
    print                          shift and go to state 49
    divider                        shift and go to state 104
    dict                           shift and go to state 98
    mlist                          shift and go to state 100
    block                          shift and go to state 76
    python                         shift and go to state 53
    cycle                          shift and go to state 97
    repeat                         shift and go to state 99
    yield                          shift and go to state 71
    abspath                        shift and go to state 58

state 32

    (92) term -> int .

    COLON           reduce using rule 92 (term -> int .)
    EQUALS          reduce using rule 92 (term -> int .)
    LBRACKET        reduce using rule 92 (term -> int .)
    LESS            reduce using rule 92 (term -> int .)
    DIVIDER         reduce using rule 92 (term -> int .)
    $end            reduce using rule 92 (term -> int .)
    RBRACE          reduce using rule 92 (term -> int .)
    RBRACKET        reduce using rule 92 (term -> int .)
    COMMA           reduce using rule 92 (term -> int .)
    RPAREN          reduce using rule 92 (term -> int .)
    ELSE            reduce using rule 92 (term -> int .)
    DPROD           reduce using rule 92 (term -> int .)
    DIVMUL          reduce using rule 92 (term -> int .)
    PLUSMINUS       reduce using rule 92 (term -> int .)


state 33

    (122) abspath -> ABSPATH .

    RPAREN          reduce using rule 122 (abspath -> ABSPATH .)
    EQUALS          reduce using rule 122 (abspath -> ABSPATH .)
    LBRACKET        reduce using rule 122 (abspath -> ABSPATH .)
    LESS            reduce using rule 122 (abspath -> ABSPATH .)
    DPROD           reduce using rule 122 (abspath -> ABSPATH .)
    DIVMUL          reduce using rule 122 (abspath -> ABSPATH .)
    PLUSMINUS       reduce using rule 122 (abspath -> ABSPATH .)
    COLON           reduce using rule 122 (abspath -> ABSPATH .)
    DIVIDER         reduce using rule 122 (abspath -> ABSPATH .)
    $end            reduce using rule 122 (abspath -> ABSPATH .)
    RBRACE          reduce using rule 122 (abspath -> ABSPATH .)
    RBRACKET        reduce using rule 122 (abspath -> ABSPATH .)
    COMMA           reduce using rule 122 (abspath -> ABSPATH .)
    ELSE            reduce using rule 122 (abspath -> ABSPATH .)


state 34

    (120) pass -> PASS .

    RBRACKET        reduce using rule 120 (pass -> PASS .)
    EQUALS          reduce using rule 120 (pass -> PASS .)
    LBRACKET        reduce using rule 120 (pass -> PASS .)
    LESS            reduce using rule 120 (pass -> PASS .)
    RPAREN          reduce using rule 120 (pass -> PASS .)
    COLON           reduce using rule 120 (pass -> PASS .)
    RBRACE          reduce using rule 120 (pass -> PASS .)
    DIVIDER         reduce using rule 120 (pass -> PASS .)
    COMMA           reduce using rule 120 (pass -> PASS .)
    $end            reduce using rule 120 (pass -> PASS .)
    ELSE            reduce using rule 120 (pass -> PASS .)


state 35

    (60) expr -> curfile .

    EQUALS          reduce using rule 60 (expr -> curfile .)
    LBRACKET        reduce using rule 60 (expr -> curfile .)
    LESS            reduce using rule 60 (expr -> curfile .)
    RBRACKET        reduce using rule 60 (expr -> curfile .)
    COMMA           reduce using rule 60 (expr -> curfile .)
    RPAREN          reduce using rule 60 (expr -> curfile .)
    COLON           reduce using rule 60 (expr -> curfile .)
    DIVIDER         reduce using rule 60 (expr -> curfile .)
    $end            reduce using rule 60 (expr -> curfile .)
    RBRACE          reduce using rule 60 (expr -> curfile .)
    ELSE            reduce using rule 60 (expr -> curfile .)


state 36

    (121) invrelpath -> INVRELPATH .

    EQUALS          reduce using rule 121 (invrelpath -> INVRELPATH .)
    LBRACKET        reduce using rule 121 (invrelpath -> INVRELPATH .)
    LESS            reduce using rule 121 (invrelpath -> INVRELPATH .)
    RBRACKET        reduce using rule 121 (invrelpath -> INVRELPATH .)
    COMMA           reduce using rule 121 (invrelpath -> INVRELPATH .)
    RPAREN          reduce using rule 121 (invrelpath -> INVRELPATH .)
    DPROD           reduce using rule 121 (invrelpath -> INVRELPATH .)
    DIVMUL          reduce using rule 121 (invrelpath -> INVRELPATH .)
    PLUSMINUS       reduce using rule 121 (invrelpath -> INVRELPATH .)
    COLON           reduce using rule 121 (invrelpath -> INVRELPATH .)
    DIVIDER         reduce using rule 121 (invrelpath -> INVRELPATH .)
    $end            reduce using rule 121 (invrelpath -> INVRELPATH .)
    RBRACE          reduce using rule 121 (invrelpath -> INVRELPATH .)
    ELSE            reduce using rule 121 (invrelpath -> INVRELPATH .)


state 37

    (71) expr -> pass .

    EQUALS          reduce using rule 71 (expr -> pass .)
    LBRACKET        reduce using rule 71 (expr -> pass .)
    LESS            reduce using rule 71 (expr -> pass .)
    RBRACKET        reduce using rule 71 (expr -> pass .)
    COMMA           reduce using rule 71 (expr -> pass .)
    RPAREN          reduce using rule 71 (expr -> pass .)
    COLON           reduce using rule 71 (expr -> pass .)
    DIVIDER         reduce using rule 71 (expr -> pass .)
    $end            reduce using rule 71 (expr -> pass .)
    RBRACE          reduce using rule 71 (expr -> pass .)
    ELSE            reduce using rule 71 (expr -> pass .)


state 38

    (19) divider -> DIVIDER .

    DEFFUNC         reduce using rule 19 (divider -> DIVIDER .)
    MODULE          reduce using rule 19 (divider -> DIVIDER .)
    APPLICATION     reduce using rule 19 (divider -> DIVIDER .)
    DEFINE          reduce using rule 19 (divider -> DIVIDER .)
    WORD            reduce using rule 19 (divider -> DIVIDER .)
    EXECSCAN        reduce using rule 19 (divider -> DIVIDER .)
    COMPILE         reduce using rule 19 (divider -> DIVIDER .)
    DOWNLEVEL       reduce using rule 19 (divider -> DIVIDER .)
    IF              reduce using rule 19 (divider -> DIVIDER .)
    AMPERSAND       reduce using rule 19 (divider -> DIVIDER .)
    PLUSMINUS       reduce using rule 19 (divider -> DIVIDER .)
    PRINT           reduce using rule 19 (divider -> DIVIDER .)
    VARIABLES       reduce using rule 19 (divider -> DIVIDER .)
    PYTHON          reduce using rule 19 (divider -> DIVIDER .)
    EXECFILE        reduce using rule 19 (divider -> DIVIDER .)
    BREAK           reduce using rule 19 (divider -> DIVIDER .)
    UNLESS          reduce using rule 19 (divider -> DIVIDER .)
    CURFILE         reduce using rule 19 (divider -> DIVIDER .)
    EXECTEXT        reduce using rule 19 (divider -> DIVIDER .)
    LENGTH          reduce using rule 19 (divider -> DIVIDER .)
    CYCLE           reduce using rule 19 (divider -> DIVIDER .)
    MLIST           reduce using rule 19 (divider -> DIVIDER .)
    EVALUATE        reduce using rule 19 (divider -> DIVIDER .)
    YIELD           reduce using rule 19 (divider -> DIVIDER .)
    REPEAT          reduce using rule 19 (divider -> DIVIDER .)
    PASS            reduce using rule 19 (divider -> DIVIDER .)
    LBRACE          reduce using rule 19 (divider -> DIVIDER .)
    RETURN          reduce using rule 19 (divider -> DIVIDER .)
    MODULES         reduce using rule 19 (divider -> DIVIDER .)
    EXFILES         reduce using rule 19 (divider -> DIVIDER .)
    INPUT           reduce using rule 19 (divider -> DIVIDER .)
    ABSPATH         reduce using rule 19 (divider -> DIVIDER .)
    INVRELPATH      reduce using rule 19 (divider -> DIVIDER .)
    SUBST           reduce using rule 19 (divider -> DIVIDER .)
    RELPATH         reduce using rule 19 (divider -> DIVIDER .)
    RELPATHBASE     reduce using rule 19 (divider -> DIVIDER .)
    LISTDIR         reduce using rule 19 (divider -> DIVIDER .)
    ISDIR           reduce using rule 19 (divider -> DIVIDER .)
    LBRACKET        reduce using rule 19 (divider -> DIVIDER .)
    STRING          reduce using rule 19 (divider -> DIVIDER .)
    FLOAT           reduce using rule 19 (divider -> DIVIDER .)
    NUMBER          reduce using rule 19 (divider -> DIVIDER .)
    AT              reduce using rule 19 (divider -> DIVIDER .)
    DIVIDER         reduce using rule 19 (divider -> DIVIDER .)
    $end            reduce using rule 19 (divider -> DIVIDER .)
    RBRACE          reduce using rule 19 (divider -> DIVIDER .)


state 39

    (103) exectext -> EXECTEXT . expr
    (50) expr -> . expralg
    (51) expr -> . parttree
    (52) expr -> . alg0
    (53) expr -> . print
    (54) expr -> . varvar
    (55) expr -> . variables
    (56) expr -> . python
    (57) expr -> . execfile
    (58) expr -> . break
    (59) expr -> . unless
    (60) expr -> . curfile
    (61) expr -> . exectext
    (62) expr -> . equal
    (63) expr -> . element
    (64) expr -> . less
    (65) expr -> . length
    (66) expr -> . cycle
    (67) expr -> . mlist
    (68) expr -> . evaluate
    (69) expr -> . yield
    (70) expr -> . repeat
    (71) expr -> . pass
    (72) expr -> . dict
    (73) expr -> . return
    (74) expr -> . modules
    (75) expr -> . exfiles
    (76) expr -> . input
    (77) expralg -> . term
    (78) expralg -> . abspath
    (79) expralg -> . invrelpath
    (80) expralg -> . subst
    (81) expralg -> . relpath
    (82) expralg -> . relpathbase
    (83) expralg -> . func
    (84) expralg -> . listdir
    (85) expralg -> . isdir
    (86) expralg -> . block
    (87) expralg -> . list
    (41) parttree -> . AMPERSAND metaexpr
    (123) alg0 -> . alg1
    (124) alg0 -> . alg0 PLUSMINUS alg1
    (125) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (113) varvar -> . var
    (114) varvar -> . varvar POINT var
    (111) variables -> . VARIABLES expr
    (96) python -> . PYTHON str
    (97) execfile -> . EXECFILE expr
    (40) break -> . BREAK
    (17) unless -> . UNLESS LPAREN expr RPAREN expr
    (18) unless -> . UNLESS LPAREN expr RPAREN expr ELSE expr
    (115) curfile -> . CURFILE
    (103) exectext -> . EXECTEXT expr
    (46) equal -> . expr EQUALS expr
    (109) element -> . expr LBRACKET expr RBRACKET
    (101) less -> . expr LESS expr
    (102) length -> . LENGTH LPAREN expr RPAREN
    (89) cycle -> . CYCLE
    (112) mlist -> . MLIST COLON block
    (98) evaluate -> . EVALUATE expr
    (106) yield -> . YIELD
    (108) repeat -> . REPEAT
    (120) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (88) return -> . RETURN expr
    (21) modules -> . MODULES
    (117) exfiles -> . EXFILES
    (20) input -> . INPUT
    (90) term -> . str
    (91) term -> . float
    (92) term -> . int
    (93) term -> . var
    (94) term -> . undervar
    (122) abspath -> . ABSPATH
    (121) invrelpath -> . INVRELPATH
    (99) subst -> . SUBST LPAREN expr RPAREN
    (116) relpath -> . RELPATH
    (118) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN block
    (24) func -> . WORD LPAREN args RPAREN
    (49) listdir -> . LISTDIR LPAREN expr RPAREN
    (48) isdir -> . ISDIR LPAREN expr RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (126) alg1 -> . alg2
    (127) alg1 -> . alg1 DIVMUL alg2
    (110) var -> . WORD
    (107) str -> . STRING
    (105) float -> . FLOAT
    (95) int -> . NUMBER
    (38) undervar -> . AT undervar
    (39) undervar -> . AT var
    (128) alg2 -> . alg3
    (129) alg2 -> . alg2 DPROD alg3
    (130) alg3 -> . expralg

    AMPERSAND       shift and go to state 12
    PLUSMINUS       shift and go to state 69
    PRINT           shift and go to state 47
    VARIABLES       shift and go to state 55
    PYTHON          shift and go to state 57
    EXECFILE        shift and go to state 73
    BREAK           shift and go to state 82
    UNLESS          shift and go to state 74
    CURFILE         shift and go to state 88
    EXECTEXT        shift and go to state 39
    LENGTH          shift and go to state 7
    CYCLE           shift and go to state 43
    MLIST           shift and go to state 90
    EVALUATE        shift and go to state 26
    YIELD           shift and go to state 4
    REPEAT          shift and go to state 103
    PASS            shift and go to state 34
    LBRACE          shift and go to state 31
    RETURN          shift and go to state 54
    MODULES         shift and go to state 63
    EXFILES         shift and go to state 14
    INPUT           shift and go to state 95
    ABSPATH         shift and go to state 33
    INVRELPATH      shift and go to state 36
    SUBST           shift and go to state 102
    RELPATH         shift and go to state 25
    RELPATHBASE     shift and go to state 5
    WORD            shift and go to state 117
    LISTDIR         shift and go to state 30
    ISDIR           shift and go to state 51
    LBRACKET        shift and go to state 83
    STRING          shift and go to state 70
    FLOAT           shift and go to state 3
    NUMBER          shift and go to state 28
    AT              shift and go to state 56

    isdir                          shift and go to state 1
    undervar                       shift and go to state 62
    alg1                           shift and go to state 6
    expralg                        shift and go to state 64
    alg0                           shift and go to state 89
    length                         shift and go to state 66
    float                          shift and go to state 8
    equal                          shift and go to state 84
    less                           shift and go to state 9
    parttree                       shift and go to state 10
    element                        shift and go to state 13
    relpath                        shift and go to state 15
    invrelpath                     shift and go to state 16
    break                          shift and go to state 17
    alg2                           shift and go to state 2
    execfile                       shift and go to state 68
    alg3                           shift and go to state 19
    varvar                         shift and go to state 20
    return                         shift and go to state 65
    str                            shift and go to state 78
    list                           shift and go to state 23
    unless                         shift and go to state 81
    exfiles                        shift and go to state 85
    evaluate                       shift and go to state 92
    int                            shift and go to state 32
    curfile                        shift and go to state 35
    pass                           shift and go to state 37
    expr                           shift and go to state 125
    subst                          shift and go to state 86
    exectext                       shift and go to state 41
    var                            shift and go to state 116
    modules                        shift and go to state 91
    listdir                        shift and go to state 44
    term                           shift and go to state 45
    relpathbase                    shift and go to state 94
    input                          shift and go to state 48
    variables                      shift and go to state 96
    print                          shift and go to state 49
    func                           shift and go to state 50
    dict                           shift and go to state 98
    mlist                          shift and go to state 100
    block                          shift and go to state 76
    python                         shift and go to state 53
    cycle                          shift and go to state 97
    repeat                         shift and go to state 99
    yield                          shift and go to state 71
    abspath                        shift and go to state 58

state 40

    (31) metaexpr -> define .

    DIVIDER         reduce using rule 31 (metaexpr -> define .)
    $end            reduce using rule 31 (metaexpr -> define .)
    RBRACE          reduce using rule 31 (metaexpr -> define .)
    COLON           reduce using rule 31 (metaexpr -> define .)
    EQUALS          reduce using rule 31 (metaexpr -> define .)
    LBRACKET        reduce using rule 31 (metaexpr -> define .)
    LESS            reduce using rule 31 (metaexpr -> define .)
    RBRACKET        reduce using rule 31 (metaexpr -> define .)
    COMMA           reduce using rule 31 (metaexpr -> define .)
    RPAREN          reduce using rule 31 (metaexpr -> define .)
    ELSE            reduce using rule 31 (metaexpr -> define .)


state 41

    (61) expr -> exectext .

    EQUALS          reduce using rule 61 (expr -> exectext .)
    LBRACKET        reduce using rule 61 (expr -> exectext .)
    LESS            reduce using rule 61 (expr -> exectext .)
    RBRACKET        reduce using rule 61 (expr -> exectext .)
    COMMA           reduce using rule 61 (expr -> exectext .)
    RPAREN          reduce using rule 61 (expr -> exectext .)
    COLON           reduce using rule 61 (expr -> exectext .)
    DIVIDER         reduce using rule 61 (expr -> exectext .)
    $end            reduce using rule 61 (expr -> exectext .)
    RBRACE          reduce using rule 61 (expr -> exectext .)
    ELSE            reduce using rule 61 (expr -> exectext .)


state 42

    (22) append -> var . APPEND expr
    (113) varvar -> var .
    (93) term -> var .

  ! reduce/reduce conflict for COLON resolved using rule 93 (term -> var .)
  ! reduce/reduce conflict for EQUALS resolved using rule 93 (term -> var .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 93 (term -> var .)
  ! reduce/reduce conflict for LESS resolved using rule 93 (term -> var .)
  ! reduce/reduce conflict for RBRACE resolved using rule 93 (term -> var .)
  ! reduce/reduce conflict for DIVIDER resolved using rule 93 (term -> var .)
  ! reduce/reduce conflict for $end resolved using rule 93 (term -> var .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 93 (term -> var .)
  ! reduce/reduce conflict for COMMA resolved using rule 93 (term -> var .)
  ! reduce/reduce conflict for RPAREN resolved using rule 93 (term -> var .)
  ! reduce/reduce conflict for ELSE resolved using rule 93 (term -> var .)
    APPEND          shift and go to state 126
    POINT           reduce using rule 113 (varvar -> var .)
    COLON           reduce using rule 93 (term -> var .)
    EQUALS          reduce using rule 93 (term -> var .)
    LBRACKET        reduce using rule 93 (term -> var .)
    LESS            reduce using rule 93 (term -> var .)
    RBRACE          reduce using rule 93 (term -> var .)
    DIVIDER         reduce using rule 93 (term -> var .)
    DPROD           reduce using rule 93 (term -> var .)
    DIVMUL          reduce using rule 93 (term -> var .)
    PLUSMINUS       reduce using rule 93 (term -> var .)
    $end            reduce using rule 93 (term -> var .)
    RBRACKET        reduce using rule 93 (term -> var .)
    COMMA           reduce using rule 93 (term -> var .)
    RPAREN          reduce using rule 93 (term -> var .)
    ELSE            reduce using rule 93 (term -> var .)

  ! COLON           [ reduce using rule 113 (varvar -> var .) ]
  ! EQUALS          [ reduce using rule 113 (varvar -> var .) ]
  ! LBRACKET        [ reduce using rule 113 (varvar -> var .) ]
  ! LESS            [ reduce using rule 113 (varvar -> var .) ]
  ! DIVIDER         [ reduce using rule 113 (varvar -> var .) ]
  ! $end            [ reduce using rule 113 (varvar -> var .) ]
  ! RBRACE          [ reduce using rule 113 (varvar -> var .) ]
  ! RBRACKET        [ reduce using rule 113 (varvar -> var .) ]
  ! COMMA           [ reduce using rule 113 (varvar -> var .) ]
  ! RPAREN          [ reduce using rule 113 (varvar -> var .) ]
  ! ELSE            [ reduce using rule 113 (varvar -> var .) ]


state 43

    (89) cycle -> CYCLE .

    RPAREN          reduce using rule 89 (cycle -> CYCLE .)
    EQUALS          reduce using rule 89 (cycle -> CYCLE .)
    LBRACKET        reduce using rule 89 (cycle -> CYCLE .)
    LESS            reduce using rule 89 (cycle -> CYCLE .)
    COLON           reduce using rule 89 (cycle -> CYCLE .)
    DIVIDER         reduce using rule 89 (cycle -> CYCLE .)
    $end            reduce using rule 89 (cycle -> CYCLE .)
    RBRACE          reduce using rule 89 (cycle -> CYCLE .)
    RBRACKET        reduce using rule 89 (cycle -> CYCLE .)
    COMMA           reduce using rule 89 (cycle -> CYCLE .)
    ELSE            reduce using rule 89 (cycle -> CYCLE .)


state 44

    (84) expralg -> listdir .

    COLON           reduce using rule 84 (expralg -> listdir .)
    EQUALS          reduce using rule 84 (expralg -> listdir .)
    LBRACKET        reduce using rule 84 (expralg -> listdir .)
    LESS            reduce using rule 84 (expralg -> listdir .)
    DIVIDER         reduce using rule 84 (expralg -> listdir .)
    $end            reduce using rule 84 (expralg -> listdir .)
    RBRACE          reduce using rule 84 (expralg -> listdir .)
    RBRACKET        reduce using rule 84 (expralg -> listdir .)
    COMMA           reduce using rule 84 (expralg -> listdir .)
    RPAREN          reduce using rule 84 (expralg -> listdir .)
    ELSE            reduce using rule 84 (expralg -> listdir .)
    DPROD           reduce using rule 84 (expralg -> listdir .)
    DIVMUL          reduce using rule 84 (expralg -> listdir .)
    PLUSMINUS       reduce using rule 84 (expralg -> listdir .)


state 45

    (77) expralg -> term .

    COLON           reduce using rule 77 (expralg -> term .)
    EQUALS          reduce using rule 77 (expralg -> term .)
    LBRACKET        reduce using rule 77 (expralg -> term .)
    LESS            reduce using rule 77 (expralg -> term .)
    DIVIDER         reduce using rule 77 (expralg -> term .)
    $end            reduce using rule 77 (expralg -> term .)
    RBRACE          reduce using rule 77 (expralg -> term .)
    RBRACKET        reduce using rule 77 (expralg -> term .)
    COMMA           reduce using rule 77 (expralg -> term .)
    RPAREN          reduce using rule 77 (expralg -> term .)
    ELSE            reduce using rule 77 (expralg -> term .)
    DPROD           reduce using rule 77 (expralg -> term .)
    DIVMUL          reduce using rule 77 (expralg -> term .)
    PLUSMINUS       reduce using rule 77 (expralg -> term .)


state 46

    (100) execscan -> EXECSCAN . expr
    (50) expr -> . expralg
    (51) expr -> . parttree
    (52) expr -> . alg0
    (53) expr -> . print
    (54) expr -> . varvar
    (55) expr -> . variables
    (56) expr -> . python
    (57) expr -> . execfile
    (58) expr -> . break
    (59) expr -> . unless
    (60) expr -> . curfile
    (61) expr -> . exectext
    (62) expr -> . equal
    (63) expr -> . element
    (64) expr -> . less
    (65) expr -> . length
    (66) expr -> . cycle
    (67) expr -> . mlist
    (68) expr -> . evaluate
    (69) expr -> . yield
    (70) expr -> . repeat
    (71) expr -> . pass
    (72) expr -> . dict
    (73) expr -> . return
    (74) expr -> . modules
    (75) expr -> . exfiles
    (76) expr -> . input
    (77) expralg -> . term
    (78) expralg -> . abspath
    (79) expralg -> . invrelpath
    (80) expralg -> . subst
    (81) expralg -> . relpath
    (82) expralg -> . relpathbase
    (83) expralg -> . func
    (84) expralg -> . listdir
    (85) expralg -> . isdir
    (86) expralg -> . block
    (87) expralg -> . list
    (41) parttree -> . AMPERSAND metaexpr
    (123) alg0 -> . alg1
    (124) alg0 -> . alg0 PLUSMINUS alg1
    (125) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (113) varvar -> . var
    (114) varvar -> . varvar POINT var
    (111) variables -> . VARIABLES expr
    (96) python -> . PYTHON str
    (97) execfile -> . EXECFILE expr
    (40) break -> . BREAK
    (17) unless -> . UNLESS LPAREN expr RPAREN expr
    (18) unless -> . UNLESS LPAREN expr RPAREN expr ELSE expr
    (115) curfile -> . CURFILE
    (103) exectext -> . EXECTEXT expr
    (46) equal -> . expr EQUALS expr
    (109) element -> . expr LBRACKET expr RBRACKET
    (101) less -> . expr LESS expr
    (102) length -> . LENGTH LPAREN expr RPAREN
    (89) cycle -> . CYCLE
    (112) mlist -> . MLIST COLON block
    (98) evaluate -> . EVALUATE expr
    (106) yield -> . YIELD
    (108) repeat -> . REPEAT
    (120) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (88) return -> . RETURN expr
    (21) modules -> . MODULES
    (117) exfiles -> . EXFILES
    (20) input -> . INPUT
    (90) term -> . str
    (91) term -> . float
    (92) term -> . int
    (93) term -> . var
    (94) term -> . undervar
    (122) abspath -> . ABSPATH
    (121) invrelpath -> . INVRELPATH
    (99) subst -> . SUBST LPAREN expr RPAREN
    (116) relpath -> . RELPATH
    (118) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN block
    (24) func -> . WORD LPAREN args RPAREN
    (49) listdir -> . LISTDIR LPAREN expr RPAREN
    (48) isdir -> . ISDIR LPAREN expr RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (126) alg1 -> . alg2
    (127) alg1 -> . alg1 DIVMUL alg2
    (110) var -> . WORD
    (107) str -> . STRING
    (105) float -> . FLOAT
    (95) int -> . NUMBER
    (38) undervar -> . AT undervar
    (39) undervar -> . AT var
    (128) alg2 -> . alg3
    (129) alg2 -> . alg2 DPROD alg3
    (130) alg3 -> . expralg

    AMPERSAND       shift and go to state 12
    PLUSMINUS       shift and go to state 69
    PRINT           shift and go to state 47
    VARIABLES       shift and go to state 55
    PYTHON          shift and go to state 57
    EXECFILE        shift and go to state 73
    BREAK           shift and go to state 82
    UNLESS          shift and go to state 74
    CURFILE         shift and go to state 88
    EXECTEXT        shift and go to state 39
    LENGTH          shift and go to state 7
    CYCLE           shift and go to state 43
    MLIST           shift and go to state 90
    EVALUATE        shift and go to state 26
    YIELD           shift and go to state 4
    REPEAT          shift and go to state 103
    PASS            shift and go to state 34
    LBRACE          shift and go to state 31
    RETURN          shift and go to state 54
    MODULES         shift and go to state 63
    EXFILES         shift and go to state 14
    INPUT           shift and go to state 95
    ABSPATH         shift and go to state 33
    INVRELPATH      shift and go to state 36
    SUBST           shift and go to state 102
    RELPATH         shift and go to state 25
    RELPATHBASE     shift and go to state 5
    WORD            shift and go to state 117
    LISTDIR         shift and go to state 30
    ISDIR           shift and go to state 51
    LBRACKET        shift and go to state 83
    STRING          shift and go to state 70
    FLOAT           shift and go to state 3
    NUMBER          shift and go to state 28
    AT              shift and go to state 56

    isdir                          shift and go to state 1
    undervar                       shift and go to state 62
    alg1                           shift and go to state 6
    expralg                        shift and go to state 64
    alg0                           shift and go to state 89
    length                         shift and go to state 66
    float                          shift and go to state 8
    equal                          shift and go to state 84
    less                           shift and go to state 9
    parttree                       shift and go to state 10
    element                        shift and go to state 13
    relpath                        shift and go to state 15
    invrelpath                     shift and go to state 16
    break                          shift and go to state 17
    alg2                           shift and go to state 2
    execfile                       shift and go to state 68
    alg3                           shift and go to state 19
    varvar                         shift and go to state 20
    return                         shift and go to state 65
    str                            shift and go to state 78
    list                           shift and go to state 23
    unless                         shift and go to state 81
    exfiles                        shift and go to state 85
    evaluate                       shift and go to state 92
    int                            shift and go to state 32
    curfile                        shift and go to state 35
    pass                           shift and go to state 37
    expr                           shift and go to state 127
    subst                          shift and go to state 86
    exectext                       shift and go to state 41
    var                            shift and go to state 116
    modules                        shift and go to state 91
    listdir                        shift and go to state 44
    term                           shift and go to state 45
    relpathbase                    shift and go to state 94
    input                          shift and go to state 48
    variables                      shift and go to state 96
    print                          shift and go to state 49
    func                           shift and go to state 50
    dict                           shift and go to state 98
    mlist                          shift and go to state 100
    block                          shift and go to state 76
    python                         shift and go to state 53
    cycle                          shift and go to state 97
    repeat                         shift and go to state 99
    yield                          shift and go to state 71
    abspath                        shift and go to state 58

state 47

    (6) print -> PRINT . expr
    (50) expr -> . expralg
    (51) expr -> . parttree
    (52) expr -> . alg0
    (53) expr -> . print
    (54) expr -> . varvar
    (55) expr -> . variables
    (56) expr -> . python
    (57) expr -> . execfile
    (58) expr -> . break
    (59) expr -> . unless
    (60) expr -> . curfile
    (61) expr -> . exectext
    (62) expr -> . equal
    (63) expr -> . element
    (64) expr -> . less
    (65) expr -> . length
    (66) expr -> . cycle
    (67) expr -> . mlist
    (68) expr -> . evaluate
    (69) expr -> . yield
    (70) expr -> . repeat
    (71) expr -> . pass
    (72) expr -> . dict
    (73) expr -> . return
    (74) expr -> . modules
    (75) expr -> . exfiles
    (76) expr -> . input
    (77) expralg -> . term
    (78) expralg -> . abspath
    (79) expralg -> . invrelpath
    (80) expralg -> . subst
    (81) expralg -> . relpath
    (82) expralg -> . relpathbase
    (83) expralg -> . func
    (84) expralg -> . listdir
    (85) expralg -> . isdir
    (86) expralg -> . block
    (87) expralg -> . list
    (41) parttree -> . AMPERSAND metaexpr
    (123) alg0 -> . alg1
    (124) alg0 -> . alg0 PLUSMINUS alg1
    (125) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (113) varvar -> . var
    (114) varvar -> . varvar POINT var
    (111) variables -> . VARIABLES expr
    (96) python -> . PYTHON str
    (97) execfile -> . EXECFILE expr
    (40) break -> . BREAK
    (17) unless -> . UNLESS LPAREN expr RPAREN expr
    (18) unless -> . UNLESS LPAREN expr RPAREN expr ELSE expr
    (115) curfile -> . CURFILE
    (103) exectext -> . EXECTEXT expr
    (46) equal -> . expr EQUALS expr
    (109) element -> . expr LBRACKET expr RBRACKET
    (101) less -> . expr LESS expr
    (102) length -> . LENGTH LPAREN expr RPAREN
    (89) cycle -> . CYCLE
    (112) mlist -> . MLIST COLON block
    (98) evaluate -> . EVALUATE expr
    (106) yield -> . YIELD
    (108) repeat -> . REPEAT
    (120) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (88) return -> . RETURN expr
    (21) modules -> . MODULES
    (117) exfiles -> . EXFILES
    (20) input -> . INPUT
    (90) term -> . str
    (91) term -> . float
    (92) term -> . int
    (93) term -> . var
    (94) term -> . undervar
    (122) abspath -> . ABSPATH
    (121) invrelpath -> . INVRELPATH
    (99) subst -> . SUBST LPAREN expr RPAREN
    (116) relpath -> . RELPATH
    (118) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN block
    (24) func -> . WORD LPAREN args RPAREN
    (49) listdir -> . LISTDIR LPAREN expr RPAREN
    (48) isdir -> . ISDIR LPAREN expr RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (126) alg1 -> . alg2
    (127) alg1 -> . alg1 DIVMUL alg2
    (110) var -> . WORD
    (107) str -> . STRING
    (105) float -> . FLOAT
    (95) int -> . NUMBER
    (38) undervar -> . AT undervar
    (39) undervar -> . AT var
    (128) alg2 -> . alg3
    (129) alg2 -> . alg2 DPROD alg3
    (130) alg3 -> . expralg

    AMPERSAND       shift and go to state 12
    PLUSMINUS       shift and go to state 69
    PRINT           shift and go to state 47
    VARIABLES       shift and go to state 55
    PYTHON          shift and go to state 57
    EXECFILE        shift and go to state 73
    BREAK           shift and go to state 82
    UNLESS          shift and go to state 74
    CURFILE         shift and go to state 88
    EXECTEXT        shift and go to state 39
    LENGTH          shift and go to state 7
    CYCLE           shift and go to state 43
    MLIST           shift and go to state 90
    EVALUATE        shift and go to state 26
    YIELD           shift and go to state 4
    REPEAT          shift and go to state 103
    PASS            shift and go to state 34
    LBRACE          shift and go to state 31
    RETURN          shift and go to state 54
    MODULES         shift and go to state 63
    EXFILES         shift and go to state 14
    INPUT           shift and go to state 95
    ABSPATH         shift and go to state 33
    INVRELPATH      shift and go to state 36
    SUBST           shift and go to state 102
    RELPATH         shift and go to state 25
    RELPATHBASE     shift and go to state 5
    WORD            shift and go to state 117
    LISTDIR         shift and go to state 30
    ISDIR           shift and go to state 51
    LBRACKET        shift and go to state 83
    STRING          shift and go to state 70
    FLOAT           shift and go to state 3
    NUMBER          shift and go to state 28
    AT              shift and go to state 56

    isdir                          shift and go to state 1
    undervar                       shift and go to state 62
    alg1                           shift and go to state 6
    expralg                        shift and go to state 64
    alg0                           shift and go to state 89
    length                         shift and go to state 66
    float                          shift and go to state 8
    equal                          shift and go to state 84
    less                           shift and go to state 9
    parttree                       shift and go to state 10
    element                        shift and go to state 13
    relpath                        shift and go to state 15
    invrelpath                     shift and go to state 16
    break                          shift and go to state 17
    alg2                           shift and go to state 2
    execfile                       shift and go to state 68
    alg3                           shift and go to state 19
    varvar                         shift and go to state 20
    return                         shift and go to state 65
    str                            shift and go to state 78
    list                           shift and go to state 23
    unless                         shift and go to state 81
    exfiles                        shift and go to state 85
    evaluate                       shift and go to state 92
    int                            shift and go to state 32
    curfile                        shift and go to state 35
    pass                           shift and go to state 37
    expr                           shift and go to state 128
    subst                          shift and go to state 86
    exectext                       shift and go to state 41
    var                            shift and go to state 116
    modules                        shift and go to state 91
    listdir                        shift and go to state 44
    term                           shift and go to state 45
    relpathbase                    shift and go to state 94
    input                          shift and go to state 48
    variables                      shift and go to state 96
    print                          shift and go to state 49
    func                           shift and go to state 50
    dict                           shift and go to state 98
    mlist                          shift and go to state 100
    block                          shift and go to state 76
    python                         shift and go to state 53
    cycle                          shift and go to state 97
    repeat                         shift and go to state 99
    yield                          shift and go to state 71
    abspath                        shift and go to state 58

state 48

    (76) expr -> input .

    EQUALS          reduce using rule 76 (expr -> input .)
    LBRACKET        reduce using rule 76 (expr -> input .)
    LESS            reduce using rule 76 (expr -> input .)
    RBRACKET        reduce using rule 76 (expr -> input .)
    COMMA           reduce using rule 76 (expr -> input .)
    RPAREN          reduce using rule 76 (expr -> input .)
    COLON           reduce using rule 76 (expr -> input .)
    DIVIDER         reduce using rule 76 (expr -> input .)
    $end            reduce using rule 76 (expr -> input .)
    RBRACE          reduce using rule 76 (expr -> input .)
    ELSE            reduce using rule 76 (expr -> input .)


state 49

    (53) expr -> print .

    EQUALS          reduce using rule 53 (expr -> print .)
    LBRACKET        reduce using rule 53 (expr -> print .)
    LESS            reduce using rule 53 (expr -> print .)
    RBRACKET        reduce using rule 53 (expr -> print .)
    COMMA           reduce using rule 53 (expr -> print .)
    RPAREN          reduce using rule 53 (expr -> print .)
    COLON           reduce using rule 53 (expr -> print .)
    DIVIDER         reduce using rule 53 (expr -> print .)
    $end            reduce using rule 53 (expr -> print .)
    RBRACE          reduce using rule 53 (expr -> print .)
    ELSE            reduce using rule 53 (expr -> print .)


state 50

    (83) expralg -> func .

    COLON           reduce using rule 83 (expralg -> func .)
    EQUALS          reduce using rule 83 (expralg -> func .)
    LBRACKET        reduce using rule 83 (expralg -> func .)
    LESS            reduce using rule 83 (expralg -> func .)
    DIVIDER         reduce using rule 83 (expralg -> func .)
    $end            reduce using rule 83 (expralg -> func .)
    RBRACE          reduce using rule 83 (expralg -> func .)
    RBRACKET        reduce using rule 83 (expralg -> func .)
    COMMA           reduce using rule 83 (expralg -> func .)
    RPAREN          reduce using rule 83 (expralg -> func .)
    ELSE            reduce using rule 83 (expralg -> func .)
    DPROD           reduce using rule 83 (expralg -> func .)
    DIVMUL          reduce using rule 83 (expralg -> func .)
    PLUSMINUS       reduce using rule 83 (expralg -> func .)


state 51

    (48) isdir -> ISDIR . LPAREN expr RPAREN

    LPAREN          shift and go to state 129


state 52

    (7) module -> MODULE . WORD block

    WORD            shift and go to state 130


state 53

    (56) expr -> python .

    EQUALS          reduce using rule 56 (expr -> python .)
    LBRACKET        reduce using rule 56 (expr -> python .)
    LESS            reduce using rule 56 (expr -> python .)
    RBRACKET        reduce using rule 56 (expr -> python .)
    COMMA           reduce using rule 56 (expr -> python .)
    RPAREN          reduce using rule 56 (expr -> python .)
    COLON           reduce using rule 56 (expr -> python .)
    DIVIDER         reduce using rule 56 (expr -> python .)
    $end            reduce using rule 56 (expr -> python .)
    RBRACE          reduce using rule 56 (expr -> python .)
    ELSE            reduce using rule 56 (expr -> python .)


state 54

    (88) return -> RETURN . expr
    (50) expr -> . expralg
    (51) expr -> . parttree
    (52) expr -> . alg0
    (53) expr -> . print
    (54) expr -> . varvar
    (55) expr -> . variables
    (56) expr -> . python
    (57) expr -> . execfile
    (58) expr -> . break
    (59) expr -> . unless
    (60) expr -> . curfile
    (61) expr -> . exectext
    (62) expr -> . equal
    (63) expr -> . element
    (64) expr -> . less
    (65) expr -> . length
    (66) expr -> . cycle
    (67) expr -> . mlist
    (68) expr -> . evaluate
    (69) expr -> . yield
    (70) expr -> . repeat
    (71) expr -> . pass
    (72) expr -> . dict
    (73) expr -> . return
    (74) expr -> . modules
    (75) expr -> . exfiles
    (76) expr -> . input
    (77) expralg -> . term
    (78) expralg -> . abspath
    (79) expralg -> . invrelpath
    (80) expralg -> . subst
    (81) expralg -> . relpath
    (82) expralg -> . relpathbase
    (83) expralg -> . func
    (84) expralg -> . listdir
    (85) expralg -> . isdir
    (86) expralg -> . block
    (87) expralg -> . list
    (41) parttree -> . AMPERSAND metaexpr
    (123) alg0 -> . alg1
    (124) alg0 -> . alg0 PLUSMINUS alg1
    (125) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (113) varvar -> . var
    (114) varvar -> . varvar POINT var
    (111) variables -> . VARIABLES expr
    (96) python -> . PYTHON str
    (97) execfile -> . EXECFILE expr
    (40) break -> . BREAK
    (17) unless -> . UNLESS LPAREN expr RPAREN expr
    (18) unless -> . UNLESS LPAREN expr RPAREN expr ELSE expr
    (115) curfile -> . CURFILE
    (103) exectext -> . EXECTEXT expr
    (46) equal -> . expr EQUALS expr
    (109) element -> . expr LBRACKET expr RBRACKET
    (101) less -> . expr LESS expr
    (102) length -> . LENGTH LPAREN expr RPAREN
    (89) cycle -> . CYCLE
    (112) mlist -> . MLIST COLON block
    (98) evaluate -> . EVALUATE expr
    (106) yield -> . YIELD
    (108) repeat -> . REPEAT
    (120) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (88) return -> . RETURN expr
    (21) modules -> . MODULES
    (117) exfiles -> . EXFILES
    (20) input -> . INPUT
    (90) term -> . str
    (91) term -> . float
    (92) term -> . int
    (93) term -> . var
    (94) term -> . undervar
    (122) abspath -> . ABSPATH
    (121) invrelpath -> . INVRELPATH
    (99) subst -> . SUBST LPAREN expr RPAREN
    (116) relpath -> . RELPATH
    (118) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN block
    (24) func -> . WORD LPAREN args RPAREN
    (49) listdir -> . LISTDIR LPAREN expr RPAREN
    (48) isdir -> . ISDIR LPAREN expr RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (126) alg1 -> . alg2
    (127) alg1 -> . alg1 DIVMUL alg2
    (110) var -> . WORD
    (107) str -> . STRING
    (105) float -> . FLOAT
    (95) int -> . NUMBER
    (38) undervar -> . AT undervar
    (39) undervar -> . AT var
    (128) alg2 -> . alg3
    (129) alg2 -> . alg2 DPROD alg3
    (130) alg3 -> . expralg

    AMPERSAND       shift and go to state 12
    PLUSMINUS       shift and go to state 69
    PRINT           shift and go to state 47
    VARIABLES       shift and go to state 55
    PYTHON          shift and go to state 57
    EXECFILE        shift and go to state 73
    BREAK           shift and go to state 82
    UNLESS          shift and go to state 74
    CURFILE         shift and go to state 88
    EXECTEXT        shift and go to state 39
    LENGTH          shift and go to state 7
    CYCLE           shift and go to state 43
    MLIST           shift and go to state 90
    EVALUATE        shift and go to state 26
    YIELD           shift and go to state 4
    REPEAT          shift and go to state 103
    PASS            shift and go to state 34
    LBRACE          shift and go to state 31
    RETURN          shift and go to state 54
    MODULES         shift and go to state 63
    EXFILES         shift and go to state 14
    INPUT           shift and go to state 95
    ABSPATH         shift and go to state 33
    INVRELPATH      shift and go to state 36
    SUBST           shift and go to state 102
    RELPATH         shift and go to state 25
    RELPATHBASE     shift and go to state 5
    WORD            shift and go to state 117
    LISTDIR         shift and go to state 30
    ISDIR           shift and go to state 51
    LBRACKET        shift and go to state 83
    STRING          shift and go to state 70
    FLOAT           shift and go to state 3
    NUMBER          shift and go to state 28
    AT              shift and go to state 56

    isdir                          shift and go to state 1
    undervar                       shift and go to state 62
    alg1                           shift and go to state 6
    expralg                        shift and go to state 64
    alg0                           shift and go to state 89
    length                         shift and go to state 66
    float                          shift and go to state 8
    equal                          shift and go to state 84
    less                           shift and go to state 9
    parttree                       shift and go to state 10
    element                        shift and go to state 13
    relpath                        shift and go to state 15
    invrelpath                     shift and go to state 16
    break                          shift and go to state 17
    alg2                           shift and go to state 2
    execfile                       shift and go to state 68
    alg3                           shift and go to state 19
    varvar                         shift and go to state 20
    return                         shift and go to state 65
    str                            shift and go to state 78
    list                           shift and go to state 23
    unless                         shift and go to state 81
    exfiles                        shift and go to state 85
    evaluate                       shift and go to state 92
    int                            shift and go to state 32
    curfile                        shift and go to state 35
    pass                           shift and go to state 37
    expr                           shift and go to state 131
    subst                          shift and go to state 86
    exectext                       shift and go to state 41
    var                            shift and go to state 116
    modules                        shift and go to state 91
    listdir                        shift and go to state 44
    term                           shift and go to state 45
    relpathbase                    shift and go to state 94
    input                          shift and go to state 48
    variables                      shift and go to state 96
    print                          shift and go to state 49
    func                           shift and go to state 50
    dict                           shift and go to state 98
    mlist                          shift and go to state 100
    block                          shift and go to state 76
    python                         shift and go to state 53
    cycle                          shift and go to state 97
    repeat                         shift and go to state 99
    yield                          shift and go to state 71
    abspath                        shift and go to state 58

state 55

    (111) variables -> VARIABLES . expr
    (50) expr -> . expralg
    (51) expr -> . parttree
    (52) expr -> . alg0
    (53) expr -> . print
    (54) expr -> . varvar
    (55) expr -> . variables
    (56) expr -> . python
    (57) expr -> . execfile
    (58) expr -> . break
    (59) expr -> . unless
    (60) expr -> . curfile
    (61) expr -> . exectext
    (62) expr -> . equal
    (63) expr -> . element
    (64) expr -> . less
    (65) expr -> . length
    (66) expr -> . cycle
    (67) expr -> . mlist
    (68) expr -> . evaluate
    (69) expr -> . yield
    (70) expr -> . repeat
    (71) expr -> . pass
    (72) expr -> . dict
    (73) expr -> . return
    (74) expr -> . modules
    (75) expr -> . exfiles
    (76) expr -> . input
    (77) expralg -> . term
    (78) expralg -> . abspath
    (79) expralg -> . invrelpath
    (80) expralg -> . subst
    (81) expralg -> . relpath
    (82) expralg -> . relpathbase
    (83) expralg -> . func
    (84) expralg -> . listdir
    (85) expralg -> . isdir
    (86) expralg -> . block
    (87) expralg -> . list
    (41) parttree -> . AMPERSAND metaexpr
    (123) alg0 -> . alg1
    (124) alg0 -> . alg0 PLUSMINUS alg1
    (125) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (113) varvar -> . var
    (114) varvar -> . varvar POINT var
    (111) variables -> . VARIABLES expr
    (96) python -> . PYTHON str
    (97) execfile -> . EXECFILE expr
    (40) break -> . BREAK
    (17) unless -> . UNLESS LPAREN expr RPAREN expr
    (18) unless -> . UNLESS LPAREN expr RPAREN expr ELSE expr
    (115) curfile -> . CURFILE
    (103) exectext -> . EXECTEXT expr
    (46) equal -> . expr EQUALS expr
    (109) element -> . expr LBRACKET expr RBRACKET
    (101) less -> . expr LESS expr
    (102) length -> . LENGTH LPAREN expr RPAREN
    (89) cycle -> . CYCLE
    (112) mlist -> . MLIST COLON block
    (98) evaluate -> . EVALUATE expr
    (106) yield -> . YIELD
    (108) repeat -> . REPEAT
    (120) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (88) return -> . RETURN expr
    (21) modules -> . MODULES
    (117) exfiles -> . EXFILES
    (20) input -> . INPUT
    (90) term -> . str
    (91) term -> . float
    (92) term -> . int
    (93) term -> . var
    (94) term -> . undervar
    (122) abspath -> . ABSPATH
    (121) invrelpath -> . INVRELPATH
    (99) subst -> . SUBST LPAREN expr RPAREN
    (116) relpath -> . RELPATH
    (118) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN block
    (24) func -> . WORD LPAREN args RPAREN
    (49) listdir -> . LISTDIR LPAREN expr RPAREN
    (48) isdir -> . ISDIR LPAREN expr RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (126) alg1 -> . alg2
    (127) alg1 -> . alg1 DIVMUL alg2
    (110) var -> . WORD
    (107) str -> . STRING
    (105) float -> . FLOAT
    (95) int -> . NUMBER
    (38) undervar -> . AT undervar
    (39) undervar -> . AT var
    (128) alg2 -> . alg3
    (129) alg2 -> . alg2 DPROD alg3
    (130) alg3 -> . expralg

    AMPERSAND       shift and go to state 12
    PLUSMINUS       shift and go to state 69
    PRINT           shift and go to state 47
    VARIABLES       shift and go to state 55
    PYTHON          shift and go to state 57
    EXECFILE        shift and go to state 73
    BREAK           shift and go to state 82
    UNLESS          shift and go to state 74
    CURFILE         shift and go to state 88
    EXECTEXT        shift and go to state 39
    LENGTH          shift and go to state 7
    CYCLE           shift and go to state 43
    MLIST           shift and go to state 90
    EVALUATE        shift and go to state 26
    YIELD           shift and go to state 4
    REPEAT          shift and go to state 103
    PASS            shift and go to state 34
    LBRACE          shift and go to state 31
    RETURN          shift and go to state 54
    MODULES         shift and go to state 63
    EXFILES         shift and go to state 14
    INPUT           shift and go to state 95
    ABSPATH         shift and go to state 33
    INVRELPATH      shift and go to state 36
    SUBST           shift and go to state 102
    RELPATH         shift and go to state 25
    RELPATHBASE     shift and go to state 5
    WORD            shift and go to state 117
    LISTDIR         shift and go to state 30
    ISDIR           shift and go to state 51
    LBRACKET        shift and go to state 83
    STRING          shift and go to state 70
    FLOAT           shift and go to state 3
    NUMBER          shift and go to state 28
    AT              shift and go to state 56

    isdir                          shift and go to state 1
    undervar                       shift and go to state 62
    alg1                           shift and go to state 6
    expralg                        shift and go to state 64
    alg0                           shift and go to state 89
    length                         shift and go to state 66
    float                          shift and go to state 8
    equal                          shift and go to state 84
    less                           shift and go to state 9
    parttree                       shift and go to state 10
    element                        shift and go to state 13
    relpath                        shift and go to state 15
    invrelpath                     shift and go to state 16
    break                          shift and go to state 17
    alg2                           shift and go to state 2
    execfile                       shift and go to state 68
    alg3                           shift and go to state 19
    varvar                         shift and go to state 20
    return                         shift and go to state 65
    str                            shift and go to state 78
    list                           shift and go to state 23
    unless                         shift and go to state 81
    exfiles                        shift and go to state 85
    evaluate                       shift and go to state 92
    int                            shift and go to state 32
    curfile                        shift and go to state 35
    pass                           shift and go to state 37
    expr                           shift and go to state 132
    subst                          shift and go to state 86
    exectext                       shift and go to state 41
    var                            shift and go to state 116
    modules                        shift and go to state 91
    listdir                        shift and go to state 44
    term                           shift and go to state 45
    relpathbase                    shift and go to state 94
    input                          shift and go to state 48
    variables                      shift and go to state 96
    print                          shift and go to state 49
    func                           shift and go to state 50
    dict                           shift and go to state 98
    mlist                          shift and go to state 100
    block                          shift and go to state 76
    python                         shift and go to state 53
    cycle                          shift and go to state 97
    repeat                         shift and go to state 99
    yield                          shift and go to state 71
    abspath                        shift and go to state 58

state 56

    (38) undervar -> AT . undervar
    (39) undervar -> AT . var
    (38) undervar -> . AT undervar
    (39) undervar -> . AT var
    (110) var -> . WORD

    AT              shift and go to state 56
    WORD            shift and go to state 133

    undervar                       shift and go to state 134
    var                            shift and go to state 135

state 57

    (96) python -> PYTHON . str
    (107) str -> . STRING

    STRING          shift and go to state 70

    str                            shift and go to state 136

state 58

    (78) expralg -> abspath .

    COLON           reduce using rule 78 (expralg -> abspath .)
    EQUALS          reduce using rule 78 (expralg -> abspath .)
    LBRACKET        reduce using rule 78 (expralg -> abspath .)
    LESS            reduce using rule 78 (expralg -> abspath .)
    DIVIDER         reduce using rule 78 (expralg -> abspath .)
    $end            reduce using rule 78 (expralg -> abspath .)
    RBRACE          reduce using rule 78 (expralg -> abspath .)
    RBRACKET        reduce using rule 78 (expralg -> abspath .)
    COMMA           reduce using rule 78 (expralg -> abspath .)
    RPAREN          reduce using rule 78 (expralg -> abspath .)
    ELSE            reduce using rule 78 (expralg -> abspath .)
    DPROD           reduce using rule 78 (expralg -> abspath .)
    DIVMUL          reduce using rule 78 (expralg -> abspath .)
    PLUSMINUS       reduce using rule 78 (expralg -> abspath .)


state 59

    (8) deffunc -> DEFFUNC . WORD LPAREN args RPAREN block

    WORD            shift and go to state 137


state 60

    (32) metaexpr -> execscan .

    DIVIDER         reduce using rule 32 (metaexpr -> execscan .)
    $end            reduce using rule 32 (metaexpr -> execscan .)
    RBRACE          reduce using rule 32 (metaexpr -> execscan .)
    COLON           reduce using rule 32 (metaexpr -> execscan .)
    EQUALS          reduce using rule 32 (metaexpr -> execscan .)
    LBRACKET        reduce using rule 32 (metaexpr -> execscan .)
    LESS            reduce using rule 32 (metaexpr -> execscan .)
    RBRACKET        reduce using rule 32 (metaexpr -> execscan .)
    COMMA           reduce using rule 32 (metaexpr -> execscan .)
    RPAREN          reduce using rule 32 (metaexpr -> execscan .)
    ELSE            reduce using rule 32 (metaexpr -> execscan .)


state 61

    (2) inblock -> metaexpr .

    DIVIDER         reduce using rule 2 (inblock -> metaexpr .)
    $end            reduce using rule 2 (inblock -> metaexpr .)
    RBRACE          reduce using rule 2 (inblock -> metaexpr .)


state 62

    (94) term -> undervar .

    COLON           reduce using rule 94 (term -> undervar .)
    EQUALS          reduce using rule 94 (term -> undervar .)
    LBRACKET        reduce using rule 94 (term -> undervar .)
    LESS            reduce using rule 94 (term -> undervar .)
    DIVIDER         reduce using rule 94 (term -> undervar .)
    $end            reduce using rule 94 (term -> undervar .)
    RBRACE          reduce using rule 94 (term -> undervar .)
    RBRACKET        reduce using rule 94 (term -> undervar .)
    COMMA           reduce using rule 94 (term -> undervar .)
    RPAREN          reduce using rule 94 (term -> undervar .)
    ELSE            reduce using rule 94 (term -> undervar .)
    DPROD           reduce using rule 94 (term -> undervar .)
    DIVMUL          reduce using rule 94 (term -> undervar .)
    PLUSMINUS       reduce using rule 94 (term -> undervar .)


state 63

    (21) modules -> MODULES .

    COLON           reduce using rule 21 (modules -> MODULES .)
    EQUALS          reduce using rule 21 (modules -> MODULES .)
    LBRACKET        reduce using rule 21 (modules -> MODULES .)
    LESS            reduce using rule 21 (modules -> MODULES .)
    DIVIDER         reduce using rule 21 (modules -> MODULES .)
    $end            reduce using rule 21 (modules -> MODULES .)
    RBRACE          reduce using rule 21 (modules -> MODULES .)
    RBRACKET        reduce using rule 21 (modules -> MODULES .)
    COMMA           reduce using rule 21 (modules -> MODULES .)
    RPAREN          reduce using rule 21 (modules -> MODULES .)
    ELSE            reduce using rule 21 (modules -> MODULES .)


state 64

    (50) expr -> expralg .
    (130) alg3 -> expralg .

  ! reduce/reduce conflict for RPAREN resolved using rule 50 (expr -> expralg .)
  ! reduce/reduce conflict for EQUALS resolved using rule 50 (expr -> expralg .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 50 (expr -> expralg .)
  ! reduce/reduce conflict for LESS resolved using rule 50 (expr -> expralg .)
  ! reduce/reduce conflict for COLON resolved using rule 50 (expr -> expralg .)
  ! reduce/reduce conflict for DIVIDER resolved using rule 50 (expr -> expralg .)
  ! reduce/reduce conflict for $end resolved using rule 50 (expr -> expralg .)
  ! reduce/reduce conflict for RBRACE resolved using rule 50 (expr -> expralg .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 50 (expr -> expralg .)
  ! reduce/reduce conflict for COMMA resolved using rule 50 (expr -> expralg .)
  ! reduce/reduce conflict for ELSE resolved using rule 50 (expr -> expralg .)
    EQUALS          reduce using rule 50 (expr -> expralg .)
    LBRACKET        reduce using rule 50 (expr -> expralg .)
    LESS            reduce using rule 50 (expr -> expralg .)
    RBRACKET        reduce using rule 50 (expr -> expralg .)
    COMMA           reduce using rule 50 (expr -> expralg .)
    RPAREN          reduce using rule 50 (expr -> expralg .)
    COLON           reduce using rule 50 (expr -> expralg .)
    DIVIDER         reduce using rule 50 (expr -> expralg .)
    $end            reduce using rule 50 (expr -> expralg .)
    RBRACE          reduce using rule 50 (expr -> expralg .)
    ELSE            reduce using rule 50 (expr -> expralg .)
    DPROD           reduce using rule 130 (alg3 -> expralg .)
    DIVMUL          reduce using rule 130 (alg3 -> expralg .)
    PLUSMINUS       reduce using rule 130 (alg3 -> expralg .)

  ! RPAREN          [ reduce using rule 130 (alg3 -> expralg .) ]
  ! EQUALS          [ reduce using rule 130 (alg3 -> expralg .) ]
  ! LBRACKET        [ reduce using rule 130 (alg3 -> expralg .) ]
  ! LESS            [ reduce using rule 130 (alg3 -> expralg .) ]
  ! COLON           [ reduce using rule 130 (alg3 -> expralg .) ]
  ! DIVIDER         [ reduce using rule 130 (alg3 -> expralg .) ]
  ! $end            [ reduce using rule 130 (alg3 -> expralg .) ]
  ! RBRACE          [ reduce using rule 130 (alg3 -> expralg .) ]
  ! RBRACKET        [ reduce using rule 130 (alg3 -> expralg .) ]
  ! COMMA           [ reduce using rule 130 (alg3 -> expralg .) ]
  ! ELSE            [ reduce using rule 130 (alg3 -> expralg .) ]


state 65

    (73) expr -> return .

    EQUALS          reduce using rule 73 (expr -> return .)
    LBRACKET        reduce using rule 73 (expr -> return .)
    LESS            reduce using rule 73 (expr -> return .)
    RBRACKET        reduce using rule 73 (expr -> return .)
    COMMA           reduce using rule 73 (expr -> return .)
    RPAREN          reduce using rule 73 (expr -> return .)
    COLON           reduce using rule 73 (expr -> return .)
    DIVIDER         reduce using rule 73 (expr -> return .)
    $end            reduce using rule 73 (expr -> return .)
    RBRACE          reduce using rule 73 (expr -> return .)
    ELSE            reduce using rule 73 (expr -> return .)


state 66

    (65) expr -> length .

    EQUALS          reduce using rule 65 (expr -> length .)
    LBRACKET        reduce using rule 65 (expr -> length .)
    LESS            reduce using rule 65 (expr -> length .)
    RBRACKET        reduce using rule 65 (expr -> length .)
    COMMA           reduce using rule 65 (expr -> length .)
    RPAREN          reduce using rule 65 (expr -> length .)
    COLON           reduce using rule 65 (expr -> length .)
    DIVIDER         reduce using rule 65 (expr -> length .)
    $end            reduce using rule 65 (expr -> length .)
    RBRACE          reduce using rule 65 (expr -> length .)
    ELSE            reduce using rule 65 (expr -> length .)


state 67

    (9) define -> DEFINE . WORD expr

    WORD            shift and go to state 138


state 68

    (57) expr -> execfile .

    EQUALS          reduce using rule 57 (expr -> execfile .)
    LBRACKET        reduce using rule 57 (expr -> execfile .)
    LESS            reduce using rule 57 (expr -> execfile .)
    RBRACKET        reduce using rule 57 (expr -> execfile .)
    COMMA           reduce using rule 57 (expr -> execfile .)
    RPAREN          reduce using rule 57 (expr -> execfile .)
    COLON           reduce using rule 57 (expr -> execfile .)
    DIVIDER         reduce using rule 57 (expr -> execfile .)
    $end            reduce using rule 57 (expr -> execfile .)
    RBRACE          reduce using rule 57 (expr -> execfile .)
    ELSE            reduce using rule 57 (expr -> execfile .)


state 69

    (125) alg0 -> PLUSMINUS . alg1
    (126) alg1 -> . alg2
    (127) alg1 -> . alg1 DIVMUL alg2
    (128) alg2 -> . alg3
    (129) alg2 -> . alg2 DPROD alg3
    (130) alg3 -> . expralg
    (77) expralg -> . term
    (78) expralg -> . abspath
    (79) expralg -> . invrelpath
    (80) expralg -> . subst
    (81) expralg -> . relpath
    (82) expralg -> . relpathbase
    (83) expralg -> . func
    (84) expralg -> . listdir
    (85) expralg -> . isdir
    (86) expralg -> . block
    (87) expralg -> . list
    (90) term -> . str
    (91) term -> . float
    (92) term -> . int
    (93) term -> . var
    (94) term -> . undervar
    (122) abspath -> . ABSPATH
    (121) invrelpath -> . INVRELPATH
    (99) subst -> . SUBST LPAREN expr RPAREN
    (116) relpath -> . RELPATH
    (118) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN block
    (24) func -> . WORD LPAREN args RPAREN
    (49) listdir -> . LISTDIR LPAREN expr RPAREN
    (48) isdir -> . ISDIR LPAREN expr RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (107) str -> . STRING
    (105) float -> . FLOAT
    (95) int -> . NUMBER
    (110) var -> . WORD
    (38) undervar -> . AT undervar
    (39) undervar -> . AT var

    ABSPATH         shift and go to state 33
    INVRELPATH      shift and go to state 36
    SUBST           shift and go to state 102
    RELPATH         shift and go to state 25
    RELPATHBASE     shift and go to state 5
    WORD            shift and go to state 117
    LISTDIR         shift and go to state 30
    ISDIR           shift and go to state 51
    LBRACE          shift and go to state 141
    LBRACKET        shift and go to state 83
    STRING          shift and go to state 70
    FLOAT           shift and go to state 3
    NUMBER          shift and go to state 28
    AT              shift and go to state 56

    isdir                          shift and go to state 1
    list                           shift and go to state 23
    undervar                       shift and go to state 62
    alg1                           shift and go to state 139
    subst                          shift and go to state 86
    int                            shift and go to state 32
    float                          shift and go to state 8
    str                            shift and go to state 78
    expralg                        shift and go to state 140
    relpath                        shift and go to state 15
    var                            shift and go to state 142
    invrelpath                     shift and go to state 16
    listdir                        shift and go to state 44
    term                           shift and go to state 45
    alg2                           shift and go to state 2
    func                           shift and go to state 50
    block                          shift and go to state 76
    alg3                           shift and go to state 19
    relpathbase                    shift and go to state 94
    abspath                        shift and go to state 58

state 70

    (107) str -> STRING .

    COLON           reduce using rule 107 (str -> STRING .)
    EQUALS          reduce using rule 107 (str -> STRING .)
    LBRACKET        reduce using rule 107 (str -> STRING .)
    LESS            reduce using rule 107 (str -> STRING .)
    DIVIDER         reduce using rule 107 (str -> STRING .)
    $end            reduce using rule 107 (str -> STRING .)
    RBRACE          reduce using rule 107 (str -> STRING .)
    RBRACKET        reduce using rule 107 (str -> STRING .)
    COMMA           reduce using rule 107 (str -> STRING .)
    RPAREN          reduce using rule 107 (str -> STRING .)
    ELSE            reduce using rule 107 (str -> STRING .)
    DPROD           reduce using rule 107 (str -> STRING .)
    DIVMUL          reduce using rule 107 (str -> STRING .)
    PLUSMINUS       reduce using rule 107 (str -> STRING .)


state 71

    (69) expr -> yield .

    EQUALS          reduce using rule 69 (expr -> yield .)
    LBRACKET        reduce using rule 69 (expr -> yield .)
    LESS            reduce using rule 69 (expr -> yield .)
    RBRACKET        reduce using rule 69 (expr -> yield .)
    COMMA           reduce using rule 69 (expr -> yield .)
    RPAREN          reduce using rule 69 (expr -> yield .)
    COLON           reduce using rule 69 (expr -> yield .)
    DIVIDER         reduce using rule 69 (expr -> yield .)
    $end            reduce using rule 69 (expr -> yield .)
    RBRACE          reduce using rule 69 (expr -> yield .)
    ELSE            reduce using rule 69 (expr -> yield .)


state 72

    (119) compile -> COMPILE .

    DIVIDER         reduce using rule 119 (compile -> COMPILE .)
    $end            reduce using rule 119 (compile -> COMPILE .)
    RBRACE          reduce using rule 119 (compile -> COMPILE .)
    COLON           reduce using rule 119 (compile -> COMPILE .)
    EQUALS          reduce using rule 119 (compile -> COMPILE .)
    LBRACKET        reduce using rule 119 (compile -> COMPILE .)
    LESS            reduce using rule 119 (compile -> COMPILE .)
    RBRACKET        reduce using rule 119 (compile -> COMPILE .)
    COMMA           reduce using rule 119 (compile -> COMPILE .)
    RPAREN          reduce using rule 119 (compile -> COMPILE .)
    ELSE            reduce using rule 119 (compile -> COMPILE .)


state 73

    (97) execfile -> EXECFILE . expr
    (50) expr -> . expralg
    (51) expr -> . parttree
    (52) expr -> . alg0
    (53) expr -> . print
    (54) expr -> . varvar
    (55) expr -> . variables
    (56) expr -> . python
    (57) expr -> . execfile
    (58) expr -> . break
    (59) expr -> . unless
    (60) expr -> . curfile
    (61) expr -> . exectext
    (62) expr -> . equal
    (63) expr -> . element
    (64) expr -> . less
    (65) expr -> . length
    (66) expr -> . cycle
    (67) expr -> . mlist
    (68) expr -> . evaluate
    (69) expr -> . yield
    (70) expr -> . repeat
    (71) expr -> . pass
    (72) expr -> . dict
    (73) expr -> . return
    (74) expr -> . modules
    (75) expr -> . exfiles
    (76) expr -> . input
    (77) expralg -> . term
    (78) expralg -> . abspath
    (79) expralg -> . invrelpath
    (80) expralg -> . subst
    (81) expralg -> . relpath
    (82) expralg -> . relpathbase
    (83) expralg -> . func
    (84) expralg -> . listdir
    (85) expralg -> . isdir
    (86) expralg -> . block
    (87) expralg -> . list
    (41) parttree -> . AMPERSAND metaexpr
    (123) alg0 -> . alg1
    (124) alg0 -> . alg0 PLUSMINUS alg1
    (125) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (113) varvar -> . var
    (114) varvar -> . varvar POINT var
    (111) variables -> . VARIABLES expr
    (96) python -> . PYTHON str
    (97) execfile -> . EXECFILE expr
    (40) break -> . BREAK
    (17) unless -> . UNLESS LPAREN expr RPAREN expr
    (18) unless -> . UNLESS LPAREN expr RPAREN expr ELSE expr
    (115) curfile -> . CURFILE
    (103) exectext -> . EXECTEXT expr
    (46) equal -> . expr EQUALS expr
    (109) element -> . expr LBRACKET expr RBRACKET
    (101) less -> . expr LESS expr
    (102) length -> . LENGTH LPAREN expr RPAREN
    (89) cycle -> . CYCLE
    (112) mlist -> . MLIST COLON block
    (98) evaluate -> . EVALUATE expr
    (106) yield -> . YIELD
    (108) repeat -> . REPEAT
    (120) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (88) return -> . RETURN expr
    (21) modules -> . MODULES
    (117) exfiles -> . EXFILES
    (20) input -> . INPUT
    (90) term -> . str
    (91) term -> . float
    (92) term -> . int
    (93) term -> . var
    (94) term -> . undervar
    (122) abspath -> . ABSPATH
    (121) invrelpath -> . INVRELPATH
    (99) subst -> . SUBST LPAREN expr RPAREN
    (116) relpath -> . RELPATH
    (118) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN block
    (24) func -> . WORD LPAREN args RPAREN
    (49) listdir -> . LISTDIR LPAREN expr RPAREN
    (48) isdir -> . ISDIR LPAREN expr RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (126) alg1 -> . alg2
    (127) alg1 -> . alg1 DIVMUL alg2
    (110) var -> . WORD
    (107) str -> . STRING
    (105) float -> . FLOAT
    (95) int -> . NUMBER
    (38) undervar -> . AT undervar
    (39) undervar -> . AT var
    (128) alg2 -> . alg3
    (129) alg2 -> . alg2 DPROD alg3
    (130) alg3 -> . expralg

    AMPERSAND       shift and go to state 12
    PLUSMINUS       shift and go to state 69
    PRINT           shift and go to state 47
    VARIABLES       shift and go to state 55
    PYTHON          shift and go to state 57
    EXECFILE        shift and go to state 73
    BREAK           shift and go to state 82
    UNLESS          shift and go to state 74
    CURFILE         shift and go to state 88
    EXECTEXT        shift and go to state 39
    LENGTH          shift and go to state 7
    CYCLE           shift and go to state 43
    MLIST           shift and go to state 90
    EVALUATE        shift and go to state 26
    YIELD           shift and go to state 4
    REPEAT          shift and go to state 103
    PASS            shift and go to state 34
    LBRACE          shift and go to state 31
    RETURN          shift and go to state 54
    MODULES         shift and go to state 63
    EXFILES         shift and go to state 14
    INPUT           shift and go to state 95
    ABSPATH         shift and go to state 33
    INVRELPATH      shift and go to state 36
    SUBST           shift and go to state 102
    RELPATH         shift and go to state 25
    RELPATHBASE     shift and go to state 5
    WORD            shift and go to state 117
    LISTDIR         shift and go to state 30
    ISDIR           shift and go to state 51
    LBRACKET        shift and go to state 83
    STRING          shift and go to state 70
    FLOAT           shift and go to state 3
    NUMBER          shift and go to state 28
    AT              shift and go to state 56

    isdir                          shift and go to state 1
    undervar                       shift and go to state 62
    alg1                           shift and go to state 6
    expralg                        shift and go to state 64
    alg0                           shift and go to state 89
    length                         shift and go to state 66
    float                          shift and go to state 8
    equal                          shift and go to state 84
    less                           shift and go to state 9
    parttree                       shift and go to state 10
    element                        shift and go to state 13
    relpath                        shift and go to state 15
    invrelpath                     shift and go to state 16
    break                          shift and go to state 17
    alg2                           shift and go to state 2
    execfile                       shift and go to state 68
    alg3                           shift and go to state 19
    varvar                         shift and go to state 20
    return                         shift and go to state 65
    str                            shift and go to state 78
    list                           shift and go to state 23
    unless                         shift and go to state 81
    exfiles                        shift and go to state 85
    evaluate                       shift and go to state 92
    int                            shift and go to state 32
    curfile                        shift and go to state 35
    pass                           shift and go to state 37
    expr                           shift and go to state 143
    subst                          shift and go to state 86
    exectext                       shift and go to state 41
    var                            shift and go to state 116
    modules                        shift and go to state 91
    listdir                        shift and go to state 44
    term                           shift and go to state 45
    relpathbase                    shift and go to state 94
    input                          shift and go to state 48
    variables                      shift and go to state 96
    print                          shift and go to state 49
    func                           shift and go to state 50
    dict                           shift and go to state 98
    mlist                          shift and go to state 100
    block                          shift and go to state 76
    python                         shift and go to state 53
    cycle                          shift and go to state 97
    repeat                         shift and go to state 99
    yield                          shift and go to state 71
    abspath                        shift and go to state 58

state 74

    (17) unless -> UNLESS . LPAREN expr RPAREN expr
    (18) unless -> UNLESS . LPAREN expr RPAREN expr ELSE expr

    LPAREN          shift and go to state 144


state 75

    (47) application -> APPLICATION . WORD block

    WORD            shift and go to state 145


state 76

    (86) expralg -> block .

    COLON           reduce using rule 86 (expralg -> block .)
    EQUALS          reduce using rule 86 (expralg -> block .)
    LBRACKET        reduce using rule 86 (expralg -> block .)
    LESS            reduce using rule 86 (expralg -> block .)
    DIVIDER         reduce using rule 86 (expralg -> block .)
    $end            reduce using rule 86 (expralg -> block .)
    RBRACE          reduce using rule 86 (expralg -> block .)
    RBRACKET        reduce using rule 86 (expralg -> block .)
    COMMA           reduce using rule 86 (expralg -> block .)
    RPAREN          reduce using rule 86 (expralg -> block .)
    ELSE            reduce using rule 86 (expralg -> block .)
    DPROD           reduce using rule 86 (expralg -> block .)
    DIVMUL          reduce using rule 86 (expralg -> block .)
    PLUSMINUS       reduce using rule 86 (expralg -> block .)


state 77

    (10) define -> WORD . DEFOP expr
    (110) var -> WORD .
    (23) func -> WORD . LPAREN args RPAREN block
    (24) func -> WORD . LPAREN args RPAREN

    DEFOP           shift and go to state 147
    APPEND          reduce using rule 110 (var -> WORD .)
    POINT           reduce using rule 110 (var -> WORD .)
    COLON           reduce using rule 110 (var -> WORD .)
    EQUALS          reduce using rule 110 (var -> WORD .)
    LBRACKET        reduce using rule 110 (var -> WORD .)
    LESS            reduce using rule 110 (var -> WORD .)
    DIVIDER         reduce using rule 110 (var -> WORD .)
    $end            reduce using rule 110 (var -> WORD .)
    RBRACE          reduce using rule 110 (var -> WORD .)
    RBRACKET        reduce using rule 110 (var -> WORD .)
    COMMA           reduce using rule 110 (var -> WORD .)
    RPAREN          reduce using rule 110 (var -> WORD .)
    ELSE            reduce using rule 110 (var -> WORD .)
    DPROD           reduce using rule 110 (var -> WORD .)
    DIVMUL          reduce using rule 110 (var -> WORD .)
    PLUSMINUS       reduce using rule 110 (var -> WORD .)
    LPAREN          shift and go to state 146


state 78

    (90) term -> str .

    COLON           reduce using rule 90 (term -> str .)
    EQUALS          reduce using rule 90 (term -> str .)
    LBRACKET        reduce using rule 90 (term -> str .)
    LESS            reduce using rule 90 (term -> str .)
    DIVIDER         reduce using rule 90 (term -> str .)
    $end            reduce using rule 90 (term -> str .)
    RBRACE          reduce using rule 90 (term -> str .)
    RBRACKET        reduce using rule 90 (term -> str .)
    COMMA           reduce using rule 90 (term -> str .)
    RPAREN          reduce using rule 90 (term -> str .)
    ELSE            reduce using rule 90 (term -> str .)
    DPROD           reduce using rule 90 (term -> str .)
    DIVMUL          reduce using rule 90 (term -> str .)
    PLUSMINUS       reduce using rule 90 (term -> str .)


state 79

    (34) metaexpr -> downlevel .

    DIVIDER         reduce using rule 34 (metaexpr -> downlevel .)
    $end            reduce using rule 34 (metaexpr -> downlevel .)
    RBRACE          reduce using rule 34 (metaexpr -> downlevel .)
    COLON           reduce using rule 34 (metaexpr -> downlevel .)
    EQUALS          reduce using rule 34 (metaexpr -> downlevel .)
    LBRACKET        reduce using rule 34 (metaexpr -> downlevel .)
    LESS            reduce using rule 34 (metaexpr -> downlevel .)
    RBRACKET        reduce using rule 34 (metaexpr -> downlevel .)
    COMMA           reduce using rule 34 (metaexpr -> downlevel .)
    RPAREN          reduce using rule 34 (metaexpr -> downlevel .)
    ELSE            reduce using rule 34 (metaexpr -> downlevel .)


state 80

    (33) metaexpr -> compile .

    DIVIDER         reduce using rule 33 (metaexpr -> compile .)
    $end            reduce using rule 33 (metaexpr -> compile .)
    RBRACE          reduce using rule 33 (metaexpr -> compile .)
    COLON           reduce using rule 33 (metaexpr -> compile .)
    EQUALS          reduce using rule 33 (metaexpr -> compile .)
    LBRACKET        reduce using rule 33 (metaexpr -> compile .)
    LESS            reduce using rule 33 (metaexpr -> compile .)
    RBRACKET        reduce using rule 33 (metaexpr -> compile .)
    COMMA           reduce using rule 33 (metaexpr -> compile .)
    RPAREN          reduce using rule 33 (metaexpr -> compile .)
    ELSE            reduce using rule 33 (metaexpr -> compile .)


state 81

    (59) expr -> unless .

    EQUALS          reduce using rule 59 (expr -> unless .)
    LBRACKET        reduce using rule 59 (expr -> unless .)
    LESS            reduce using rule 59 (expr -> unless .)
    RBRACKET        reduce using rule 59 (expr -> unless .)
    COMMA           reduce using rule 59 (expr -> unless .)
    RPAREN          reduce using rule 59 (expr -> unless .)
    COLON           reduce using rule 59 (expr -> unless .)
    DIVIDER         reduce using rule 59 (expr -> unless .)
    $end            reduce using rule 59 (expr -> unless .)
    RBRACE          reduce using rule 59 (expr -> unless .)
    ELSE            reduce using rule 59 (expr -> unless .)


state 82

    (40) break -> BREAK .

    RPAREN          reduce using rule 40 (break -> BREAK .)
    EQUALS          reduce using rule 40 (break -> BREAK .)
    LBRACKET        reduce using rule 40 (break -> BREAK .)
    LESS            reduce using rule 40 (break -> BREAK .)
    COLON           reduce using rule 40 (break -> BREAK .)
    DIVIDER         reduce using rule 40 (break -> BREAK .)
    $end            reduce using rule 40 (break -> BREAK .)
    RBRACE          reduce using rule 40 (break -> BREAK .)
    RBRACKET        reduce using rule 40 (break -> BREAK .)
    COMMA           reduce using rule 40 (break -> BREAK .)
    ELSE            reduce using rule 40 (break -> BREAK .)


state 83

    (36) list -> LBRACKET . comms RBRACKET
    (37) list -> LBRACKET . RBRACKET
    (44) comms -> . expr
    (45) comms -> . comms COMMA expr
    (50) expr -> . expralg
    (51) expr -> . parttree
    (52) expr -> . alg0
    (53) expr -> . print
    (54) expr -> . varvar
    (55) expr -> . variables
    (56) expr -> . python
    (57) expr -> . execfile
    (58) expr -> . break
    (59) expr -> . unless
    (60) expr -> . curfile
    (61) expr -> . exectext
    (62) expr -> . equal
    (63) expr -> . element
    (64) expr -> . less
    (65) expr -> . length
    (66) expr -> . cycle
    (67) expr -> . mlist
    (68) expr -> . evaluate
    (69) expr -> . yield
    (70) expr -> . repeat
    (71) expr -> . pass
    (72) expr -> . dict
    (73) expr -> . return
    (74) expr -> . modules
    (75) expr -> . exfiles
    (76) expr -> . input
    (77) expralg -> . term
    (78) expralg -> . abspath
    (79) expralg -> . invrelpath
    (80) expralg -> . subst
    (81) expralg -> . relpath
    (82) expralg -> . relpathbase
    (83) expralg -> . func
    (84) expralg -> . listdir
    (85) expralg -> . isdir
    (86) expralg -> . block
    (87) expralg -> . list
    (41) parttree -> . AMPERSAND metaexpr
    (123) alg0 -> . alg1
    (124) alg0 -> . alg0 PLUSMINUS alg1
    (125) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (113) varvar -> . var
    (114) varvar -> . varvar POINT var
    (111) variables -> . VARIABLES expr
    (96) python -> . PYTHON str
    (97) execfile -> . EXECFILE expr
    (40) break -> . BREAK
    (17) unless -> . UNLESS LPAREN expr RPAREN expr
    (18) unless -> . UNLESS LPAREN expr RPAREN expr ELSE expr
    (115) curfile -> . CURFILE
    (103) exectext -> . EXECTEXT expr
    (46) equal -> . expr EQUALS expr
    (109) element -> . expr LBRACKET expr RBRACKET
    (101) less -> . expr LESS expr
    (102) length -> . LENGTH LPAREN expr RPAREN
    (89) cycle -> . CYCLE
    (112) mlist -> . MLIST COLON block
    (98) evaluate -> . EVALUATE expr
    (106) yield -> . YIELD
    (108) repeat -> . REPEAT
    (120) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (88) return -> . RETURN expr
    (21) modules -> . MODULES
    (117) exfiles -> . EXFILES
    (20) input -> . INPUT
    (90) term -> . str
    (91) term -> . float
    (92) term -> . int
    (93) term -> . var
    (94) term -> . undervar
    (122) abspath -> . ABSPATH
    (121) invrelpath -> . INVRELPATH
    (99) subst -> . SUBST LPAREN expr RPAREN
    (116) relpath -> . RELPATH
    (118) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN block
    (24) func -> . WORD LPAREN args RPAREN
    (49) listdir -> . LISTDIR LPAREN expr RPAREN
    (48) isdir -> . ISDIR LPAREN expr RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (126) alg1 -> . alg2
    (127) alg1 -> . alg1 DIVMUL alg2
    (110) var -> . WORD
    (107) str -> . STRING
    (105) float -> . FLOAT
    (95) int -> . NUMBER
    (38) undervar -> . AT undervar
    (39) undervar -> . AT var
    (128) alg2 -> . alg3
    (129) alg2 -> . alg2 DPROD alg3
    (130) alg3 -> . expralg

    RBRACKET        shift and go to state 149
    AMPERSAND       shift and go to state 12
    PLUSMINUS       shift and go to state 69
    PRINT           shift and go to state 47
    VARIABLES       shift and go to state 55
    PYTHON          shift and go to state 57
    EXECFILE        shift and go to state 73
    BREAK           shift and go to state 82
    UNLESS          shift and go to state 74
    CURFILE         shift and go to state 88
    EXECTEXT        shift and go to state 39
    LENGTH          shift and go to state 7
    CYCLE           shift and go to state 43
    MLIST           shift and go to state 90
    EVALUATE        shift and go to state 26
    YIELD           shift and go to state 4
    REPEAT          shift and go to state 103
    PASS            shift and go to state 34
    LBRACE          shift and go to state 31
    RETURN          shift and go to state 54
    MODULES         shift and go to state 63
    EXFILES         shift and go to state 14
    INPUT           shift and go to state 95
    ABSPATH         shift and go to state 33
    INVRELPATH      shift and go to state 36
    SUBST           shift and go to state 102
    RELPATH         shift and go to state 25
    RELPATHBASE     shift and go to state 5
    WORD            shift and go to state 117
    LISTDIR         shift and go to state 30
    ISDIR           shift and go to state 51
    LBRACKET        shift and go to state 83
    STRING          shift and go to state 70
    FLOAT           shift and go to state 3
    NUMBER          shift and go to state 28
    AT              shift and go to state 56

    isdir                          shift and go to state 1
    undervar                       shift and go to state 62
    alg1                           shift and go to state 6
    expralg                        shift and go to state 64
    alg0                           shift and go to state 89
    length                         shift and go to state 66
    float                          shift and go to state 8
    equal                          shift and go to state 84
    less                           shift and go to state 9
    parttree                       shift and go to state 10
    element                        shift and go to state 13
    comms                          shift and go to state 150
    relpath                        shift and go to state 15
    invrelpath                     shift and go to state 16
    break                          shift and go to state 17
    alg2                           shift and go to state 2
    execfile                       shift and go to state 68
    alg3                           shift and go to state 19
    varvar                         shift and go to state 20
    return                         shift and go to state 65
    str                            shift and go to state 78
    list                           shift and go to state 23
    unless                         shift and go to state 81
    exfiles                        shift and go to state 85
    evaluate                       shift and go to state 92
    int                            shift and go to state 32
    curfile                        shift and go to state 35
    pass                           shift and go to state 37
    expr                           shift and go to state 148
    subst                          shift and go to state 86
    exectext                       shift and go to state 41
    var                            shift and go to state 116
    modules                        shift and go to state 91
    listdir                        shift and go to state 44
    term                           shift and go to state 45
    relpathbase                    shift and go to state 94
    input                          shift and go to state 48
    variables                      shift and go to state 96
    print                          shift and go to state 49
    func                           shift and go to state 50
    dict                           shift and go to state 98
    mlist                          shift and go to state 100
    block                          shift and go to state 76
    python                         shift and go to state 53
    cycle                          shift and go to state 97
    repeat                         shift and go to state 99
    yield                          shift and go to state 71
    abspath                        shift and go to state 58

state 84

    (62) expr -> equal .

    EQUALS          reduce using rule 62 (expr -> equal .)
    LBRACKET        reduce using rule 62 (expr -> equal .)
    LESS            reduce using rule 62 (expr -> equal .)
    RBRACKET        reduce using rule 62 (expr -> equal .)
    COMMA           reduce using rule 62 (expr -> equal .)
    RPAREN          reduce using rule 62 (expr -> equal .)
    COLON           reduce using rule 62 (expr -> equal .)
    DIVIDER         reduce using rule 62 (expr -> equal .)
    $end            reduce using rule 62 (expr -> equal .)
    RBRACE          reduce using rule 62 (expr -> equal .)
    ELSE            reduce using rule 62 (expr -> equal .)


state 85

    (75) expr -> exfiles .

    EQUALS          reduce using rule 75 (expr -> exfiles .)
    LBRACKET        reduce using rule 75 (expr -> exfiles .)
    LESS            reduce using rule 75 (expr -> exfiles .)
    RBRACKET        reduce using rule 75 (expr -> exfiles .)
    COMMA           reduce using rule 75 (expr -> exfiles .)
    RPAREN          reduce using rule 75 (expr -> exfiles .)
    COLON           reduce using rule 75 (expr -> exfiles .)
    DIVIDER         reduce using rule 75 (expr -> exfiles .)
    $end            reduce using rule 75 (expr -> exfiles .)
    RBRACE          reduce using rule 75 (expr -> exfiles .)
    ELSE            reduce using rule 75 (expr -> exfiles .)


state 86

    (80) expralg -> subst .

    COLON           reduce using rule 80 (expralg -> subst .)
    EQUALS          reduce using rule 80 (expralg -> subst .)
    LBRACKET        reduce using rule 80 (expralg -> subst .)
    LESS            reduce using rule 80 (expralg -> subst .)
    DIVIDER         reduce using rule 80 (expralg -> subst .)
    $end            reduce using rule 80 (expralg -> subst .)
    RBRACE          reduce using rule 80 (expralg -> subst .)
    RBRACKET        reduce using rule 80 (expralg -> subst .)
    COMMA           reduce using rule 80 (expralg -> subst .)
    RPAREN          reduce using rule 80 (expralg -> subst .)
    ELSE            reduce using rule 80 (expralg -> subst .)
    DPROD           reduce using rule 80 (expralg -> subst .)
    DIVMUL          reduce using rule 80 (expralg -> subst .)
    PLUSMINUS       reduce using rule 80 (expralg -> subst .)


state 87

    (35) metaexpr -> if .

    DIVIDER         reduce using rule 35 (metaexpr -> if .)
    $end            reduce using rule 35 (metaexpr -> if .)
    RBRACE          reduce using rule 35 (metaexpr -> if .)
    COLON           reduce using rule 35 (metaexpr -> if .)
    EQUALS          reduce using rule 35 (metaexpr -> if .)
    LBRACKET        reduce using rule 35 (metaexpr -> if .)
    LESS            reduce using rule 35 (metaexpr -> if .)
    RBRACKET        reduce using rule 35 (metaexpr -> if .)
    COMMA           reduce using rule 35 (metaexpr -> if .)
    RPAREN          reduce using rule 35 (metaexpr -> if .)
    ELSE            reduce using rule 35 (metaexpr -> if .)


state 88

    (115) curfile -> CURFILE .

    COLON           reduce using rule 115 (curfile -> CURFILE .)
    EQUALS          reduce using rule 115 (curfile -> CURFILE .)
    LBRACKET        reduce using rule 115 (curfile -> CURFILE .)
    LESS            reduce using rule 115 (curfile -> CURFILE .)
    DIVIDER         reduce using rule 115 (curfile -> CURFILE .)
    $end            reduce using rule 115 (curfile -> CURFILE .)
    RBRACE          reduce using rule 115 (curfile -> CURFILE .)
    RBRACKET        reduce using rule 115 (curfile -> CURFILE .)
    COMMA           reduce using rule 115 (curfile -> CURFILE .)
    RPAREN          reduce using rule 115 (curfile -> CURFILE .)
    ELSE            reduce using rule 115 (curfile -> CURFILE .)


state 89

    (52) expr -> alg0 .
    (124) alg0 -> alg0 . PLUSMINUS alg1

    EQUALS          reduce using rule 52 (expr -> alg0 .)
    LBRACKET        reduce using rule 52 (expr -> alg0 .)
    LESS            reduce using rule 52 (expr -> alg0 .)
    RBRACKET        reduce using rule 52 (expr -> alg0 .)
    COMMA           reduce using rule 52 (expr -> alg0 .)
    RPAREN          reduce using rule 52 (expr -> alg0 .)
    COLON           reduce using rule 52 (expr -> alg0 .)
    DIVIDER         reduce using rule 52 (expr -> alg0 .)
    $end            reduce using rule 52 (expr -> alg0 .)
    RBRACE          reduce using rule 52 (expr -> alg0 .)
    ELSE            reduce using rule 52 (expr -> alg0 .)
    PLUSMINUS       shift and go to state 151


state 90

    (112) mlist -> MLIST . COLON block

    COLON           shift and go to state 152


state 91

    (74) expr -> modules .

    EQUALS          reduce using rule 74 (expr -> modules .)
    LBRACKET        reduce using rule 74 (expr -> modules .)
    LESS            reduce using rule 74 (expr -> modules .)
    RBRACKET        reduce using rule 74 (expr -> modules .)
    COMMA           reduce using rule 74 (expr -> modules .)
    RPAREN          reduce using rule 74 (expr -> modules .)
    COLON           reduce using rule 74 (expr -> modules .)
    DIVIDER         reduce using rule 74 (expr -> modules .)
    $end            reduce using rule 74 (expr -> modules .)
    RBRACE          reduce using rule 74 (expr -> modules .)
    ELSE            reduce using rule 74 (expr -> modules .)


state 92

    (68) expr -> evaluate .

    EQUALS          reduce using rule 68 (expr -> evaluate .)
    LBRACKET        reduce using rule 68 (expr -> evaluate .)
    LESS            reduce using rule 68 (expr -> evaluate .)
    RBRACKET        reduce using rule 68 (expr -> evaluate .)
    COMMA           reduce using rule 68 (expr -> evaluate .)
    RPAREN          reduce using rule 68 (expr -> evaluate .)
    COLON           reduce using rule 68 (expr -> evaluate .)
    DIVIDER         reduce using rule 68 (expr -> evaluate .)
    $end            reduce using rule 68 (expr -> evaluate .)
    RBRACE          reduce using rule 68 (expr -> evaluate .)
    ELSE            reduce using rule 68 (expr -> evaluate .)


state 93

    (26) metaexpr -> deffunc .

    DIVIDER         reduce using rule 26 (metaexpr -> deffunc .)
    $end            reduce using rule 26 (metaexpr -> deffunc .)
    RBRACE          reduce using rule 26 (metaexpr -> deffunc .)
    COLON           reduce using rule 26 (metaexpr -> deffunc .)
    EQUALS          reduce using rule 26 (metaexpr -> deffunc .)
    LBRACKET        reduce using rule 26 (metaexpr -> deffunc .)
    LESS            reduce using rule 26 (metaexpr -> deffunc .)
    RBRACKET        reduce using rule 26 (metaexpr -> deffunc .)
    COMMA           reduce using rule 26 (metaexpr -> deffunc .)
    RPAREN          reduce using rule 26 (metaexpr -> deffunc .)
    ELSE            reduce using rule 26 (metaexpr -> deffunc .)


state 94

    (82) expralg -> relpathbase .

    COLON           reduce using rule 82 (expralg -> relpathbase .)
    EQUALS          reduce using rule 82 (expralg -> relpathbase .)
    LBRACKET        reduce using rule 82 (expralg -> relpathbase .)
    LESS            reduce using rule 82 (expralg -> relpathbase .)
    DIVIDER         reduce using rule 82 (expralg -> relpathbase .)
    $end            reduce using rule 82 (expralg -> relpathbase .)
    RBRACE          reduce using rule 82 (expralg -> relpathbase .)
    RBRACKET        reduce using rule 82 (expralg -> relpathbase .)
    COMMA           reduce using rule 82 (expralg -> relpathbase .)
    RPAREN          reduce using rule 82 (expralg -> relpathbase .)
    ELSE            reduce using rule 82 (expralg -> relpathbase .)
    DPROD           reduce using rule 82 (expralg -> relpathbase .)
    DIVMUL          reduce using rule 82 (expralg -> relpathbase .)
    PLUSMINUS       reduce using rule 82 (expralg -> relpathbase .)


state 95

    (20) input -> INPUT .

    COLON           reduce using rule 20 (input -> INPUT .)
    EQUALS          reduce using rule 20 (input -> INPUT .)
    LBRACKET        reduce using rule 20 (input -> INPUT .)
    LESS            reduce using rule 20 (input -> INPUT .)
    DIVIDER         reduce using rule 20 (input -> INPUT .)
    $end            reduce using rule 20 (input -> INPUT .)
    RBRACE          reduce using rule 20 (input -> INPUT .)
    RBRACKET        reduce using rule 20 (input -> INPUT .)
    COMMA           reduce using rule 20 (input -> INPUT .)
    RPAREN          reduce using rule 20 (input -> INPUT .)
    ELSE            reduce using rule 20 (input -> INPUT .)


state 96

    (55) expr -> variables .

    EQUALS          reduce using rule 55 (expr -> variables .)
    LBRACKET        reduce using rule 55 (expr -> variables .)
    LESS            reduce using rule 55 (expr -> variables .)
    RBRACKET        reduce using rule 55 (expr -> variables .)
    COMMA           reduce using rule 55 (expr -> variables .)
    RPAREN          reduce using rule 55 (expr -> variables .)
    COLON           reduce using rule 55 (expr -> variables .)
    DIVIDER         reduce using rule 55 (expr -> variables .)
    $end            reduce using rule 55 (expr -> variables .)
    RBRACE          reduce using rule 55 (expr -> variables .)
    ELSE            reduce using rule 55 (expr -> variables .)


state 97

    (66) expr -> cycle .

    EQUALS          reduce using rule 66 (expr -> cycle .)
    LBRACKET        reduce using rule 66 (expr -> cycle .)
    LESS            reduce using rule 66 (expr -> cycle .)
    RBRACKET        reduce using rule 66 (expr -> cycle .)
    COMMA           reduce using rule 66 (expr -> cycle .)
    RPAREN          reduce using rule 66 (expr -> cycle .)
    COLON           reduce using rule 66 (expr -> cycle .)
    DIVIDER         reduce using rule 66 (expr -> cycle .)
    $end            reduce using rule 66 (expr -> cycle .)
    RBRACE          reduce using rule 66 (expr -> cycle .)
    ELSE            reduce using rule 66 (expr -> cycle .)


state 98

    (72) expr -> dict .

    EQUALS          reduce using rule 72 (expr -> dict .)
    LBRACKET        reduce using rule 72 (expr -> dict .)
    LESS            reduce using rule 72 (expr -> dict .)
    RBRACKET        reduce using rule 72 (expr -> dict .)
    COMMA           reduce using rule 72 (expr -> dict .)
    RPAREN          reduce using rule 72 (expr -> dict .)
    COLON           reduce using rule 72 (expr -> dict .)
    DIVIDER         reduce using rule 72 (expr -> dict .)
    $end            reduce using rule 72 (expr -> dict .)
    RBRACE          reduce using rule 72 (expr -> dict .)
    ELSE            reduce using rule 72 (expr -> dict .)


state 99

    (70) expr -> repeat .

    EQUALS          reduce using rule 70 (expr -> repeat .)
    LBRACKET        reduce using rule 70 (expr -> repeat .)
    LESS            reduce using rule 70 (expr -> repeat .)
    RBRACKET        reduce using rule 70 (expr -> repeat .)
    COMMA           reduce using rule 70 (expr -> repeat .)
    RPAREN          reduce using rule 70 (expr -> repeat .)
    COLON           reduce using rule 70 (expr -> repeat .)
    DIVIDER         reduce using rule 70 (expr -> repeat .)
    $end            reduce using rule 70 (expr -> repeat .)
    RBRACE          reduce using rule 70 (expr -> repeat .)
    ELSE            reduce using rule 70 (expr -> repeat .)


state 100

    (67) expr -> mlist .

    EQUALS          reduce using rule 67 (expr -> mlist .)
    LBRACKET        reduce using rule 67 (expr -> mlist .)
    LESS            reduce using rule 67 (expr -> mlist .)
    RBRACKET        reduce using rule 67 (expr -> mlist .)
    COMMA           reduce using rule 67 (expr -> mlist .)
    RPAREN          reduce using rule 67 (expr -> mlist .)
    COLON           reduce using rule 67 (expr -> mlist .)
    DIVIDER         reduce using rule 67 (expr -> mlist .)
    $end            reduce using rule 67 (expr -> mlist .)
    RBRACE          reduce using rule 67 (expr -> mlist .)
    ELSE            reduce using rule 67 (expr -> mlist .)


state 101

    (16) if -> IF . LPAREN expr RPAREN expr

    LPAREN          shift and go to state 153


state 102

    (99) subst -> SUBST . LPAREN expr RPAREN

    LPAREN          shift and go to state 154


state 103

    (108) repeat -> REPEAT .

    COLON           reduce using rule 108 (repeat -> REPEAT .)
    EQUALS          reduce using rule 108 (repeat -> REPEAT .)
    LBRACKET        reduce using rule 108 (repeat -> REPEAT .)
    LESS            reduce using rule 108 (repeat -> REPEAT .)
    DIVIDER         reduce using rule 108 (repeat -> REPEAT .)
    $end            reduce using rule 108 (repeat -> REPEAT .)
    RBRACE          reduce using rule 108 (repeat -> REPEAT .)
    RBRACKET        reduce using rule 108 (repeat -> REPEAT .)
    COMMA           reduce using rule 108 (repeat -> REPEAT .)
    RPAREN          reduce using rule 108 (repeat -> REPEAT .)
    ELSE            reduce using rule 108 (repeat -> REPEAT .)


state 104

    (4) inblock -> divider . inblock
    (2) inblock -> . metaexpr
    (3) inblock -> . inblock divider metaexpr
    (4) inblock -> . divider inblock
    (5) inblock -> . inblock divider
    (25) metaexpr -> . expr
    (26) metaexpr -> . deffunc
    (27) metaexpr -> . module
    (28) metaexpr -> . application
    (29) metaexpr -> . declare
    (30) metaexpr -> . append
    (31) metaexpr -> . define
    (32) metaexpr -> . execscan
    (33) metaexpr -> . compile
    (34) metaexpr -> . downlevel
    (35) metaexpr -> . if
    (19) divider -> . DIVIDER
    (50) expr -> . expralg
    (51) expr -> . parttree
    (52) expr -> . alg0
    (53) expr -> . print
    (54) expr -> . varvar
    (55) expr -> . variables
    (56) expr -> . python
    (57) expr -> . execfile
    (58) expr -> . break
    (59) expr -> . unless
    (60) expr -> . curfile
    (61) expr -> . exectext
    (62) expr -> . equal
    (63) expr -> . element
    (64) expr -> . less
    (65) expr -> . length
    (66) expr -> . cycle
    (67) expr -> . mlist
    (68) expr -> . evaluate
    (69) expr -> . yield
    (70) expr -> . repeat
    (71) expr -> . pass
    (72) expr -> . dict
    (73) expr -> . return
    (74) expr -> . modules
    (75) expr -> . exfiles
    (76) expr -> . input
    (8) deffunc -> . DEFFUNC WORD LPAREN args RPAREN block
    (7) module -> . MODULE WORD block
    (47) application -> . APPLICATION WORD block
    (15) declare -> . expr COLON expr
    (22) append -> . var APPEND expr
    (9) define -> . DEFINE WORD expr
    (10) define -> . WORD DEFOP expr
    (100) execscan -> . EXECSCAN expr
    (119) compile -> . COMPILE
    (104) downlevel -> . DOWNLEVEL expr
    (16) if -> . IF LPAREN expr RPAREN expr
    (77) expralg -> . term
    (78) expralg -> . abspath
    (79) expralg -> . invrelpath
    (80) expralg -> . subst
    (81) expralg -> . relpath
    (82) expralg -> . relpathbase
    (83) expralg -> . func
    (84) expralg -> . listdir
    (85) expralg -> . isdir
    (86) expralg -> . block
    (87) expralg -> . list
    (41) parttree -> . AMPERSAND metaexpr
    (123) alg0 -> . alg1
    (124) alg0 -> . alg0 PLUSMINUS alg1
    (125) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (113) varvar -> . var
    (114) varvar -> . varvar POINT var
    (111) variables -> . VARIABLES expr
    (96) python -> . PYTHON str
    (97) execfile -> . EXECFILE expr
    (40) break -> . BREAK
    (17) unless -> . UNLESS LPAREN expr RPAREN expr
    (18) unless -> . UNLESS LPAREN expr RPAREN expr ELSE expr
    (115) curfile -> . CURFILE
    (103) exectext -> . EXECTEXT expr
    (46) equal -> . expr EQUALS expr
    (109) element -> . expr LBRACKET expr RBRACKET
    (101) less -> . expr LESS expr
    (102) length -> . LENGTH LPAREN expr RPAREN
    (89) cycle -> . CYCLE
    (112) mlist -> . MLIST COLON block
    (98) evaluate -> . EVALUATE expr
    (106) yield -> . YIELD
    (108) repeat -> . REPEAT
    (120) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (88) return -> . RETURN expr
    (21) modules -> . MODULES
    (117) exfiles -> . EXFILES
    (20) input -> . INPUT
    (110) var -> . WORD
    (90) term -> . str
    (91) term -> . float
    (92) term -> . int
    (93) term -> . var
    (94) term -> . undervar
    (122) abspath -> . ABSPATH
    (121) invrelpath -> . INVRELPATH
    (99) subst -> . SUBST LPAREN expr RPAREN
    (116) relpath -> . RELPATH
    (118) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN block
    (24) func -> . WORD LPAREN args RPAREN
    (49) listdir -> . LISTDIR LPAREN expr RPAREN
    (48) isdir -> . ISDIR LPAREN expr RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (126) alg1 -> . alg2
    (127) alg1 -> . alg1 DIVMUL alg2
    (107) str -> . STRING
    (105) float -> . FLOAT
    (95) int -> . NUMBER
    (38) undervar -> . AT undervar
    (39) undervar -> . AT var
    (128) alg2 -> . alg3
    (129) alg2 -> . alg2 DPROD alg3
    (130) alg3 -> . expralg

    DIVIDER         shift and go to state 38
    DEFFUNC         shift and go to state 59
    MODULE          shift and go to state 52
    APPLICATION     shift and go to state 75
    DEFINE          shift and go to state 67
    WORD            shift and go to state 77
    EXECSCAN        shift and go to state 46
    COMPILE         shift and go to state 72
    DOWNLEVEL       shift and go to state 29
    IF              shift and go to state 101
    AMPERSAND       shift and go to state 12
    PLUSMINUS       shift and go to state 69
    PRINT           shift and go to state 47
    VARIABLES       shift and go to state 55
    PYTHON          shift and go to state 57
    EXECFILE        shift and go to state 73
    BREAK           shift and go to state 82
    UNLESS          shift and go to state 74
    CURFILE         shift and go to state 88
    EXECTEXT        shift and go to state 39
    LENGTH          shift and go to state 7
    CYCLE           shift and go to state 43
    MLIST           shift and go to state 90
    EVALUATE        shift and go to state 26
    YIELD           shift and go to state 4
    REPEAT          shift and go to state 103
    PASS            shift and go to state 34
    LBRACE          shift and go to state 31
    RETURN          shift and go to state 54
    MODULES         shift and go to state 63
    EXFILES         shift and go to state 14
    INPUT           shift and go to state 95
    ABSPATH         shift and go to state 33
    INVRELPATH      shift and go to state 36
    SUBST           shift and go to state 102
    RELPATH         shift and go to state 25
    RELPATHBASE     shift and go to state 5
    LISTDIR         shift and go to state 30
    ISDIR           shift and go to state 51
    LBRACKET        shift and go to state 83
    STRING          shift and go to state 70
    FLOAT           shift and go to state 3
    NUMBER          shift and go to state 28
    AT              shift and go to state 56

    isdir                          shift and go to state 1
    metaexpr                       shift and go to state 61
    undervar                       shift and go to state 62
    alg1                           shift and go to state 6
    expralg                        shift and go to state 64
    curfile                        shift and go to state 35
    length                         shift and go to state 66
    parttree                       shift and go to state 10
    invrelpath                     shift and go to state 16
    float                          shift and go to state 8
    execfile                       shift and go to state 68
    less                           shift and go to state 9
    equal                          shift and go to state 84
    application                    shift and go to state 11
    subst                          shift and go to state 86
    pass                           shift and go to state 37
    element                        shift and go to state 13
    relpath                        shift and go to state 15
    modules                        shift and go to state 91
    break                          shift and go to state 17
    alg2                           shift and go to state 2
    list                           shift and go to state 23
    relpathbase                    shift and go to state 94
    alg3                           shift and go to state 19
    varvar                         shift and go to state 20
    expr                           shift and go to state 21
    return                         shift and go to state 65
    execscan                       shift and go to state 60
    str                            shift and go to state 78
    downlevel                      shift and go to state 79
    inblock                        shift and go to state 155
    unless                         shift and go to state 81
    exfiles                        shift and go to state 85
    func                           shift and go to state 50
    evaluate                       shift and go to state 92
    if                             shift and go to state 87
    int                            shift and go to state 32
    alg0                           shift and go to state 89
    declare                        shift and go to state 27
    compile                        shift and go to state 80
    define                         shift and go to state 40
    module                         shift and go to state 22
    exectext                       shift and go to state 41
    var                            shift and go to state 42
    listdir                        shift and go to state 44
    deffunc                        shift and go to state 93
    append                         shift and go to state 18
    input                          shift and go to state 48
    term                           shift and go to state 45
    variables                      shift and go to state 96
    print                          shift and go to state 49
    divider                        shift and go to state 104
    dict                           shift and go to state 98
    mlist                          shift and go to state 100
    block                          shift and go to state 76
    python                         shift and go to state 53
    cycle                          shift and go to state 97
    repeat                         shift and go to state 99
    yield                          shift and go to state 71
    abspath                        shift and go to state 58

state 105

    (129) alg2 -> alg2 DPROD . alg3
    (130) alg3 -> . expralg
    (77) expralg -> . term
    (78) expralg -> . abspath
    (79) expralg -> . invrelpath
    (80) expralg -> . subst
    (81) expralg -> . relpath
    (82) expralg -> . relpathbase
    (83) expralg -> . func
    (84) expralg -> . listdir
    (85) expralg -> . isdir
    (86) expralg -> . block
    (87) expralg -> . list
    (90) term -> . str
    (91) term -> . float
    (92) term -> . int
    (93) term -> . var
    (94) term -> . undervar
    (122) abspath -> . ABSPATH
    (121) invrelpath -> . INVRELPATH
    (99) subst -> . SUBST LPAREN expr RPAREN
    (116) relpath -> . RELPATH
    (118) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN block
    (24) func -> . WORD LPAREN args RPAREN
    (49) listdir -> . LISTDIR LPAREN expr RPAREN
    (48) isdir -> . ISDIR LPAREN expr RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (107) str -> . STRING
    (105) float -> . FLOAT
    (95) int -> . NUMBER
    (110) var -> . WORD
    (38) undervar -> . AT undervar
    (39) undervar -> . AT var

    ABSPATH         shift and go to state 33
    INVRELPATH      shift and go to state 36
    SUBST           shift and go to state 102
    RELPATH         shift and go to state 25
    RELPATHBASE     shift and go to state 5
    WORD            shift and go to state 117
    LISTDIR         shift and go to state 30
    ISDIR           shift and go to state 51
    LBRACE          shift and go to state 141
    LBRACKET        shift and go to state 83
    STRING          shift and go to state 70
    FLOAT           shift and go to state 3
    NUMBER          shift and go to state 28
    AT              shift and go to state 56

    isdir                          shift and go to state 1
    list                           shift and go to state 23
    undervar                       shift and go to state 62
    subst                          shift and go to state 86
    int                            shift and go to state 32
    float                          shift and go to state 8
    str                            shift and go to state 78
    expralg                        shift and go to state 140
    relpath                        shift and go to state 15
    var                            shift and go to state 142
    invrelpath                     shift and go to state 16
    listdir                        shift and go to state 44
    term                           shift and go to state 45
    func                           shift and go to state 50
    block                          shift and go to state 76
    alg3                           shift and go to state 156
    relpathbase                    shift and go to state 94
    abspath                        shift and go to state 58

state 106

    (127) alg1 -> alg1 DIVMUL . alg2
    (128) alg2 -> . alg3
    (129) alg2 -> . alg2 DPROD alg3
    (130) alg3 -> . expralg
    (77) expralg -> . term
    (78) expralg -> . abspath
    (79) expralg -> . invrelpath
    (80) expralg -> . subst
    (81) expralg -> . relpath
    (82) expralg -> . relpathbase
    (83) expralg -> . func
    (84) expralg -> . listdir
    (85) expralg -> . isdir
    (86) expralg -> . block
    (87) expralg -> . list
    (90) term -> . str
    (91) term -> . float
    (92) term -> . int
    (93) term -> . var
    (94) term -> . undervar
    (122) abspath -> . ABSPATH
    (121) invrelpath -> . INVRELPATH
    (99) subst -> . SUBST LPAREN expr RPAREN
    (116) relpath -> . RELPATH
    (118) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN block
    (24) func -> . WORD LPAREN args RPAREN
    (49) listdir -> . LISTDIR LPAREN expr RPAREN
    (48) isdir -> . ISDIR LPAREN expr RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (107) str -> . STRING
    (105) float -> . FLOAT
    (95) int -> . NUMBER
    (110) var -> . WORD
    (38) undervar -> . AT undervar
    (39) undervar -> . AT var

    ABSPATH         shift and go to state 33
    INVRELPATH      shift and go to state 36
    SUBST           shift and go to state 102
    RELPATH         shift and go to state 25
    RELPATHBASE     shift and go to state 5
    WORD            shift and go to state 117
    LISTDIR         shift and go to state 30
    ISDIR           shift and go to state 51
    LBRACE          shift and go to state 141
    LBRACKET        shift and go to state 83
    STRING          shift and go to state 70
    FLOAT           shift and go to state 3
    NUMBER          shift and go to state 28
    AT              shift and go to state 56

    isdir                          shift and go to state 1
    list                           shift and go to state 23
    undervar                       shift and go to state 62
    subst                          shift and go to state 86
    int                            shift and go to state 32
    float                          shift and go to state 8
    str                            shift and go to state 78
    expralg                        shift and go to state 140
    relpath                        shift and go to state 15
    var                            shift and go to state 142
    invrelpath                     shift and go to state 16
    listdir                        shift and go to state 44
    term                           shift and go to state 45
    alg2                           shift and go to state 157
    func                           shift and go to state 50
    block                          shift and go to state 76
    alg3                           shift and go to state 19
    relpathbase                    shift and go to state 94
    abspath                        shift and go to state 58

state 107

    (102) length -> LENGTH LPAREN . expr RPAREN
    (50) expr -> . expralg
    (51) expr -> . parttree
    (52) expr -> . alg0
    (53) expr -> . print
    (54) expr -> . varvar
    (55) expr -> . variables
    (56) expr -> . python
    (57) expr -> . execfile
    (58) expr -> . break
    (59) expr -> . unless
    (60) expr -> . curfile
    (61) expr -> . exectext
    (62) expr -> . equal
    (63) expr -> . element
    (64) expr -> . less
    (65) expr -> . length
    (66) expr -> . cycle
    (67) expr -> . mlist
    (68) expr -> . evaluate
    (69) expr -> . yield
    (70) expr -> . repeat
    (71) expr -> . pass
    (72) expr -> . dict
    (73) expr -> . return
    (74) expr -> . modules
    (75) expr -> . exfiles
    (76) expr -> . input
    (77) expralg -> . term
    (78) expralg -> . abspath
    (79) expralg -> . invrelpath
    (80) expralg -> . subst
    (81) expralg -> . relpath
    (82) expralg -> . relpathbase
    (83) expralg -> . func
    (84) expralg -> . listdir
    (85) expralg -> . isdir
    (86) expralg -> . block
    (87) expralg -> . list
    (41) parttree -> . AMPERSAND metaexpr
    (123) alg0 -> . alg1
    (124) alg0 -> . alg0 PLUSMINUS alg1
    (125) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (113) varvar -> . var
    (114) varvar -> . varvar POINT var
    (111) variables -> . VARIABLES expr
    (96) python -> . PYTHON str
    (97) execfile -> . EXECFILE expr
    (40) break -> . BREAK
    (17) unless -> . UNLESS LPAREN expr RPAREN expr
    (18) unless -> . UNLESS LPAREN expr RPAREN expr ELSE expr
    (115) curfile -> . CURFILE
    (103) exectext -> . EXECTEXT expr
    (46) equal -> . expr EQUALS expr
    (109) element -> . expr LBRACKET expr RBRACKET
    (101) less -> . expr LESS expr
    (102) length -> . LENGTH LPAREN expr RPAREN
    (89) cycle -> . CYCLE
    (112) mlist -> . MLIST COLON block
    (98) evaluate -> . EVALUATE expr
    (106) yield -> . YIELD
    (108) repeat -> . REPEAT
    (120) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (88) return -> . RETURN expr
    (21) modules -> . MODULES
    (117) exfiles -> . EXFILES
    (20) input -> . INPUT
    (90) term -> . str
    (91) term -> . float
    (92) term -> . int
    (93) term -> . var
    (94) term -> . undervar
    (122) abspath -> . ABSPATH
    (121) invrelpath -> . INVRELPATH
    (99) subst -> . SUBST LPAREN expr RPAREN
    (116) relpath -> . RELPATH
    (118) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN block
    (24) func -> . WORD LPAREN args RPAREN
    (49) listdir -> . LISTDIR LPAREN expr RPAREN
    (48) isdir -> . ISDIR LPAREN expr RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (126) alg1 -> . alg2
    (127) alg1 -> . alg1 DIVMUL alg2
    (110) var -> . WORD
    (107) str -> . STRING
    (105) float -> . FLOAT
    (95) int -> . NUMBER
    (38) undervar -> . AT undervar
    (39) undervar -> . AT var
    (128) alg2 -> . alg3
    (129) alg2 -> . alg2 DPROD alg3
    (130) alg3 -> . expralg

    AMPERSAND       shift and go to state 12
    PLUSMINUS       shift and go to state 69
    PRINT           shift and go to state 47
    VARIABLES       shift and go to state 55
    PYTHON          shift and go to state 57
    EXECFILE        shift and go to state 73
    BREAK           shift and go to state 82
    UNLESS          shift and go to state 74
    CURFILE         shift and go to state 88
    EXECTEXT        shift and go to state 39
    LENGTH          shift and go to state 7
    CYCLE           shift and go to state 43
    MLIST           shift and go to state 90
    EVALUATE        shift and go to state 26
    YIELD           shift and go to state 4
    REPEAT          shift and go to state 103
    PASS            shift and go to state 34
    LBRACE          shift and go to state 31
    RETURN          shift and go to state 54
    MODULES         shift and go to state 63
    EXFILES         shift and go to state 14
    INPUT           shift and go to state 95
    ABSPATH         shift and go to state 33
    INVRELPATH      shift and go to state 36
    SUBST           shift and go to state 102
    RELPATH         shift and go to state 25
    RELPATHBASE     shift and go to state 5
    WORD            shift and go to state 117
    LISTDIR         shift and go to state 30
    ISDIR           shift and go to state 51
    LBRACKET        shift and go to state 83
    STRING          shift and go to state 70
    FLOAT           shift and go to state 3
    NUMBER          shift and go to state 28
    AT              shift and go to state 56

    isdir                          shift and go to state 1
    undervar                       shift and go to state 62
    alg1                           shift and go to state 6
    expralg                        shift and go to state 64
    alg0                           shift and go to state 89
    length                         shift and go to state 66
    float                          shift and go to state 8
    equal                          shift and go to state 84
    less                           shift and go to state 9
    parttree                       shift and go to state 10
    element                        shift and go to state 13
    relpath                        shift and go to state 15
    invrelpath                     shift and go to state 16
    break                          shift and go to state 17
    alg2                           shift and go to state 2
    execfile                       shift and go to state 68
    alg3                           shift and go to state 19
    varvar                         shift and go to state 20
    return                         shift and go to state 65
    str                            shift and go to state 78
    list                           shift and go to state 23
    unless                         shift and go to state 81
    exfiles                        shift and go to state 85
    evaluate                       shift and go to state 92
    int                            shift and go to state 32
    curfile                        shift and go to state 35
    pass                           shift and go to state 37
    expr                           shift and go to state 158
    subst                          shift and go to state 86
    exectext                       shift and go to state 41
    var                            shift and go to state 116
    modules                        shift and go to state 91
    listdir                        shift and go to state 44
    term                           shift and go to state 45
    relpathbase                    shift and go to state 94
    input                          shift and go to state 48
    variables                      shift and go to state 96
    print                          shift and go to state 49
    func                           shift and go to state 50
    dict                           shift and go to state 98
    mlist                          shift and go to state 100
    block                          shift and go to state 76
    python                         shift and go to state 53
    cycle                          shift and go to state 97
    repeat                         shift and go to state 99
    yield                          shift and go to state 71
    abspath                        shift and go to state 58

state 108

    (41) parttree -> AMPERSAND metaexpr .

    RPAREN          reduce using rule 41 (parttree -> AMPERSAND metaexpr .)
    EQUALS          reduce using rule 41 (parttree -> AMPERSAND metaexpr .)
    LBRACKET        reduce using rule 41 (parttree -> AMPERSAND metaexpr .)
    LESS            reduce using rule 41 (parttree -> AMPERSAND metaexpr .)
    COLON           reduce using rule 41 (parttree -> AMPERSAND metaexpr .)
    RBRACE          reduce using rule 41 (parttree -> AMPERSAND metaexpr .)
    DIVIDER         reduce using rule 41 (parttree -> AMPERSAND metaexpr .)
    $end            reduce using rule 41 (parttree -> AMPERSAND metaexpr .)
    RBRACKET        reduce using rule 41 (parttree -> AMPERSAND metaexpr .)
    COMMA           reduce using rule 41 (parttree -> AMPERSAND metaexpr .)
    ELSE            reduce using rule 41 (parttree -> AMPERSAND metaexpr .)


state 109

    (114) varvar -> varvar POINT . var
    (110) var -> . WORD

    WORD            shift and go to state 133

    var                            shift and go to state 159

state 110

    (101) less -> expr LESS . expr
    (50) expr -> . expralg
    (51) expr -> . parttree
    (52) expr -> . alg0
    (53) expr -> . print
    (54) expr -> . varvar
    (55) expr -> . variables
    (56) expr -> . python
    (57) expr -> . execfile
    (58) expr -> . break
    (59) expr -> . unless
    (60) expr -> . curfile
    (61) expr -> . exectext
    (62) expr -> . equal
    (63) expr -> . element
    (64) expr -> . less
    (65) expr -> . length
    (66) expr -> . cycle
    (67) expr -> . mlist
    (68) expr -> . evaluate
    (69) expr -> . yield
    (70) expr -> . repeat
    (71) expr -> . pass
    (72) expr -> . dict
    (73) expr -> . return
    (74) expr -> . modules
    (75) expr -> . exfiles
    (76) expr -> . input
    (77) expralg -> . term
    (78) expralg -> . abspath
    (79) expralg -> . invrelpath
    (80) expralg -> . subst
    (81) expralg -> . relpath
    (82) expralg -> . relpathbase
    (83) expralg -> . func
    (84) expralg -> . listdir
    (85) expralg -> . isdir
    (86) expralg -> . block
    (87) expralg -> . list
    (41) parttree -> . AMPERSAND metaexpr
    (123) alg0 -> . alg1
    (124) alg0 -> . alg0 PLUSMINUS alg1
    (125) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (113) varvar -> . var
    (114) varvar -> . varvar POINT var
    (111) variables -> . VARIABLES expr
    (96) python -> . PYTHON str
    (97) execfile -> . EXECFILE expr
    (40) break -> . BREAK
    (17) unless -> . UNLESS LPAREN expr RPAREN expr
    (18) unless -> . UNLESS LPAREN expr RPAREN expr ELSE expr
    (115) curfile -> . CURFILE
    (103) exectext -> . EXECTEXT expr
    (46) equal -> . expr EQUALS expr
    (109) element -> . expr LBRACKET expr RBRACKET
    (101) less -> . expr LESS expr
    (102) length -> . LENGTH LPAREN expr RPAREN
    (89) cycle -> . CYCLE
    (112) mlist -> . MLIST COLON block
    (98) evaluate -> . EVALUATE expr
    (106) yield -> . YIELD
    (108) repeat -> . REPEAT
    (120) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (88) return -> . RETURN expr
    (21) modules -> . MODULES
    (117) exfiles -> . EXFILES
    (20) input -> . INPUT
    (90) term -> . str
    (91) term -> . float
    (92) term -> . int
    (93) term -> . var
    (94) term -> . undervar
    (122) abspath -> . ABSPATH
    (121) invrelpath -> . INVRELPATH
    (99) subst -> . SUBST LPAREN expr RPAREN
    (116) relpath -> . RELPATH
    (118) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN block
    (24) func -> . WORD LPAREN args RPAREN
    (49) listdir -> . LISTDIR LPAREN expr RPAREN
    (48) isdir -> . ISDIR LPAREN expr RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (126) alg1 -> . alg2
    (127) alg1 -> . alg1 DIVMUL alg2
    (110) var -> . WORD
    (107) str -> . STRING
    (105) float -> . FLOAT
    (95) int -> . NUMBER
    (38) undervar -> . AT undervar
    (39) undervar -> . AT var
    (128) alg2 -> . alg3
    (129) alg2 -> . alg2 DPROD alg3
    (130) alg3 -> . expralg

    AMPERSAND       shift and go to state 12
    PLUSMINUS       shift and go to state 69
    PRINT           shift and go to state 47
    VARIABLES       shift and go to state 55
    PYTHON          shift and go to state 57
    EXECFILE        shift and go to state 73
    BREAK           shift and go to state 82
    UNLESS          shift and go to state 74
    CURFILE         shift and go to state 88
    EXECTEXT        shift and go to state 39
    LENGTH          shift and go to state 7
    CYCLE           shift and go to state 43
    MLIST           shift and go to state 90
    EVALUATE        shift and go to state 26
    YIELD           shift and go to state 4
    REPEAT          shift and go to state 103
    PASS            shift and go to state 34
    LBRACE          shift and go to state 31
    RETURN          shift and go to state 54
    MODULES         shift and go to state 63
    EXFILES         shift and go to state 14
    INPUT           shift and go to state 95
    ABSPATH         shift and go to state 33
    INVRELPATH      shift and go to state 36
    SUBST           shift and go to state 102
    RELPATH         shift and go to state 25
    RELPATHBASE     shift and go to state 5
    WORD            shift and go to state 117
    LISTDIR         shift and go to state 30
    ISDIR           shift and go to state 51
    LBRACKET        shift and go to state 83
    STRING          shift and go to state 70
    FLOAT           shift and go to state 3
    NUMBER          shift and go to state 28
    AT              shift and go to state 56

    isdir                          shift and go to state 1
    undervar                       shift and go to state 62
    alg1                           shift and go to state 6
    expralg                        shift and go to state 64
    alg0                           shift and go to state 89
    length                         shift and go to state 66
    float                          shift and go to state 8
    equal                          shift and go to state 84
    less                           shift and go to state 9
    parttree                       shift and go to state 10
    element                        shift and go to state 13
    relpath                        shift and go to state 15
    invrelpath                     shift and go to state 16
    break                          shift and go to state 17
    alg2                           shift and go to state 2
    execfile                       shift and go to state 68
    alg3                           shift and go to state 19
    varvar                         shift and go to state 20
    return                         shift and go to state 65
    str                            shift and go to state 78
    list                           shift and go to state 23
    unless                         shift and go to state 81
    exfiles                        shift and go to state 85
    evaluate                       shift and go to state 92
    int                            shift and go to state 32
    curfile                        shift and go to state 35
    pass                           shift and go to state 37
    expr                           shift and go to state 160
    subst                          shift and go to state 86
    exectext                       shift and go to state 41
    var                            shift and go to state 116
    modules                        shift and go to state 91
    listdir                        shift and go to state 44
    term                           shift and go to state 45
    relpathbase                    shift and go to state 94
    input                          shift and go to state 48
    variables                      shift and go to state 96
    print                          shift and go to state 49
    func                           shift and go to state 50
    dict                           shift and go to state 98
    mlist                          shift and go to state 100
    block                          shift and go to state 76
    python                         shift and go to state 53
    cycle                          shift and go to state 97
    repeat                         shift and go to state 99
    yield                          shift and go to state 71
    abspath                        shift and go to state 58

state 111

    (46) equal -> expr EQUALS . expr
    (50) expr -> . expralg
    (51) expr -> . parttree
    (52) expr -> . alg0
    (53) expr -> . print
    (54) expr -> . varvar
    (55) expr -> . variables
    (56) expr -> . python
    (57) expr -> . execfile
    (58) expr -> . break
    (59) expr -> . unless
    (60) expr -> . curfile
    (61) expr -> . exectext
    (62) expr -> . equal
    (63) expr -> . element
    (64) expr -> . less
    (65) expr -> . length
    (66) expr -> . cycle
    (67) expr -> . mlist
    (68) expr -> . evaluate
    (69) expr -> . yield
    (70) expr -> . repeat
    (71) expr -> . pass
    (72) expr -> . dict
    (73) expr -> . return
    (74) expr -> . modules
    (75) expr -> . exfiles
    (76) expr -> . input
    (77) expralg -> . term
    (78) expralg -> . abspath
    (79) expralg -> . invrelpath
    (80) expralg -> . subst
    (81) expralg -> . relpath
    (82) expralg -> . relpathbase
    (83) expralg -> . func
    (84) expralg -> . listdir
    (85) expralg -> . isdir
    (86) expralg -> . block
    (87) expralg -> . list
    (41) parttree -> . AMPERSAND metaexpr
    (123) alg0 -> . alg1
    (124) alg0 -> . alg0 PLUSMINUS alg1
    (125) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (113) varvar -> . var
    (114) varvar -> . varvar POINT var
    (111) variables -> . VARIABLES expr
    (96) python -> . PYTHON str
    (97) execfile -> . EXECFILE expr
    (40) break -> . BREAK
    (17) unless -> . UNLESS LPAREN expr RPAREN expr
    (18) unless -> . UNLESS LPAREN expr RPAREN expr ELSE expr
    (115) curfile -> . CURFILE
    (103) exectext -> . EXECTEXT expr
    (46) equal -> . expr EQUALS expr
    (109) element -> . expr LBRACKET expr RBRACKET
    (101) less -> . expr LESS expr
    (102) length -> . LENGTH LPAREN expr RPAREN
    (89) cycle -> . CYCLE
    (112) mlist -> . MLIST COLON block
    (98) evaluate -> . EVALUATE expr
    (106) yield -> . YIELD
    (108) repeat -> . REPEAT
    (120) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (88) return -> . RETURN expr
    (21) modules -> . MODULES
    (117) exfiles -> . EXFILES
    (20) input -> . INPUT
    (90) term -> . str
    (91) term -> . float
    (92) term -> . int
    (93) term -> . var
    (94) term -> . undervar
    (122) abspath -> . ABSPATH
    (121) invrelpath -> . INVRELPATH
    (99) subst -> . SUBST LPAREN expr RPAREN
    (116) relpath -> . RELPATH
    (118) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN block
    (24) func -> . WORD LPAREN args RPAREN
    (49) listdir -> . LISTDIR LPAREN expr RPAREN
    (48) isdir -> . ISDIR LPAREN expr RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (126) alg1 -> . alg2
    (127) alg1 -> . alg1 DIVMUL alg2
    (110) var -> . WORD
    (107) str -> . STRING
    (105) float -> . FLOAT
    (95) int -> . NUMBER
    (38) undervar -> . AT undervar
    (39) undervar -> . AT var
    (128) alg2 -> . alg3
    (129) alg2 -> . alg2 DPROD alg3
    (130) alg3 -> . expralg

    AMPERSAND       shift and go to state 12
    PLUSMINUS       shift and go to state 69
    PRINT           shift and go to state 47
    VARIABLES       shift and go to state 55
    PYTHON          shift and go to state 57
    EXECFILE        shift and go to state 73
    BREAK           shift and go to state 82
    UNLESS          shift and go to state 74
    CURFILE         shift and go to state 88
    EXECTEXT        shift and go to state 39
    LENGTH          shift and go to state 7
    CYCLE           shift and go to state 43
    MLIST           shift and go to state 90
    EVALUATE        shift and go to state 26
    YIELD           shift and go to state 4
    REPEAT          shift and go to state 103
    PASS            shift and go to state 34
    LBRACE          shift and go to state 31
    RETURN          shift and go to state 54
    MODULES         shift and go to state 63
    EXFILES         shift and go to state 14
    INPUT           shift and go to state 95
    ABSPATH         shift and go to state 33
    INVRELPATH      shift and go to state 36
    SUBST           shift and go to state 102
    RELPATH         shift and go to state 25
    RELPATHBASE     shift and go to state 5
    WORD            shift and go to state 117
    LISTDIR         shift and go to state 30
    ISDIR           shift and go to state 51
    LBRACKET        shift and go to state 83
    STRING          shift and go to state 70
    FLOAT           shift and go to state 3
    NUMBER          shift and go to state 28
    AT              shift and go to state 56

    isdir                          shift and go to state 1
    undervar                       shift and go to state 62
    alg1                           shift and go to state 6
    expralg                        shift and go to state 64
    alg0                           shift and go to state 89
    length                         shift and go to state 66
    float                          shift and go to state 8
    equal                          shift and go to state 84
    less                           shift and go to state 9
    parttree                       shift and go to state 10
    element                        shift and go to state 13
    relpath                        shift and go to state 15
    invrelpath                     shift and go to state 16
    break                          shift and go to state 17
    alg2                           shift and go to state 2
    execfile                       shift and go to state 68
    alg3                           shift and go to state 19
    varvar                         shift and go to state 20
    return                         shift and go to state 65
    str                            shift and go to state 78
    list                           shift and go to state 23
    unless                         shift and go to state 81
    exfiles                        shift and go to state 85
    evaluate                       shift and go to state 92
    int                            shift and go to state 32
    curfile                        shift and go to state 35
    pass                           shift and go to state 37
    expr                           shift and go to state 161
    subst                          shift and go to state 86
    exectext                       shift and go to state 41
    var                            shift and go to state 116
    modules                        shift and go to state 91
    listdir                        shift and go to state 44
    term                           shift and go to state 45
    relpathbase                    shift and go to state 94
    input                          shift and go to state 48
    variables                      shift and go to state 96
    print                          shift and go to state 49
    func                           shift and go to state 50
    dict                           shift and go to state 98
    mlist                          shift and go to state 100
    block                          shift and go to state 76
    python                         shift and go to state 53
    cycle                          shift and go to state 97
    repeat                         shift and go to state 99
    yield                          shift and go to state 71
    abspath                        shift and go to state 58

state 112

    (109) element -> expr LBRACKET . expr RBRACKET
    (50) expr -> . expralg
    (51) expr -> . parttree
    (52) expr -> . alg0
    (53) expr -> . print
    (54) expr -> . varvar
    (55) expr -> . variables
    (56) expr -> . python
    (57) expr -> . execfile
    (58) expr -> . break
    (59) expr -> . unless
    (60) expr -> . curfile
    (61) expr -> . exectext
    (62) expr -> . equal
    (63) expr -> . element
    (64) expr -> . less
    (65) expr -> . length
    (66) expr -> . cycle
    (67) expr -> . mlist
    (68) expr -> . evaluate
    (69) expr -> . yield
    (70) expr -> . repeat
    (71) expr -> . pass
    (72) expr -> . dict
    (73) expr -> . return
    (74) expr -> . modules
    (75) expr -> . exfiles
    (76) expr -> . input
    (77) expralg -> . term
    (78) expralg -> . abspath
    (79) expralg -> . invrelpath
    (80) expralg -> . subst
    (81) expralg -> . relpath
    (82) expralg -> . relpathbase
    (83) expralg -> . func
    (84) expralg -> . listdir
    (85) expralg -> . isdir
    (86) expralg -> . block
    (87) expralg -> . list
    (41) parttree -> . AMPERSAND metaexpr
    (123) alg0 -> . alg1
    (124) alg0 -> . alg0 PLUSMINUS alg1
    (125) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (113) varvar -> . var
    (114) varvar -> . varvar POINT var
    (111) variables -> . VARIABLES expr
    (96) python -> . PYTHON str
    (97) execfile -> . EXECFILE expr
    (40) break -> . BREAK
    (17) unless -> . UNLESS LPAREN expr RPAREN expr
    (18) unless -> . UNLESS LPAREN expr RPAREN expr ELSE expr
    (115) curfile -> . CURFILE
    (103) exectext -> . EXECTEXT expr
    (46) equal -> . expr EQUALS expr
    (109) element -> . expr LBRACKET expr RBRACKET
    (101) less -> . expr LESS expr
    (102) length -> . LENGTH LPAREN expr RPAREN
    (89) cycle -> . CYCLE
    (112) mlist -> . MLIST COLON block
    (98) evaluate -> . EVALUATE expr
    (106) yield -> . YIELD
    (108) repeat -> . REPEAT
    (120) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (88) return -> . RETURN expr
    (21) modules -> . MODULES
    (117) exfiles -> . EXFILES
    (20) input -> . INPUT
    (90) term -> . str
    (91) term -> . float
    (92) term -> . int
    (93) term -> . var
    (94) term -> . undervar
    (122) abspath -> . ABSPATH
    (121) invrelpath -> . INVRELPATH
    (99) subst -> . SUBST LPAREN expr RPAREN
    (116) relpath -> . RELPATH
    (118) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN block
    (24) func -> . WORD LPAREN args RPAREN
    (49) listdir -> . LISTDIR LPAREN expr RPAREN
    (48) isdir -> . ISDIR LPAREN expr RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (126) alg1 -> . alg2
    (127) alg1 -> . alg1 DIVMUL alg2
    (110) var -> . WORD
    (107) str -> . STRING
    (105) float -> . FLOAT
    (95) int -> . NUMBER
    (38) undervar -> . AT undervar
    (39) undervar -> . AT var
    (128) alg2 -> . alg3
    (129) alg2 -> . alg2 DPROD alg3
    (130) alg3 -> . expralg

    AMPERSAND       shift and go to state 12
    PLUSMINUS       shift and go to state 69
    PRINT           shift and go to state 47
    VARIABLES       shift and go to state 55
    PYTHON          shift and go to state 57
    EXECFILE        shift and go to state 73
    BREAK           shift and go to state 82
    UNLESS          shift and go to state 74
    CURFILE         shift and go to state 88
    EXECTEXT        shift and go to state 39
    LENGTH          shift and go to state 7
    CYCLE           shift and go to state 43
    MLIST           shift and go to state 90
    EVALUATE        shift and go to state 26
    YIELD           shift and go to state 4
    REPEAT          shift and go to state 103
    PASS            shift and go to state 34
    LBRACE          shift and go to state 31
    RETURN          shift and go to state 54
    MODULES         shift and go to state 63
    EXFILES         shift and go to state 14
    INPUT           shift and go to state 95
    ABSPATH         shift and go to state 33
    INVRELPATH      shift and go to state 36
    SUBST           shift and go to state 102
    RELPATH         shift and go to state 25
    RELPATHBASE     shift and go to state 5
    WORD            shift and go to state 117
    LISTDIR         shift and go to state 30
    ISDIR           shift and go to state 51
    LBRACKET        shift and go to state 83
    STRING          shift and go to state 70
    FLOAT           shift and go to state 3
    NUMBER          shift and go to state 28
    AT              shift and go to state 56

    isdir                          shift and go to state 1
    undervar                       shift and go to state 62
    alg1                           shift and go to state 6
    expralg                        shift and go to state 64
    alg0                           shift and go to state 89
    length                         shift and go to state 66
    float                          shift and go to state 8
    equal                          shift and go to state 84
    less                           shift and go to state 9
    parttree                       shift and go to state 10
    element                        shift and go to state 13
    relpath                        shift and go to state 15
    invrelpath                     shift and go to state 16
    break                          shift and go to state 17
    alg2                           shift and go to state 2
    execfile                       shift and go to state 68
    alg3                           shift and go to state 19
    varvar                         shift and go to state 20
    return                         shift and go to state 65
    str                            shift and go to state 78
    list                           shift and go to state 23
    unless                         shift and go to state 81
    exfiles                        shift and go to state 85
    evaluate                       shift and go to state 92
    int                            shift and go to state 32
    curfile                        shift and go to state 35
    pass                           shift and go to state 37
    expr                           shift and go to state 162
    subst                          shift and go to state 86
    exectext                       shift and go to state 41
    var                            shift and go to state 116
    modules                        shift and go to state 91
    listdir                        shift and go to state 44
    term                           shift and go to state 45
    relpathbase                    shift and go to state 94
    input                          shift and go to state 48
    variables                      shift and go to state 96
    print                          shift and go to state 49
    func                           shift and go to state 50
    dict                           shift and go to state 98
    mlist                          shift and go to state 100
    block                          shift and go to state 76
    python                         shift and go to state 53
    cycle                          shift and go to state 97
    repeat                         shift and go to state 99
    yield                          shift and go to state 71
    abspath                        shift and go to state 58

state 113

    (15) declare -> expr COLON . expr
    (50) expr -> . expralg
    (51) expr -> . parttree
    (52) expr -> . alg0
    (53) expr -> . print
    (54) expr -> . varvar
    (55) expr -> . variables
    (56) expr -> . python
    (57) expr -> . execfile
    (58) expr -> . break
    (59) expr -> . unless
    (60) expr -> . curfile
    (61) expr -> . exectext
    (62) expr -> . equal
    (63) expr -> . element
    (64) expr -> . less
    (65) expr -> . length
    (66) expr -> . cycle
    (67) expr -> . mlist
    (68) expr -> . evaluate
    (69) expr -> . yield
    (70) expr -> . repeat
    (71) expr -> . pass
    (72) expr -> . dict
    (73) expr -> . return
    (74) expr -> . modules
    (75) expr -> . exfiles
    (76) expr -> . input
    (77) expralg -> . term
    (78) expralg -> . abspath
    (79) expralg -> . invrelpath
    (80) expralg -> . subst
    (81) expralg -> . relpath
    (82) expralg -> . relpathbase
    (83) expralg -> . func
    (84) expralg -> . listdir
    (85) expralg -> . isdir
    (86) expralg -> . block
    (87) expralg -> . list
    (41) parttree -> . AMPERSAND metaexpr
    (123) alg0 -> . alg1
    (124) alg0 -> . alg0 PLUSMINUS alg1
    (125) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (113) varvar -> . var
    (114) varvar -> . varvar POINT var
    (111) variables -> . VARIABLES expr
    (96) python -> . PYTHON str
    (97) execfile -> . EXECFILE expr
    (40) break -> . BREAK
    (17) unless -> . UNLESS LPAREN expr RPAREN expr
    (18) unless -> . UNLESS LPAREN expr RPAREN expr ELSE expr
    (115) curfile -> . CURFILE
    (103) exectext -> . EXECTEXT expr
    (46) equal -> . expr EQUALS expr
    (109) element -> . expr LBRACKET expr RBRACKET
    (101) less -> . expr LESS expr
    (102) length -> . LENGTH LPAREN expr RPAREN
    (89) cycle -> . CYCLE
    (112) mlist -> . MLIST COLON block
    (98) evaluate -> . EVALUATE expr
    (106) yield -> . YIELD
    (108) repeat -> . REPEAT
    (120) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (88) return -> . RETURN expr
    (21) modules -> . MODULES
    (117) exfiles -> . EXFILES
    (20) input -> . INPUT
    (90) term -> . str
    (91) term -> . float
    (92) term -> . int
    (93) term -> . var
    (94) term -> . undervar
    (122) abspath -> . ABSPATH
    (121) invrelpath -> . INVRELPATH
    (99) subst -> . SUBST LPAREN expr RPAREN
    (116) relpath -> . RELPATH
    (118) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN block
    (24) func -> . WORD LPAREN args RPAREN
    (49) listdir -> . LISTDIR LPAREN expr RPAREN
    (48) isdir -> . ISDIR LPAREN expr RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (126) alg1 -> . alg2
    (127) alg1 -> . alg1 DIVMUL alg2
    (110) var -> . WORD
    (107) str -> . STRING
    (105) float -> . FLOAT
    (95) int -> . NUMBER
    (38) undervar -> . AT undervar
    (39) undervar -> . AT var
    (128) alg2 -> . alg3
    (129) alg2 -> . alg2 DPROD alg3
    (130) alg3 -> . expralg

    AMPERSAND       shift and go to state 12
    PLUSMINUS       shift and go to state 69
    PRINT           shift and go to state 47
    VARIABLES       shift and go to state 55
    PYTHON          shift and go to state 57
    EXECFILE        shift and go to state 73
    BREAK           shift and go to state 82
    UNLESS          shift and go to state 74
    CURFILE         shift and go to state 88
    EXECTEXT        shift and go to state 39
    LENGTH          shift and go to state 7
    CYCLE           shift and go to state 43
    MLIST           shift and go to state 90
    EVALUATE        shift and go to state 26
    YIELD           shift and go to state 4
    REPEAT          shift and go to state 103
    PASS            shift and go to state 34
    LBRACE          shift and go to state 31
    RETURN          shift and go to state 54
    MODULES         shift and go to state 63
    EXFILES         shift and go to state 14
    INPUT           shift and go to state 95
    ABSPATH         shift and go to state 33
    INVRELPATH      shift and go to state 36
    SUBST           shift and go to state 102
    RELPATH         shift and go to state 25
    RELPATHBASE     shift and go to state 5
    WORD            shift and go to state 117
    LISTDIR         shift and go to state 30
    ISDIR           shift and go to state 51
    LBRACKET        shift and go to state 83
    STRING          shift and go to state 70
    FLOAT           shift and go to state 3
    NUMBER          shift and go to state 28
    AT              shift and go to state 56

    isdir                          shift and go to state 1
    undervar                       shift and go to state 62
    alg1                           shift and go to state 6
    expralg                        shift and go to state 64
    alg0                           shift and go to state 89
    length                         shift and go to state 66
    float                          shift and go to state 8
    equal                          shift and go to state 84
    less                           shift and go to state 9
    parttree                       shift and go to state 10
    element                        shift and go to state 13
    relpath                        shift and go to state 15
    invrelpath                     shift and go to state 16
    break                          shift and go to state 17
    alg2                           shift and go to state 2
    execfile                       shift and go to state 68
    alg3                           shift and go to state 19
    varvar                         shift and go to state 20
    return                         shift and go to state 65
    str                            shift and go to state 78
    list                           shift and go to state 23
    unless                         shift and go to state 81
    exfiles                        shift and go to state 85
    evaluate                       shift and go to state 92
    int                            shift and go to state 32
    curfile                        shift and go to state 35
    pass                           shift and go to state 37
    expr                           shift and go to state 163
    subst                          shift and go to state 86
    exectext                       shift and go to state 41
    var                            shift and go to state 116
    modules                        shift and go to state 91
    listdir                        shift and go to state 44
    term                           shift and go to state 45
    relpathbase                    shift and go to state 94
    input                          shift and go to state 48
    variables                      shift and go to state 96
    print                          shift and go to state 49
    func                           shift and go to state 50
    dict                           shift and go to state 98
    mlist                          shift and go to state 100
    block                          shift and go to state 76
    python                         shift and go to state 53
    cycle                          shift and go to state 97
    repeat                         shift and go to state 99
    yield                          shift and go to state 71
    abspath                        shift and go to state 58

state 114

    (3) inblock -> inblock divider . metaexpr
    (5) inblock -> inblock divider .
    (25) metaexpr -> . expr
    (26) metaexpr -> . deffunc
    (27) metaexpr -> . module
    (28) metaexpr -> . application
    (29) metaexpr -> . declare
    (30) metaexpr -> . append
    (31) metaexpr -> . define
    (32) metaexpr -> . execscan
    (33) metaexpr -> . compile
    (34) metaexpr -> . downlevel
    (35) metaexpr -> . if
    (50) expr -> . expralg
    (51) expr -> . parttree
    (52) expr -> . alg0
    (53) expr -> . print
    (54) expr -> . varvar
    (55) expr -> . variables
    (56) expr -> . python
    (57) expr -> . execfile
    (58) expr -> . break
    (59) expr -> . unless
    (60) expr -> . curfile
    (61) expr -> . exectext
    (62) expr -> . equal
    (63) expr -> . element
    (64) expr -> . less
    (65) expr -> . length
    (66) expr -> . cycle
    (67) expr -> . mlist
    (68) expr -> . evaluate
    (69) expr -> . yield
    (70) expr -> . repeat
    (71) expr -> . pass
    (72) expr -> . dict
    (73) expr -> . return
    (74) expr -> . modules
    (75) expr -> . exfiles
    (76) expr -> . input
    (8) deffunc -> . DEFFUNC WORD LPAREN args RPAREN block
    (7) module -> . MODULE WORD block
    (47) application -> . APPLICATION WORD block
    (15) declare -> . expr COLON expr
    (22) append -> . var APPEND expr
    (9) define -> . DEFINE WORD expr
    (10) define -> . WORD DEFOP expr
    (100) execscan -> . EXECSCAN expr
    (119) compile -> . COMPILE
    (104) downlevel -> . DOWNLEVEL expr
    (16) if -> . IF LPAREN expr RPAREN expr
    (77) expralg -> . term
    (78) expralg -> . abspath
    (79) expralg -> . invrelpath
    (80) expralg -> . subst
    (81) expralg -> . relpath
    (82) expralg -> . relpathbase
    (83) expralg -> . func
    (84) expralg -> . listdir
    (85) expralg -> . isdir
    (86) expralg -> . block
    (87) expralg -> . list
    (41) parttree -> . AMPERSAND metaexpr
    (123) alg0 -> . alg1
    (124) alg0 -> . alg0 PLUSMINUS alg1
    (125) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (113) varvar -> . var
    (114) varvar -> . varvar POINT var
    (111) variables -> . VARIABLES expr
    (96) python -> . PYTHON str
    (97) execfile -> . EXECFILE expr
    (40) break -> . BREAK
    (17) unless -> . UNLESS LPAREN expr RPAREN expr
    (18) unless -> . UNLESS LPAREN expr RPAREN expr ELSE expr
    (115) curfile -> . CURFILE
    (103) exectext -> . EXECTEXT expr
    (46) equal -> . expr EQUALS expr
    (109) element -> . expr LBRACKET expr RBRACKET
    (101) less -> . expr LESS expr
    (102) length -> . LENGTH LPAREN expr RPAREN
    (89) cycle -> . CYCLE
    (112) mlist -> . MLIST COLON block
    (98) evaluate -> . EVALUATE expr
    (106) yield -> . YIELD
    (108) repeat -> . REPEAT
    (120) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (88) return -> . RETURN expr
    (21) modules -> . MODULES
    (117) exfiles -> . EXFILES
    (20) input -> . INPUT
    (110) var -> . WORD
    (90) term -> . str
    (91) term -> . float
    (92) term -> . int
    (93) term -> . var
    (94) term -> . undervar
    (122) abspath -> . ABSPATH
    (121) invrelpath -> . INVRELPATH
    (99) subst -> . SUBST LPAREN expr RPAREN
    (116) relpath -> . RELPATH
    (118) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN block
    (24) func -> . WORD LPAREN args RPAREN
    (49) listdir -> . LISTDIR LPAREN expr RPAREN
    (48) isdir -> . ISDIR LPAREN expr RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (126) alg1 -> . alg2
    (127) alg1 -> . alg1 DIVMUL alg2
    (107) str -> . STRING
    (105) float -> . FLOAT
    (95) int -> . NUMBER
    (38) undervar -> . AT undervar
    (39) undervar -> . AT var
    (128) alg2 -> . alg3
    (129) alg2 -> . alg2 DPROD alg3
    (130) alg3 -> . expralg

    DIVIDER         reduce using rule 5 (inblock -> inblock divider .)
    $end            reduce using rule 5 (inblock -> inblock divider .)
    RBRACE          reduce using rule 5 (inblock -> inblock divider .)
    DEFFUNC         shift and go to state 59
    MODULE          shift and go to state 52
    APPLICATION     shift and go to state 75
    DEFINE          shift and go to state 67
    WORD            shift and go to state 77
    EXECSCAN        shift and go to state 46
    COMPILE         shift and go to state 72
    DOWNLEVEL       shift and go to state 29
    IF              shift and go to state 101
    AMPERSAND       shift and go to state 12
    PLUSMINUS       shift and go to state 69
    PRINT           shift and go to state 47
    VARIABLES       shift and go to state 55
    PYTHON          shift and go to state 57
    EXECFILE        shift and go to state 73
    BREAK           shift and go to state 82
    UNLESS          shift and go to state 74
    CURFILE         shift and go to state 88
    EXECTEXT        shift and go to state 39
    LENGTH          shift and go to state 7
    CYCLE           shift and go to state 43
    MLIST           shift and go to state 90
    EVALUATE        shift and go to state 26
    YIELD           shift and go to state 4
    REPEAT          shift and go to state 103
    PASS            shift and go to state 34
    LBRACE          shift and go to state 31
    RETURN          shift and go to state 54
    MODULES         shift and go to state 63
    EXFILES         shift and go to state 14
    INPUT           shift and go to state 95
    ABSPATH         shift and go to state 33
    INVRELPATH      shift and go to state 36
    SUBST           shift and go to state 102
    RELPATH         shift and go to state 25
    RELPATHBASE     shift and go to state 5
    LISTDIR         shift and go to state 30
    ISDIR           shift and go to state 51
    LBRACKET        shift and go to state 83
    STRING          shift and go to state 70
    FLOAT           shift and go to state 3
    NUMBER          shift and go to state 28
    AT              shift and go to state 56

    isdir                          shift and go to state 1
    metaexpr                       shift and go to state 164
    undervar                       shift and go to state 62
    alg1                           shift and go to state 6
    expralg                        shift and go to state 64
    curfile                        shift and go to state 35
    length                         shift and go to state 66
    parttree                       shift and go to state 10
    invrelpath                     shift and go to state 16
    float                          shift and go to state 8
    execfile                       shift and go to state 68
    less                           shift and go to state 9
    equal                          shift and go to state 84
    application                    shift and go to state 11
    subst                          shift and go to state 86
    pass                           shift and go to state 37
    element                        shift and go to state 13
    relpath                        shift and go to state 15
    modules                        shift and go to state 91
    break                          shift and go to state 17
    alg2                           shift and go to state 2
    list                           shift and go to state 23
    relpathbase                    shift and go to state 94
    alg3                           shift and go to state 19
    varvar                         shift and go to state 20
    expr                           shift and go to state 21
    return                         shift and go to state 65
    execscan                       shift and go to state 60
    str                            shift and go to state 78
    downlevel                      shift and go to state 79
    unless                         shift and go to state 81
    exfiles                        shift and go to state 85
    func                           shift and go to state 50
    evaluate                       shift and go to state 92
    if                             shift and go to state 87
    int                            shift and go to state 32
    alg0                           shift and go to state 89
    declare                        shift and go to state 27
    compile                        shift and go to state 80
    define                         shift and go to state 40
    module                         shift and go to state 22
    exectext                       shift and go to state 41
    var                            shift and go to state 42
    listdir                        shift and go to state 44
    deffunc                        shift and go to state 93
    append                         shift and go to state 18
    input                          shift and go to state 48
    term                           shift and go to state 45
    variables                      shift and go to state 96
    print                          shift and go to state 49
    dict                           shift and go to state 98
    mlist                          shift and go to state 100
    block                          shift and go to state 76
    python                         shift and go to state 53
    cycle                          shift and go to state 97
    repeat                         shift and go to state 99
    yield                          shift and go to state 71
    abspath                        shift and go to state 58

state 115

    (98) evaluate -> EVALUATE expr .
    (46) equal -> expr . EQUALS expr
    (109) element -> expr . LBRACKET expr RBRACKET
    (101) less -> expr . LESS expr

  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
    RPAREN          reduce using rule 98 (evaluate -> EVALUATE expr .)
    COLON           reduce using rule 98 (evaluate -> EVALUATE expr .)
    DIVIDER         reduce using rule 98 (evaluate -> EVALUATE expr .)
    $end            reduce using rule 98 (evaluate -> EVALUATE expr .)
    RBRACE          reduce using rule 98 (evaluate -> EVALUATE expr .)
    RBRACKET        reduce using rule 98 (evaluate -> EVALUATE expr .)
    COMMA           reduce using rule 98 (evaluate -> EVALUATE expr .)
    ELSE            reduce using rule 98 (evaluate -> EVALUATE expr .)
    EQUALS          shift and go to state 111
    LBRACKET        shift and go to state 112
    LESS            shift and go to state 110

  ! EQUALS          [ reduce using rule 98 (evaluate -> EVALUATE expr .) ]
  ! LBRACKET        [ reduce using rule 98 (evaluate -> EVALUATE expr .) ]
  ! LESS            [ reduce using rule 98 (evaluate -> EVALUATE expr .) ]


state 116

    (113) varvar -> var .
    (93) term -> var .

  ! reduce/reduce conflict for COLON resolved using rule 93 (term -> var .)
  ! reduce/reduce conflict for EQUALS resolved using rule 93 (term -> var .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 93 (term -> var .)
  ! reduce/reduce conflict for LESS resolved using rule 93 (term -> var .)
  ! reduce/reduce conflict for DIVIDER resolved using rule 93 (term -> var .)
  ! reduce/reduce conflict for $end resolved using rule 93 (term -> var .)
  ! reduce/reduce conflict for RBRACE resolved using rule 93 (term -> var .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 93 (term -> var .)
  ! reduce/reduce conflict for COMMA resolved using rule 93 (term -> var .)
  ! reduce/reduce conflict for RPAREN resolved using rule 93 (term -> var .)
  ! reduce/reduce conflict for ELSE resolved using rule 93 (term -> var .)
    POINT           reduce using rule 113 (varvar -> var .)
    COLON           reduce using rule 93 (term -> var .)
    EQUALS          reduce using rule 93 (term -> var .)
    LBRACKET        reduce using rule 93 (term -> var .)
    LESS            reduce using rule 93 (term -> var .)
    DIVIDER         reduce using rule 93 (term -> var .)
    $end            reduce using rule 93 (term -> var .)
    RBRACE          reduce using rule 93 (term -> var .)
    RBRACKET        reduce using rule 93 (term -> var .)
    COMMA           reduce using rule 93 (term -> var .)
    RPAREN          reduce using rule 93 (term -> var .)
    ELSE            reduce using rule 93 (term -> var .)
    DPROD           reduce using rule 93 (term -> var .)
    DIVMUL          reduce using rule 93 (term -> var .)
    PLUSMINUS       reduce using rule 93 (term -> var .)

  ! COLON           [ reduce using rule 113 (varvar -> var .) ]
  ! EQUALS          [ reduce using rule 113 (varvar -> var .) ]
  ! LBRACKET        [ reduce using rule 113 (varvar -> var .) ]
  ! LESS            [ reduce using rule 113 (varvar -> var .) ]
  ! DIVIDER         [ reduce using rule 113 (varvar -> var .) ]
  ! $end            [ reduce using rule 113 (varvar -> var .) ]
  ! RBRACE          [ reduce using rule 113 (varvar -> var .) ]
  ! RBRACKET        [ reduce using rule 113 (varvar -> var .) ]
  ! COMMA           [ reduce using rule 113 (varvar -> var .) ]
  ! RPAREN          [ reduce using rule 113 (varvar -> var .) ]
  ! ELSE            [ reduce using rule 113 (varvar -> var .) ]


state 117

    (23) func -> WORD . LPAREN args RPAREN block
    (24) func -> WORD . LPAREN args RPAREN
    (110) var -> WORD .

    LPAREN          shift and go to state 146
    POINT           reduce using rule 110 (var -> WORD .)
    RPAREN          reduce using rule 110 (var -> WORD .)
    EQUALS          reduce using rule 110 (var -> WORD .)
    LBRACKET        reduce using rule 110 (var -> WORD .)
    LESS            reduce using rule 110 (var -> WORD .)
    DPROD           reduce using rule 110 (var -> WORD .)
    DIVMUL          reduce using rule 110 (var -> WORD .)
    PLUSMINUS       reduce using rule 110 (var -> WORD .)
    COLON           reduce using rule 110 (var -> WORD .)
    DIVIDER         reduce using rule 110 (var -> WORD .)
    $end            reduce using rule 110 (var -> WORD .)
    RBRACE          reduce using rule 110 (var -> WORD .)
    RBRACKET        reduce using rule 110 (var -> WORD .)
    COMMA           reduce using rule 110 (var -> WORD .)
    ELSE            reduce using rule 110 (var -> WORD .)


state 118

    (104) downlevel -> DOWNLEVEL expr .
    (46) equal -> expr . EQUALS expr
    (109) element -> expr . LBRACKET expr RBRACKET
    (101) less -> expr . LESS expr

  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
    DIVIDER         reduce using rule 104 (downlevel -> DOWNLEVEL expr .)
    $end            reduce using rule 104 (downlevel -> DOWNLEVEL expr .)
    RBRACE          reduce using rule 104 (downlevel -> DOWNLEVEL expr .)
    COLON           reduce using rule 104 (downlevel -> DOWNLEVEL expr .)
    RBRACKET        reduce using rule 104 (downlevel -> DOWNLEVEL expr .)
    COMMA           reduce using rule 104 (downlevel -> DOWNLEVEL expr .)
    RPAREN          reduce using rule 104 (downlevel -> DOWNLEVEL expr .)
    ELSE            reduce using rule 104 (downlevel -> DOWNLEVEL expr .)
    EQUALS          shift and go to state 111
    LBRACKET        shift and go to state 112
    LESS            shift and go to state 110

  ! EQUALS          [ reduce using rule 104 (downlevel -> DOWNLEVEL expr .) ]
  ! LBRACKET        [ reduce using rule 104 (downlevel -> DOWNLEVEL expr .) ]
  ! LESS            [ reduce using rule 104 (downlevel -> DOWNLEVEL expr .) ]


state 119

    (49) listdir -> LISTDIR LPAREN . expr RPAREN
    (50) expr -> . expralg
    (51) expr -> . parttree
    (52) expr -> . alg0
    (53) expr -> . print
    (54) expr -> . varvar
    (55) expr -> . variables
    (56) expr -> . python
    (57) expr -> . execfile
    (58) expr -> . break
    (59) expr -> . unless
    (60) expr -> . curfile
    (61) expr -> . exectext
    (62) expr -> . equal
    (63) expr -> . element
    (64) expr -> . less
    (65) expr -> . length
    (66) expr -> . cycle
    (67) expr -> . mlist
    (68) expr -> . evaluate
    (69) expr -> . yield
    (70) expr -> . repeat
    (71) expr -> . pass
    (72) expr -> . dict
    (73) expr -> . return
    (74) expr -> . modules
    (75) expr -> . exfiles
    (76) expr -> . input
    (77) expralg -> . term
    (78) expralg -> . abspath
    (79) expralg -> . invrelpath
    (80) expralg -> . subst
    (81) expralg -> . relpath
    (82) expralg -> . relpathbase
    (83) expralg -> . func
    (84) expralg -> . listdir
    (85) expralg -> . isdir
    (86) expralg -> . block
    (87) expralg -> . list
    (41) parttree -> . AMPERSAND metaexpr
    (123) alg0 -> . alg1
    (124) alg0 -> . alg0 PLUSMINUS alg1
    (125) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (113) varvar -> . var
    (114) varvar -> . varvar POINT var
    (111) variables -> . VARIABLES expr
    (96) python -> . PYTHON str
    (97) execfile -> . EXECFILE expr
    (40) break -> . BREAK
    (17) unless -> . UNLESS LPAREN expr RPAREN expr
    (18) unless -> . UNLESS LPAREN expr RPAREN expr ELSE expr
    (115) curfile -> . CURFILE
    (103) exectext -> . EXECTEXT expr
    (46) equal -> . expr EQUALS expr
    (109) element -> . expr LBRACKET expr RBRACKET
    (101) less -> . expr LESS expr
    (102) length -> . LENGTH LPAREN expr RPAREN
    (89) cycle -> . CYCLE
    (112) mlist -> . MLIST COLON block
    (98) evaluate -> . EVALUATE expr
    (106) yield -> . YIELD
    (108) repeat -> . REPEAT
    (120) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (88) return -> . RETURN expr
    (21) modules -> . MODULES
    (117) exfiles -> . EXFILES
    (20) input -> . INPUT
    (90) term -> . str
    (91) term -> . float
    (92) term -> . int
    (93) term -> . var
    (94) term -> . undervar
    (122) abspath -> . ABSPATH
    (121) invrelpath -> . INVRELPATH
    (99) subst -> . SUBST LPAREN expr RPAREN
    (116) relpath -> . RELPATH
    (118) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN block
    (24) func -> . WORD LPAREN args RPAREN
    (49) listdir -> . LISTDIR LPAREN expr RPAREN
    (48) isdir -> . ISDIR LPAREN expr RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (126) alg1 -> . alg2
    (127) alg1 -> . alg1 DIVMUL alg2
    (110) var -> . WORD
    (107) str -> . STRING
    (105) float -> . FLOAT
    (95) int -> . NUMBER
    (38) undervar -> . AT undervar
    (39) undervar -> . AT var
    (128) alg2 -> . alg3
    (129) alg2 -> . alg2 DPROD alg3
    (130) alg3 -> . expralg

    AMPERSAND       shift and go to state 12
    PLUSMINUS       shift and go to state 69
    PRINT           shift and go to state 47
    VARIABLES       shift and go to state 55
    PYTHON          shift and go to state 57
    EXECFILE        shift and go to state 73
    BREAK           shift and go to state 82
    UNLESS          shift and go to state 74
    CURFILE         shift and go to state 88
    EXECTEXT        shift and go to state 39
    LENGTH          shift and go to state 7
    CYCLE           shift and go to state 43
    MLIST           shift and go to state 90
    EVALUATE        shift and go to state 26
    YIELD           shift and go to state 4
    REPEAT          shift and go to state 103
    PASS            shift and go to state 34
    LBRACE          shift and go to state 31
    RETURN          shift and go to state 54
    MODULES         shift and go to state 63
    EXFILES         shift and go to state 14
    INPUT           shift and go to state 95
    ABSPATH         shift and go to state 33
    INVRELPATH      shift and go to state 36
    SUBST           shift and go to state 102
    RELPATH         shift and go to state 25
    RELPATHBASE     shift and go to state 5
    WORD            shift and go to state 117
    LISTDIR         shift and go to state 30
    ISDIR           shift and go to state 51
    LBRACKET        shift and go to state 83
    STRING          shift and go to state 70
    FLOAT           shift and go to state 3
    NUMBER          shift and go to state 28
    AT              shift and go to state 56

    isdir                          shift and go to state 1
    undervar                       shift and go to state 62
    alg1                           shift and go to state 6
    expralg                        shift and go to state 64
    alg0                           shift and go to state 89
    length                         shift and go to state 66
    float                          shift and go to state 8
    equal                          shift and go to state 84
    less                           shift and go to state 9
    parttree                       shift and go to state 10
    element                        shift and go to state 13
    relpath                        shift and go to state 15
    invrelpath                     shift and go to state 16
    break                          shift and go to state 17
    alg2                           shift and go to state 2
    execfile                       shift and go to state 68
    alg3                           shift and go to state 19
    varvar                         shift and go to state 20
    return                         shift and go to state 65
    str                            shift and go to state 78
    list                           shift and go to state 23
    unless                         shift and go to state 81
    exfiles                        shift and go to state 85
    evaluate                       shift and go to state 92
    int                            shift and go to state 32
    curfile                        shift and go to state 35
    pass                           shift and go to state 37
    expr                           shift and go to state 165
    subst                          shift and go to state 86
    exectext                       shift and go to state 41
    var                            shift and go to state 116
    modules                        shift and go to state 91
    listdir                        shift and go to state 44
    term                           shift and go to state 45
    relpathbase                    shift and go to state 94
    input                          shift and go to state 48
    variables                      shift and go to state 96
    print                          shift and go to state 49
    func                           shift and go to state 50
    dict                           shift and go to state 98
    mlist                          shift and go to state 100
    block                          shift and go to state 76
    python                         shift and go to state 53
    cycle                          shift and go to state 97
    repeat                         shift and go to state 99
    yield                          shift and go to state 71
    abspath                        shift and go to state 58

state 120

    (1) block -> LBRACE inblock . RBRACE
    (3) inblock -> inblock . divider metaexpr
    (5) inblock -> inblock . divider
    (19) divider -> . DIVIDER

    RBRACE          shift and go to state 166
    DIVIDER         shift and go to state 38

    divider                        shift and go to state 114

state 121

    (13) declares -> declare .
    (29) metaexpr -> declare .

  ! reduce/reduce conflict for RBRACE resolved using rule 13 (declares -> declare .)
    RBRACE          reduce using rule 13 (declares -> declare .)
    COMMA           reduce using rule 13 (declares -> declare .)
    DIVIDER         reduce using rule 29 (metaexpr -> declare .)

  ! RBRACE          [ reduce using rule 29 (metaexpr -> declare .) ]


state 122

    (15) declare -> expr . COLON expr
    (25) metaexpr -> expr .
    (46) equal -> expr . EQUALS expr
    (109) element -> expr . LBRACKET expr RBRACKET
    (101) less -> expr . LESS expr

    COLON           shift and go to state 113
    RBRACE          reduce using rule 25 (metaexpr -> expr .)
    DIVIDER         reduce using rule 25 (metaexpr -> expr .)
    EQUALS          shift and go to state 111
    LBRACKET        shift and go to state 112
    LESS            shift and go to state 110


state 123

    (11) dict -> LBRACE declares . RBRACE
    (14) declares -> declares . COMMA declare

    RBRACE          shift and go to state 167
    COMMA           shift and go to state 168


state 124

    (12) dict -> LBRACE RBRACE .

    COLON           reduce using rule 12 (dict -> LBRACE RBRACE .)
    EQUALS          reduce using rule 12 (dict -> LBRACE RBRACE .)
    LBRACKET        reduce using rule 12 (dict -> LBRACE RBRACE .)
    LESS            reduce using rule 12 (dict -> LBRACE RBRACE .)
    DIVIDER         reduce using rule 12 (dict -> LBRACE RBRACE .)
    $end            reduce using rule 12 (dict -> LBRACE RBRACE .)
    RBRACE          reduce using rule 12 (dict -> LBRACE RBRACE .)
    RBRACKET        reduce using rule 12 (dict -> LBRACE RBRACE .)
    COMMA           reduce using rule 12 (dict -> LBRACE RBRACE .)
    RPAREN          reduce using rule 12 (dict -> LBRACE RBRACE .)
    ELSE            reduce using rule 12 (dict -> LBRACE RBRACE .)


state 125

    (103) exectext -> EXECTEXT expr .
    (46) equal -> expr . EQUALS expr
    (109) element -> expr . LBRACKET expr RBRACKET
    (101) less -> expr . LESS expr

  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
    COLON           reduce using rule 103 (exectext -> EXECTEXT expr .)
    DIVIDER         reduce using rule 103 (exectext -> EXECTEXT expr .)
    $end            reduce using rule 103 (exectext -> EXECTEXT expr .)
    RBRACE          reduce using rule 103 (exectext -> EXECTEXT expr .)
    RBRACKET        reduce using rule 103 (exectext -> EXECTEXT expr .)
    COMMA           reduce using rule 103 (exectext -> EXECTEXT expr .)
    RPAREN          reduce using rule 103 (exectext -> EXECTEXT expr .)
    ELSE            reduce using rule 103 (exectext -> EXECTEXT expr .)
    EQUALS          shift and go to state 111
    LBRACKET        shift and go to state 112
    LESS            shift and go to state 110

  ! EQUALS          [ reduce using rule 103 (exectext -> EXECTEXT expr .) ]
  ! LBRACKET        [ reduce using rule 103 (exectext -> EXECTEXT expr .) ]
  ! LESS            [ reduce using rule 103 (exectext -> EXECTEXT expr .) ]


state 126

    (22) append -> var APPEND . expr
    (50) expr -> . expralg
    (51) expr -> . parttree
    (52) expr -> . alg0
    (53) expr -> . print
    (54) expr -> . varvar
    (55) expr -> . variables
    (56) expr -> . python
    (57) expr -> . execfile
    (58) expr -> . break
    (59) expr -> . unless
    (60) expr -> . curfile
    (61) expr -> . exectext
    (62) expr -> . equal
    (63) expr -> . element
    (64) expr -> . less
    (65) expr -> . length
    (66) expr -> . cycle
    (67) expr -> . mlist
    (68) expr -> . evaluate
    (69) expr -> . yield
    (70) expr -> . repeat
    (71) expr -> . pass
    (72) expr -> . dict
    (73) expr -> . return
    (74) expr -> . modules
    (75) expr -> . exfiles
    (76) expr -> . input
    (77) expralg -> . term
    (78) expralg -> . abspath
    (79) expralg -> . invrelpath
    (80) expralg -> . subst
    (81) expralg -> . relpath
    (82) expralg -> . relpathbase
    (83) expralg -> . func
    (84) expralg -> . listdir
    (85) expralg -> . isdir
    (86) expralg -> . block
    (87) expralg -> . list
    (41) parttree -> . AMPERSAND metaexpr
    (123) alg0 -> . alg1
    (124) alg0 -> . alg0 PLUSMINUS alg1
    (125) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (113) varvar -> . var
    (114) varvar -> . varvar POINT var
    (111) variables -> . VARIABLES expr
    (96) python -> . PYTHON str
    (97) execfile -> . EXECFILE expr
    (40) break -> . BREAK
    (17) unless -> . UNLESS LPAREN expr RPAREN expr
    (18) unless -> . UNLESS LPAREN expr RPAREN expr ELSE expr
    (115) curfile -> . CURFILE
    (103) exectext -> . EXECTEXT expr
    (46) equal -> . expr EQUALS expr
    (109) element -> . expr LBRACKET expr RBRACKET
    (101) less -> . expr LESS expr
    (102) length -> . LENGTH LPAREN expr RPAREN
    (89) cycle -> . CYCLE
    (112) mlist -> . MLIST COLON block
    (98) evaluate -> . EVALUATE expr
    (106) yield -> . YIELD
    (108) repeat -> . REPEAT
    (120) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (88) return -> . RETURN expr
    (21) modules -> . MODULES
    (117) exfiles -> . EXFILES
    (20) input -> . INPUT
    (90) term -> . str
    (91) term -> . float
    (92) term -> . int
    (93) term -> . var
    (94) term -> . undervar
    (122) abspath -> . ABSPATH
    (121) invrelpath -> . INVRELPATH
    (99) subst -> . SUBST LPAREN expr RPAREN
    (116) relpath -> . RELPATH
    (118) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN block
    (24) func -> . WORD LPAREN args RPAREN
    (49) listdir -> . LISTDIR LPAREN expr RPAREN
    (48) isdir -> . ISDIR LPAREN expr RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (126) alg1 -> . alg2
    (127) alg1 -> . alg1 DIVMUL alg2
    (110) var -> . WORD
    (107) str -> . STRING
    (105) float -> . FLOAT
    (95) int -> . NUMBER
    (38) undervar -> . AT undervar
    (39) undervar -> . AT var
    (128) alg2 -> . alg3
    (129) alg2 -> . alg2 DPROD alg3
    (130) alg3 -> . expralg

    AMPERSAND       shift and go to state 12
    PLUSMINUS       shift and go to state 69
    PRINT           shift and go to state 47
    VARIABLES       shift and go to state 55
    PYTHON          shift and go to state 57
    EXECFILE        shift and go to state 73
    BREAK           shift and go to state 82
    UNLESS          shift and go to state 74
    CURFILE         shift and go to state 88
    EXECTEXT        shift and go to state 39
    LENGTH          shift and go to state 7
    CYCLE           shift and go to state 43
    MLIST           shift and go to state 90
    EVALUATE        shift and go to state 26
    YIELD           shift and go to state 4
    REPEAT          shift and go to state 103
    PASS            shift and go to state 34
    LBRACE          shift and go to state 31
    RETURN          shift and go to state 54
    MODULES         shift and go to state 63
    EXFILES         shift and go to state 14
    INPUT           shift and go to state 95
    ABSPATH         shift and go to state 33
    INVRELPATH      shift and go to state 36
    SUBST           shift and go to state 102
    RELPATH         shift and go to state 25
    RELPATHBASE     shift and go to state 5
    WORD            shift and go to state 117
    LISTDIR         shift and go to state 30
    ISDIR           shift and go to state 51
    LBRACKET        shift and go to state 83
    STRING          shift and go to state 70
    FLOAT           shift and go to state 3
    NUMBER          shift and go to state 28
    AT              shift and go to state 56

    isdir                          shift and go to state 1
    undervar                       shift and go to state 62
    alg1                           shift and go to state 6
    expralg                        shift and go to state 64
    alg0                           shift and go to state 89
    length                         shift and go to state 66
    float                          shift and go to state 8
    equal                          shift and go to state 84
    less                           shift and go to state 9
    parttree                       shift and go to state 10
    element                        shift and go to state 13
    relpath                        shift and go to state 15
    invrelpath                     shift and go to state 16
    break                          shift and go to state 17
    alg2                           shift and go to state 2
    execfile                       shift and go to state 68
    alg3                           shift and go to state 19
    varvar                         shift and go to state 20
    return                         shift and go to state 65
    str                            shift and go to state 78
    list                           shift and go to state 23
    unless                         shift and go to state 81
    exfiles                        shift and go to state 85
    evaluate                       shift and go to state 92
    int                            shift and go to state 32
    curfile                        shift and go to state 35
    pass                           shift and go to state 37
    expr                           shift and go to state 169
    subst                          shift and go to state 86
    exectext                       shift and go to state 41
    var                            shift and go to state 116
    modules                        shift and go to state 91
    listdir                        shift and go to state 44
    term                           shift and go to state 45
    relpathbase                    shift and go to state 94
    input                          shift and go to state 48
    variables                      shift and go to state 96
    print                          shift and go to state 49
    func                           shift and go to state 50
    dict                           shift and go to state 98
    mlist                          shift and go to state 100
    block                          shift and go to state 76
    python                         shift and go to state 53
    cycle                          shift and go to state 97
    repeat                         shift and go to state 99
    yield                          shift and go to state 71
    abspath                        shift and go to state 58

state 127

    (100) execscan -> EXECSCAN expr .
    (46) equal -> expr . EQUALS expr
    (109) element -> expr . LBRACKET expr RBRACKET
    (101) less -> expr . LESS expr

  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
    RBRACE          reduce using rule 100 (execscan -> EXECSCAN expr .)
    DIVIDER         reduce using rule 100 (execscan -> EXECSCAN expr .)
    $end            reduce using rule 100 (execscan -> EXECSCAN expr .)
    COLON           reduce using rule 100 (execscan -> EXECSCAN expr .)
    RBRACKET        reduce using rule 100 (execscan -> EXECSCAN expr .)
    COMMA           reduce using rule 100 (execscan -> EXECSCAN expr .)
    RPAREN          reduce using rule 100 (execscan -> EXECSCAN expr .)
    ELSE            reduce using rule 100 (execscan -> EXECSCAN expr .)
    EQUALS          shift and go to state 111
    LBRACKET        shift and go to state 112
    LESS            shift and go to state 110

  ! EQUALS          [ reduce using rule 100 (execscan -> EXECSCAN expr .) ]
  ! LBRACKET        [ reduce using rule 100 (execscan -> EXECSCAN expr .) ]
  ! LESS            [ reduce using rule 100 (execscan -> EXECSCAN expr .) ]


state 128

    (6) print -> PRINT expr .
    (46) equal -> expr . EQUALS expr
    (109) element -> expr . LBRACKET expr RBRACKET
    (101) less -> expr . LESS expr

  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
    RPAREN          reduce using rule 6 (print -> PRINT expr .)
    COLON           reduce using rule 6 (print -> PRINT expr .)
    DIVIDER         reduce using rule 6 (print -> PRINT expr .)
    $end            reduce using rule 6 (print -> PRINT expr .)
    RBRACE          reduce using rule 6 (print -> PRINT expr .)
    RBRACKET        reduce using rule 6 (print -> PRINT expr .)
    COMMA           reduce using rule 6 (print -> PRINT expr .)
    ELSE            reduce using rule 6 (print -> PRINT expr .)
    EQUALS          shift and go to state 111
    LBRACKET        shift and go to state 112
    LESS            shift and go to state 110

  ! EQUALS          [ reduce using rule 6 (print -> PRINT expr .) ]
  ! LBRACKET        [ reduce using rule 6 (print -> PRINT expr .) ]
  ! LESS            [ reduce using rule 6 (print -> PRINT expr .) ]


state 129

    (48) isdir -> ISDIR LPAREN . expr RPAREN
    (50) expr -> . expralg
    (51) expr -> . parttree
    (52) expr -> . alg0
    (53) expr -> . print
    (54) expr -> . varvar
    (55) expr -> . variables
    (56) expr -> . python
    (57) expr -> . execfile
    (58) expr -> . break
    (59) expr -> . unless
    (60) expr -> . curfile
    (61) expr -> . exectext
    (62) expr -> . equal
    (63) expr -> . element
    (64) expr -> . less
    (65) expr -> . length
    (66) expr -> . cycle
    (67) expr -> . mlist
    (68) expr -> . evaluate
    (69) expr -> . yield
    (70) expr -> . repeat
    (71) expr -> . pass
    (72) expr -> . dict
    (73) expr -> . return
    (74) expr -> . modules
    (75) expr -> . exfiles
    (76) expr -> . input
    (77) expralg -> . term
    (78) expralg -> . abspath
    (79) expralg -> . invrelpath
    (80) expralg -> . subst
    (81) expralg -> . relpath
    (82) expralg -> . relpathbase
    (83) expralg -> . func
    (84) expralg -> . listdir
    (85) expralg -> . isdir
    (86) expralg -> . block
    (87) expralg -> . list
    (41) parttree -> . AMPERSAND metaexpr
    (123) alg0 -> . alg1
    (124) alg0 -> . alg0 PLUSMINUS alg1
    (125) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (113) varvar -> . var
    (114) varvar -> . varvar POINT var
    (111) variables -> . VARIABLES expr
    (96) python -> . PYTHON str
    (97) execfile -> . EXECFILE expr
    (40) break -> . BREAK
    (17) unless -> . UNLESS LPAREN expr RPAREN expr
    (18) unless -> . UNLESS LPAREN expr RPAREN expr ELSE expr
    (115) curfile -> . CURFILE
    (103) exectext -> . EXECTEXT expr
    (46) equal -> . expr EQUALS expr
    (109) element -> . expr LBRACKET expr RBRACKET
    (101) less -> . expr LESS expr
    (102) length -> . LENGTH LPAREN expr RPAREN
    (89) cycle -> . CYCLE
    (112) mlist -> . MLIST COLON block
    (98) evaluate -> . EVALUATE expr
    (106) yield -> . YIELD
    (108) repeat -> . REPEAT
    (120) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (88) return -> . RETURN expr
    (21) modules -> . MODULES
    (117) exfiles -> . EXFILES
    (20) input -> . INPUT
    (90) term -> . str
    (91) term -> . float
    (92) term -> . int
    (93) term -> . var
    (94) term -> . undervar
    (122) abspath -> . ABSPATH
    (121) invrelpath -> . INVRELPATH
    (99) subst -> . SUBST LPAREN expr RPAREN
    (116) relpath -> . RELPATH
    (118) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN block
    (24) func -> . WORD LPAREN args RPAREN
    (49) listdir -> . LISTDIR LPAREN expr RPAREN
    (48) isdir -> . ISDIR LPAREN expr RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (126) alg1 -> . alg2
    (127) alg1 -> . alg1 DIVMUL alg2
    (110) var -> . WORD
    (107) str -> . STRING
    (105) float -> . FLOAT
    (95) int -> . NUMBER
    (38) undervar -> . AT undervar
    (39) undervar -> . AT var
    (128) alg2 -> . alg3
    (129) alg2 -> . alg2 DPROD alg3
    (130) alg3 -> . expralg

    AMPERSAND       shift and go to state 12
    PLUSMINUS       shift and go to state 69
    PRINT           shift and go to state 47
    VARIABLES       shift and go to state 55
    PYTHON          shift and go to state 57
    EXECFILE        shift and go to state 73
    BREAK           shift and go to state 82
    UNLESS          shift and go to state 74
    CURFILE         shift and go to state 88
    EXECTEXT        shift and go to state 39
    LENGTH          shift and go to state 7
    CYCLE           shift and go to state 43
    MLIST           shift and go to state 90
    EVALUATE        shift and go to state 26
    YIELD           shift and go to state 4
    REPEAT          shift and go to state 103
    PASS            shift and go to state 34
    LBRACE          shift and go to state 31
    RETURN          shift and go to state 54
    MODULES         shift and go to state 63
    EXFILES         shift and go to state 14
    INPUT           shift and go to state 95
    ABSPATH         shift and go to state 33
    INVRELPATH      shift and go to state 36
    SUBST           shift and go to state 102
    RELPATH         shift and go to state 25
    RELPATHBASE     shift and go to state 5
    WORD            shift and go to state 117
    LISTDIR         shift and go to state 30
    ISDIR           shift and go to state 51
    LBRACKET        shift and go to state 83
    STRING          shift and go to state 70
    FLOAT           shift and go to state 3
    NUMBER          shift and go to state 28
    AT              shift and go to state 56

    isdir                          shift and go to state 1
    undervar                       shift and go to state 62
    alg1                           shift and go to state 6
    expralg                        shift and go to state 64
    alg0                           shift and go to state 89
    length                         shift and go to state 66
    float                          shift and go to state 8
    equal                          shift and go to state 84
    less                           shift and go to state 9
    parttree                       shift and go to state 10
    element                        shift and go to state 13
    relpath                        shift and go to state 15
    invrelpath                     shift and go to state 16
    break                          shift and go to state 17
    alg2                           shift and go to state 2
    execfile                       shift and go to state 68
    alg3                           shift and go to state 19
    varvar                         shift and go to state 20
    return                         shift and go to state 65
    str                            shift and go to state 78
    list                           shift and go to state 23
    unless                         shift and go to state 81
    exfiles                        shift and go to state 85
    evaluate                       shift and go to state 92
    int                            shift and go to state 32
    curfile                        shift and go to state 35
    pass                           shift and go to state 37
    expr                           shift and go to state 170
    subst                          shift and go to state 86
    exectext                       shift and go to state 41
    var                            shift and go to state 116
    modules                        shift and go to state 91
    listdir                        shift and go to state 44
    term                           shift and go to state 45
    relpathbase                    shift and go to state 94
    input                          shift and go to state 48
    variables                      shift and go to state 96
    print                          shift and go to state 49
    func                           shift and go to state 50
    dict                           shift and go to state 98
    mlist                          shift and go to state 100
    block                          shift and go to state 76
    python                         shift and go to state 53
    cycle                          shift and go to state 97
    repeat                         shift and go to state 99
    yield                          shift and go to state 71
    abspath                        shift and go to state 58

state 130

    (7) module -> MODULE WORD . block
    (1) block -> . LBRACE inblock RBRACE

    LBRACE          shift and go to state 141

    block                          shift and go to state 171

state 131

    (88) return -> RETURN expr .
    (46) equal -> expr . EQUALS expr
    (109) element -> expr . LBRACKET expr RBRACKET
    (101) less -> expr . LESS expr

  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
    COLON           reduce using rule 88 (return -> RETURN expr .)
    DIVIDER         reduce using rule 88 (return -> RETURN expr .)
    $end            reduce using rule 88 (return -> RETURN expr .)
    RBRACE          reduce using rule 88 (return -> RETURN expr .)
    RBRACKET        reduce using rule 88 (return -> RETURN expr .)
    COMMA           reduce using rule 88 (return -> RETURN expr .)
    RPAREN          reduce using rule 88 (return -> RETURN expr .)
    ELSE            reduce using rule 88 (return -> RETURN expr .)
    EQUALS          shift and go to state 111
    LBRACKET        shift and go to state 112
    LESS            shift and go to state 110

  ! EQUALS          [ reduce using rule 88 (return -> RETURN expr .) ]
  ! LBRACKET        [ reduce using rule 88 (return -> RETURN expr .) ]
  ! LESS            [ reduce using rule 88 (return -> RETURN expr .) ]


state 132

    (111) variables -> VARIABLES expr .
    (46) equal -> expr . EQUALS expr
    (109) element -> expr . LBRACKET expr RBRACKET
    (101) less -> expr . LESS expr

  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
    RPAREN          reduce using rule 111 (variables -> VARIABLES expr .)
    COLON           reduce using rule 111 (variables -> VARIABLES expr .)
    DIVIDER         reduce using rule 111 (variables -> VARIABLES expr .)
    $end            reduce using rule 111 (variables -> VARIABLES expr .)
    RBRACE          reduce using rule 111 (variables -> VARIABLES expr .)
    RBRACKET        reduce using rule 111 (variables -> VARIABLES expr .)
    COMMA           reduce using rule 111 (variables -> VARIABLES expr .)
    ELSE            reduce using rule 111 (variables -> VARIABLES expr .)
    EQUALS          shift and go to state 111
    LBRACKET        shift and go to state 112
    LESS            shift and go to state 110

  ! EQUALS          [ reduce using rule 111 (variables -> VARIABLES expr .) ]
  ! LBRACKET        [ reduce using rule 111 (variables -> VARIABLES expr .) ]
  ! LESS            [ reduce using rule 111 (variables -> VARIABLES expr .) ]


state 133

    (110) var -> WORD .

    COLON           reduce using rule 110 (var -> WORD .)
    EQUALS          reduce using rule 110 (var -> WORD .)
    LBRACKET        reduce using rule 110 (var -> WORD .)
    LESS            reduce using rule 110 (var -> WORD .)
    DIVIDER         reduce using rule 110 (var -> WORD .)
    $end            reduce using rule 110 (var -> WORD .)
    DPROD           reduce using rule 110 (var -> WORD .)
    DIVMUL          reduce using rule 110 (var -> WORD .)
    PLUSMINUS       reduce using rule 110 (var -> WORD .)
    RBRACE          reduce using rule 110 (var -> WORD .)
    RBRACKET        reduce using rule 110 (var -> WORD .)
    COMMA           reduce using rule 110 (var -> WORD .)
    RPAREN          reduce using rule 110 (var -> WORD .)
    ELSE            reduce using rule 110 (var -> WORD .)
    POINT           reduce using rule 110 (var -> WORD .)


state 134

    (38) undervar -> AT undervar .

    COLON           reduce using rule 38 (undervar -> AT undervar .)
    EQUALS          reduce using rule 38 (undervar -> AT undervar .)
    LBRACKET        reduce using rule 38 (undervar -> AT undervar .)
    LESS            reduce using rule 38 (undervar -> AT undervar .)
    DIVIDER         reduce using rule 38 (undervar -> AT undervar .)
    $end            reduce using rule 38 (undervar -> AT undervar .)
    RBRACE          reduce using rule 38 (undervar -> AT undervar .)
    RBRACKET        reduce using rule 38 (undervar -> AT undervar .)
    COMMA           reduce using rule 38 (undervar -> AT undervar .)
    RPAREN          reduce using rule 38 (undervar -> AT undervar .)
    ELSE            reduce using rule 38 (undervar -> AT undervar .)
    DPROD           reduce using rule 38 (undervar -> AT undervar .)
    DIVMUL          reduce using rule 38 (undervar -> AT undervar .)
    PLUSMINUS       reduce using rule 38 (undervar -> AT undervar .)


state 135

    (39) undervar -> AT var .

    COLON           reduce using rule 39 (undervar -> AT var .)
    EQUALS          reduce using rule 39 (undervar -> AT var .)
    LBRACKET        reduce using rule 39 (undervar -> AT var .)
    LESS            reduce using rule 39 (undervar -> AT var .)
    DIVIDER         reduce using rule 39 (undervar -> AT var .)
    $end            reduce using rule 39 (undervar -> AT var .)
    RBRACE          reduce using rule 39 (undervar -> AT var .)
    RBRACKET        reduce using rule 39 (undervar -> AT var .)
    COMMA           reduce using rule 39 (undervar -> AT var .)
    RPAREN          reduce using rule 39 (undervar -> AT var .)
    ELSE            reduce using rule 39 (undervar -> AT var .)
    DPROD           reduce using rule 39 (undervar -> AT var .)
    DIVMUL          reduce using rule 39 (undervar -> AT var .)
    PLUSMINUS       reduce using rule 39 (undervar -> AT var .)


state 136

    (96) python -> PYTHON str .

    COLON           reduce using rule 96 (python -> PYTHON str .)
    EQUALS          reduce using rule 96 (python -> PYTHON str .)
    LBRACKET        reduce using rule 96 (python -> PYTHON str .)
    LESS            reduce using rule 96 (python -> PYTHON str .)
    DIVIDER         reduce using rule 96 (python -> PYTHON str .)
    $end            reduce using rule 96 (python -> PYTHON str .)
    RPAREN          reduce using rule 96 (python -> PYTHON str .)
    RBRACE          reduce using rule 96 (python -> PYTHON str .)
    RBRACKET        reduce using rule 96 (python -> PYTHON str .)
    COMMA           reduce using rule 96 (python -> PYTHON str .)
    ELSE            reduce using rule 96 (python -> PYTHON str .)


state 137

    (8) deffunc -> DEFFUNC WORD . LPAREN args RPAREN block

    LPAREN          shift and go to state 172


state 138

    (9) define -> DEFINE WORD . expr
    (50) expr -> . expralg
    (51) expr -> . parttree
    (52) expr -> . alg0
    (53) expr -> . print
    (54) expr -> . varvar
    (55) expr -> . variables
    (56) expr -> . python
    (57) expr -> . execfile
    (58) expr -> . break
    (59) expr -> . unless
    (60) expr -> . curfile
    (61) expr -> . exectext
    (62) expr -> . equal
    (63) expr -> . element
    (64) expr -> . less
    (65) expr -> . length
    (66) expr -> . cycle
    (67) expr -> . mlist
    (68) expr -> . evaluate
    (69) expr -> . yield
    (70) expr -> . repeat
    (71) expr -> . pass
    (72) expr -> . dict
    (73) expr -> . return
    (74) expr -> . modules
    (75) expr -> . exfiles
    (76) expr -> . input
    (77) expralg -> . term
    (78) expralg -> . abspath
    (79) expralg -> . invrelpath
    (80) expralg -> . subst
    (81) expralg -> . relpath
    (82) expralg -> . relpathbase
    (83) expralg -> . func
    (84) expralg -> . listdir
    (85) expralg -> . isdir
    (86) expralg -> . block
    (87) expralg -> . list
    (41) parttree -> . AMPERSAND metaexpr
    (123) alg0 -> . alg1
    (124) alg0 -> . alg0 PLUSMINUS alg1
    (125) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (113) varvar -> . var
    (114) varvar -> . varvar POINT var
    (111) variables -> . VARIABLES expr
    (96) python -> . PYTHON str
    (97) execfile -> . EXECFILE expr
    (40) break -> . BREAK
    (17) unless -> . UNLESS LPAREN expr RPAREN expr
    (18) unless -> . UNLESS LPAREN expr RPAREN expr ELSE expr
    (115) curfile -> . CURFILE
    (103) exectext -> . EXECTEXT expr
    (46) equal -> . expr EQUALS expr
    (109) element -> . expr LBRACKET expr RBRACKET
    (101) less -> . expr LESS expr
    (102) length -> . LENGTH LPAREN expr RPAREN
    (89) cycle -> . CYCLE
    (112) mlist -> . MLIST COLON block
    (98) evaluate -> . EVALUATE expr
    (106) yield -> . YIELD
    (108) repeat -> . REPEAT
    (120) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (88) return -> . RETURN expr
    (21) modules -> . MODULES
    (117) exfiles -> . EXFILES
    (20) input -> . INPUT
    (90) term -> . str
    (91) term -> . float
    (92) term -> . int
    (93) term -> . var
    (94) term -> . undervar
    (122) abspath -> . ABSPATH
    (121) invrelpath -> . INVRELPATH
    (99) subst -> . SUBST LPAREN expr RPAREN
    (116) relpath -> . RELPATH
    (118) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN block
    (24) func -> . WORD LPAREN args RPAREN
    (49) listdir -> . LISTDIR LPAREN expr RPAREN
    (48) isdir -> . ISDIR LPAREN expr RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (126) alg1 -> . alg2
    (127) alg1 -> . alg1 DIVMUL alg2
    (110) var -> . WORD
    (107) str -> . STRING
    (105) float -> . FLOAT
    (95) int -> . NUMBER
    (38) undervar -> . AT undervar
    (39) undervar -> . AT var
    (128) alg2 -> . alg3
    (129) alg2 -> . alg2 DPROD alg3
    (130) alg3 -> . expralg

    AMPERSAND       shift and go to state 12
    PLUSMINUS       shift and go to state 69
    PRINT           shift and go to state 47
    VARIABLES       shift and go to state 55
    PYTHON          shift and go to state 57
    EXECFILE        shift and go to state 73
    BREAK           shift and go to state 82
    UNLESS          shift and go to state 74
    CURFILE         shift and go to state 88
    EXECTEXT        shift and go to state 39
    LENGTH          shift and go to state 7
    CYCLE           shift and go to state 43
    MLIST           shift and go to state 90
    EVALUATE        shift and go to state 26
    YIELD           shift and go to state 4
    REPEAT          shift and go to state 103
    PASS            shift and go to state 34
    LBRACE          shift and go to state 31
    RETURN          shift and go to state 54
    MODULES         shift and go to state 63
    EXFILES         shift and go to state 14
    INPUT           shift and go to state 95
    ABSPATH         shift and go to state 33
    INVRELPATH      shift and go to state 36
    SUBST           shift and go to state 102
    RELPATH         shift and go to state 25
    RELPATHBASE     shift and go to state 5
    WORD            shift and go to state 117
    LISTDIR         shift and go to state 30
    ISDIR           shift and go to state 51
    LBRACKET        shift and go to state 83
    STRING          shift and go to state 70
    FLOAT           shift and go to state 3
    NUMBER          shift and go to state 28
    AT              shift and go to state 56

    isdir                          shift and go to state 1
    undervar                       shift and go to state 62
    alg1                           shift and go to state 6
    expralg                        shift and go to state 64
    alg0                           shift and go to state 89
    length                         shift and go to state 66
    float                          shift and go to state 8
    equal                          shift and go to state 84
    less                           shift and go to state 9
    parttree                       shift and go to state 10
    element                        shift and go to state 13
    relpath                        shift and go to state 15
    invrelpath                     shift and go to state 16
    break                          shift and go to state 17
    alg2                           shift and go to state 2
    execfile                       shift and go to state 68
    alg3                           shift and go to state 19
    varvar                         shift and go to state 20
    return                         shift and go to state 65
    str                            shift and go to state 78
    list                           shift and go to state 23
    unless                         shift and go to state 81
    exfiles                        shift and go to state 85
    evaluate                       shift and go to state 92
    int                            shift and go to state 32
    curfile                        shift and go to state 35
    pass                           shift and go to state 37
    expr                           shift and go to state 173
    subst                          shift and go to state 86
    exectext                       shift and go to state 41
    var                            shift and go to state 116
    modules                        shift and go to state 91
    listdir                        shift and go to state 44
    term                           shift and go to state 45
    relpathbase                    shift and go to state 94
    input                          shift and go to state 48
    variables                      shift and go to state 96
    print                          shift and go to state 49
    func                           shift and go to state 50
    dict                           shift and go to state 98
    mlist                          shift and go to state 100
    block                          shift and go to state 76
    python                         shift and go to state 53
    cycle                          shift and go to state 97
    repeat                         shift and go to state 99
    yield                          shift and go to state 71
    abspath                        shift and go to state 58

state 139

    (125) alg0 -> PLUSMINUS alg1 .
    (127) alg1 -> alg1 . DIVMUL alg2

    PLUSMINUS       reduce using rule 125 (alg0 -> PLUSMINUS alg1 .)
    RPAREN          reduce using rule 125 (alg0 -> PLUSMINUS alg1 .)
    EQUALS          reduce using rule 125 (alg0 -> PLUSMINUS alg1 .)
    LBRACKET        reduce using rule 125 (alg0 -> PLUSMINUS alg1 .)
    LESS            reduce using rule 125 (alg0 -> PLUSMINUS alg1 .)
    COLON           reduce using rule 125 (alg0 -> PLUSMINUS alg1 .)
    DIVIDER         reduce using rule 125 (alg0 -> PLUSMINUS alg1 .)
    $end            reduce using rule 125 (alg0 -> PLUSMINUS alg1 .)
    RBRACE          reduce using rule 125 (alg0 -> PLUSMINUS alg1 .)
    RBRACKET        reduce using rule 125 (alg0 -> PLUSMINUS alg1 .)
    COMMA           reduce using rule 125 (alg0 -> PLUSMINUS alg1 .)
    ELSE            reduce using rule 125 (alg0 -> PLUSMINUS alg1 .)
    DIVMUL          shift and go to state 106


state 140

    (130) alg3 -> expralg .

    DPROD           reduce using rule 130 (alg3 -> expralg .)
    DIVMUL          reduce using rule 130 (alg3 -> expralg .)
    PLUSMINUS       reduce using rule 130 (alg3 -> expralg .)
    COLON           reduce using rule 130 (alg3 -> expralg .)
    EQUALS          reduce using rule 130 (alg3 -> expralg .)
    LBRACKET        reduce using rule 130 (alg3 -> expralg .)
    LESS            reduce using rule 130 (alg3 -> expralg .)
    DIVIDER         reduce using rule 130 (alg3 -> expralg .)
    $end            reduce using rule 130 (alg3 -> expralg .)
    RBRACE          reduce using rule 130 (alg3 -> expralg .)
    RBRACKET        reduce using rule 130 (alg3 -> expralg .)
    COMMA           reduce using rule 130 (alg3 -> expralg .)
    RPAREN          reduce using rule 130 (alg3 -> expralg .)
    ELSE            reduce using rule 130 (alg3 -> expralg .)


state 141

    (1) block -> LBRACE . inblock RBRACE
    (2) inblock -> . metaexpr
    (3) inblock -> . inblock divider metaexpr
    (4) inblock -> . divider inblock
    (5) inblock -> . inblock divider
    (25) metaexpr -> . expr
    (26) metaexpr -> . deffunc
    (27) metaexpr -> . module
    (28) metaexpr -> . application
    (29) metaexpr -> . declare
    (30) metaexpr -> . append
    (31) metaexpr -> . define
    (32) metaexpr -> . execscan
    (33) metaexpr -> . compile
    (34) metaexpr -> . downlevel
    (35) metaexpr -> . if
    (19) divider -> . DIVIDER
    (50) expr -> . expralg
    (51) expr -> . parttree
    (52) expr -> . alg0
    (53) expr -> . print
    (54) expr -> . varvar
    (55) expr -> . variables
    (56) expr -> . python
    (57) expr -> . execfile
    (58) expr -> . break
    (59) expr -> . unless
    (60) expr -> . curfile
    (61) expr -> . exectext
    (62) expr -> . equal
    (63) expr -> . element
    (64) expr -> . less
    (65) expr -> . length
    (66) expr -> . cycle
    (67) expr -> . mlist
    (68) expr -> . evaluate
    (69) expr -> . yield
    (70) expr -> . repeat
    (71) expr -> . pass
    (72) expr -> . dict
    (73) expr -> . return
    (74) expr -> . modules
    (75) expr -> . exfiles
    (76) expr -> . input
    (8) deffunc -> . DEFFUNC WORD LPAREN args RPAREN block
    (7) module -> . MODULE WORD block
    (47) application -> . APPLICATION WORD block
    (15) declare -> . expr COLON expr
    (22) append -> . var APPEND expr
    (9) define -> . DEFINE WORD expr
    (10) define -> . WORD DEFOP expr
    (100) execscan -> . EXECSCAN expr
    (119) compile -> . COMPILE
    (104) downlevel -> . DOWNLEVEL expr
    (16) if -> . IF LPAREN expr RPAREN expr
    (77) expralg -> . term
    (78) expralg -> . abspath
    (79) expralg -> . invrelpath
    (80) expralg -> . subst
    (81) expralg -> . relpath
    (82) expralg -> . relpathbase
    (83) expralg -> . func
    (84) expralg -> . listdir
    (85) expralg -> . isdir
    (86) expralg -> . block
    (87) expralg -> . list
    (41) parttree -> . AMPERSAND metaexpr
    (123) alg0 -> . alg1
    (124) alg0 -> . alg0 PLUSMINUS alg1
    (125) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (113) varvar -> . var
    (114) varvar -> . varvar POINT var
    (111) variables -> . VARIABLES expr
    (96) python -> . PYTHON str
    (97) execfile -> . EXECFILE expr
    (40) break -> . BREAK
    (17) unless -> . UNLESS LPAREN expr RPAREN expr
    (18) unless -> . UNLESS LPAREN expr RPAREN expr ELSE expr
    (115) curfile -> . CURFILE
    (103) exectext -> . EXECTEXT expr
    (46) equal -> . expr EQUALS expr
    (109) element -> . expr LBRACKET expr RBRACKET
    (101) less -> . expr LESS expr
    (102) length -> . LENGTH LPAREN expr RPAREN
    (89) cycle -> . CYCLE
    (112) mlist -> . MLIST COLON block
    (98) evaluate -> . EVALUATE expr
    (106) yield -> . YIELD
    (108) repeat -> . REPEAT
    (120) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (88) return -> . RETURN expr
    (21) modules -> . MODULES
    (117) exfiles -> . EXFILES
    (20) input -> . INPUT
    (110) var -> . WORD
    (90) term -> . str
    (91) term -> . float
    (92) term -> . int
    (93) term -> . var
    (94) term -> . undervar
    (122) abspath -> . ABSPATH
    (121) invrelpath -> . INVRELPATH
    (99) subst -> . SUBST LPAREN expr RPAREN
    (116) relpath -> . RELPATH
    (118) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN block
    (24) func -> . WORD LPAREN args RPAREN
    (49) listdir -> . LISTDIR LPAREN expr RPAREN
    (48) isdir -> . ISDIR LPAREN expr RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (126) alg1 -> . alg2
    (127) alg1 -> . alg1 DIVMUL alg2
    (107) str -> . STRING
    (105) float -> . FLOAT
    (95) int -> . NUMBER
    (38) undervar -> . AT undervar
    (39) undervar -> . AT var
    (128) alg2 -> . alg3
    (129) alg2 -> . alg2 DPROD alg3
    (130) alg3 -> . expralg

    DIVIDER         shift and go to state 38
    DEFFUNC         shift and go to state 59
    MODULE          shift and go to state 52
    APPLICATION     shift and go to state 75
    DEFINE          shift and go to state 67
    WORD            shift and go to state 77
    EXECSCAN        shift and go to state 46
    COMPILE         shift and go to state 72
    DOWNLEVEL       shift and go to state 29
    IF              shift and go to state 101
    AMPERSAND       shift and go to state 12
    PLUSMINUS       shift and go to state 69
    PRINT           shift and go to state 47
    VARIABLES       shift and go to state 55
    PYTHON          shift and go to state 57
    EXECFILE        shift and go to state 73
    BREAK           shift and go to state 82
    UNLESS          shift and go to state 74
    CURFILE         shift and go to state 88
    EXECTEXT        shift and go to state 39
    LENGTH          shift and go to state 7
    CYCLE           shift and go to state 43
    MLIST           shift and go to state 90
    EVALUATE        shift and go to state 26
    YIELD           shift and go to state 4
    REPEAT          shift and go to state 103
    PASS            shift and go to state 34
    LBRACE          shift and go to state 31
    RETURN          shift and go to state 54
    MODULES         shift and go to state 63
    EXFILES         shift and go to state 14
    INPUT           shift and go to state 95
    ABSPATH         shift and go to state 33
    INVRELPATH      shift and go to state 36
    SUBST           shift and go to state 102
    RELPATH         shift and go to state 25
    RELPATHBASE     shift and go to state 5
    LISTDIR         shift and go to state 30
    ISDIR           shift and go to state 51
    LBRACKET        shift and go to state 83
    STRING          shift and go to state 70
    FLOAT           shift and go to state 3
    NUMBER          shift and go to state 28
    AT              shift and go to state 56

    isdir                          shift and go to state 1
    metaexpr                       shift and go to state 61
    undervar                       shift and go to state 62
    alg1                           shift and go to state 6
    expralg                        shift and go to state 64
    curfile                        shift and go to state 35
    length                         shift and go to state 66
    parttree                       shift and go to state 10
    invrelpath                     shift and go to state 16
    float                          shift and go to state 8
    execfile                       shift and go to state 68
    less                           shift and go to state 9
    equal                          shift and go to state 84
    application                    shift and go to state 11
    subst                          shift and go to state 86
    pass                           shift and go to state 37
    element                        shift and go to state 13
    relpath                        shift and go to state 15
    modules                        shift and go to state 91
    break                          shift and go to state 17
    alg2                           shift and go to state 2
    list                           shift and go to state 23
    relpathbase                    shift and go to state 94
    alg3                           shift and go to state 19
    varvar                         shift and go to state 20
    expr                           shift and go to state 21
    return                         shift and go to state 65
    execscan                       shift and go to state 60
    str                            shift and go to state 78
    downlevel                      shift and go to state 79
    inblock                        shift and go to state 120
    unless                         shift and go to state 81
    exfiles                        shift and go to state 85
    func                           shift and go to state 50
    evaluate                       shift and go to state 92
    if                             shift and go to state 87
    int                            shift and go to state 32
    alg0                           shift and go to state 89
    declare                        shift and go to state 27
    compile                        shift and go to state 80
    define                         shift and go to state 40
    module                         shift and go to state 22
    exectext                       shift and go to state 41
    var                            shift and go to state 42
    listdir                        shift and go to state 44
    deffunc                        shift and go to state 93
    append                         shift and go to state 18
    input                          shift and go to state 48
    term                           shift and go to state 45
    variables                      shift and go to state 96
    print                          shift and go to state 49
    divider                        shift and go to state 104
    dict                           shift and go to state 98
    mlist                          shift and go to state 100
    block                          shift and go to state 76
    python                         shift and go to state 53
    cycle                          shift and go to state 97
    repeat                         shift and go to state 99
    yield                          shift and go to state 71
    abspath                        shift and go to state 58

state 142

    (93) term -> var .

    DPROD           reduce using rule 93 (term -> var .)
    DIVMUL          reduce using rule 93 (term -> var .)
    PLUSMINUS       reduce using rule 93 (term -> var .)
    COLON           reduce using rule 93 (term -> var .)
    EQUALS          reduce using rule 93 (term -> var .)
    LBRACKET        reduce using rule 93 (term -> var .)
    LESS            reduce using rule 93 (term -> var .)
    DIVIDER         reduce using rule 93 (term -> var .)
    $end            reduce using rule 93 (term -> var .)
    RBRACE          reduce using rule 93 (term -> var .)
    RBRACKET        reduce using rule 93 (term -> var .)
    COMMA           reduce using rule 93 (term -> var .)
    RPAREN          reduce using rule 93 (term -> var .)
    ELSE            reduce using rule 93 (term -> var .)


state 143

    (97) execfile -> EXECFILE expr .
    (46) equal -> expr . EQUALS expr
    (109) element -> expr . LBRACKET expr RBRACKET
    (101) less -> expr . LESS expr

  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
    COLON           reduce using rule 97 (execfile -> EXECFILE expr .)
    DIVIDER         reduce using rule 97 (execfile -> EXECFILE expr .)
    $end            reduce using rule 97 (execfile -> EXECFILE expr .)
    RBRACE          reduce using rule 97 (execfile -> EXECFILE expr .)
    RBRACKET        reduce using rule 97 (execfile -> EXECFILE expr .)
    COMMA           reduce using rule 97 (execfile -> EXECFILE expr .)
    RPAREN          reduce using rule 97 (execfile -> EXECFILE expr .)
    ELSE            reduce using rule 97 (execfile -> EXECFILE expr .)
    EQUALS          shift and go to state 111
    LBRACKET        shift and go to state 112
    LESS            shift and go to state 110

  ! EQUALS          [ reduce using rule 97 (execfile -> EXECFILE expr .) ]
  ! LBRACKET        [ reduce using rule 97 (execfile -> EXECFILE expr .) ]
  ! LESS            [ reduce using rule 97 (execfile -> EXECFILE expr .) ]


state 144

    (17) unless -> UNLESS LPAREN . expr RPAREN expr
    (18) unless -> UNLESS LPAREN . expr RPAREN expr ELSE expr
    (50) expr -> . expralg
    (51) expr -> . parttree
    (52) expr -> . alg0
    (53) expr -> . print
    (54) expr -> . varvar
    (55) expr -> . variables
    (56) expr -> . python
    (57) expr -> . execfile
    (58) expr -> . break
    (59) expr -> . unless
    (60) expr -> . curfile
    (61) expr -> . exectext
    (62) expr -> . equal
    (63) expr -> . element
    (64) expr -> . less
    (65) expr -> . length
    (66) expr -> . cycle
    (67) expr -> . mlist
    (68) expr -> . evaluate
    (69) expr -> . yield
    (70) expr -> . repeat
    (71) expr -> . pass
    (72) expr -> . dict
    (73) expr -> . return
    (74) expr -> . modules
    (75) expr -> . exfiles
    (76) expr -> . input
    (77) expralg -> . term
    (78) expralg -> . abspath
    (79) expralg -> . invrelpath
    (80) expralg -> . subst
    (81) expralg -> . relpath
    (82) expralg -> . relpathbase
    (83) expralg -> . func
    (84) expralg -> . listdir
    (85) expralg -> . isdir
    (86) expralg -> . block
    (87) expralg -> . list
    (41) parttree -> . AMPERSAND metaexpr
    (123) alg0 -> . alg1
    (124) alg0 -> . alg0 PLUSMINUS alg1
    (125) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (113) varvar -> . var
    (114) varvar -> . varvar POINT var
    (111) variables -> . VARIABLES expr
    (96) python -> . PYTHON str
    (97) execfile -> . EXECFILE expr
    (40) break -> . BREAK
    (17) unless -> . UNLESS LPAREN expr RPAREN expr
    (18) unless -> . UNLESS LPAREN expr RPAREN expr ELSE expr
    (115) curfile -> . CURFILE
    (103) exectext -> . EXECTEXT expr
    (46) equal -> . expr EQUALS expr
    (109) element -> . expr LBRACKET expr RBRACKET
    (101) less -> . expr LESS expr
    (102) length -> . LENGTH LPAREN expr RPAREN
    (89) cycle -> . CYCLE
    (112) mlist -> . MLIST COLON block
    (98) evaluate -> . EVALUATE expr
    (106) yield -> . YIELD
    (108) repeat -> . REPEAT
    (120) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (88) return -> . RETURN expr
    (21) modules -> . MODULES
    (117) exfiles -> . EXFILES
    (20) input -> . INPUT
    (90) term -> . str
    (91) term -> . float
    (92) term -> . int
    (93) term -> . var
    (94) term -> . undervar
    (122) abspath -> . ABSPATH
    (121) invrelpath -> . INVRELPATH
    (99) subst -> . SUBST LPAREN expr RPAREN
    (116) relpath -> . RELPATH
    (118) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN block
    (24) func -> . WORD LPAREN args RPAREN
    (49) listdir -> . LISTDIR LPAREN expr RPAREN
    (48) isdir -> . ISDIR LPAREN expr RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (126) alg1 -> . alg2
    (127) alg1 -> . alg1 DIVMUL alg2
    (110) var -> . WORD
    (107) str -> . STRING
    (105) float -> . FLOAT
    (95) int -> . NUMBER
    (38) undervar -> . AT undervar
    (39) undervar -> . AT var
    (128) alg2 -> . alg3
    (129) alg2 -> . alg2 DPROD alg3
    (130) alg3 -> . expralg

    AMPERSAND       shift and go to state 12
    PLUSMINUS       shift and go to state 69
    PRINT           shift and go to state 47
    VARIABLES       shift and go to state 55
    PYTHON          shift and go to state 57
    EXECFILE        shift and go to state 73
    BREAK           shift and go to state 82
    UNLESS          shift and go to state 74
    CURFILE         shift and go to state 88
    EXECTEXT        shift and go to state 39
    LENGTH          shift and go to state 7
    CYCLE           shift and go to state 43
    MLIST           shift and go to state 90
    EVALUATE        shift and go to state 26
    YIELD           shift and go to state 4
    REPEAT          shift and go to state 103
    PASS            shift and go to state 34
    LBRACE          shift and go to state 31
    RETURN          shift and go to state 54
    MODULES         shift and go to state 63
    EXFILES         shift and go to state 14
    INPUT           shift and go to state 95
    ABSPATH         shift and go to state 33
    INVRELPATH      shift and go to state 36
    SUBST           shift and go to state 102
    RELPATH         shift and go to state 25
    RELPATHBASE     shift and go to state 5
    WORD            shift and go to state 117
    LISTDIR         shift and go to state 30
    ISDIR           shift and go to state 51
    LBRACKET        shift and go to state 83
    STRING          shift and go to state 70
    FLOAT           shift and go to state 3
    NUMBER          shift and go to state 28
    AT              shift and go to state 56

    isdir                          shift and go to state 1
    undervar                       shift and go to state 62
    alg1                           shift and go to state 6
    expralg                        shift and go to state 64
    alg0                           shift and go to state 89
    length                         shift and go to state 66
    float                          shift and go to state 8
    equal                          shift and go to state 84
    less                           shift and go to state 9
    parttree                       shift and go to state 10
    element                        shift and go to state 13
    relpath                        shift and go to state 15
    invrelpath                     shift and go to state 16
    break                          shift and go to state 17
    alg2                           shift and go to state 2
    execfile                       shift and go to state 68
    alg3                           shift and go to state 19
    varvar                         shift and go to state 20
    return                         shift and go to state 65
    str                            shift and go to state 78
    list                           shift and go to state 23
    unless                         shift and go to state 81
    exfiles                        shift and go to state 85
    evaluate                       shift and go to state 92
    int                            shift and go to state 32
    curfile                        shift and go to state 35
    pass                           shift and go to state 37
    expr                           shift and go to state 174
    subst                          shift and go to state 86
    exectext                       shift and go to state 41
    var                            shift and go to state 116
    modules                        shift and go to state 91
    listdir                        shift and go to state 44
    term                           shift and go to state 45
    relpathbase                    shift and go to state 94
    input                          shift and go to state 48
    variables                      shift and go to state 96
    print                          shift and go to state 49
    func                           shift and go to state 50
    dict                           shift and go to state 98
    mlist                          shift and go to state 100
    block                          shift and go to state 76
    python                         shift and go to state 53
    cycle                          shift and go to state 97
    repeat                         shift and go to state 99
    yield                          shift and go to state 71
    abspath                        shift and go to state 58

state 145

    (47) application -> APPLICATION WORD . block
    (1) block -> . LBRACE inblock RBRACE

    LBRACE          shift and go to state 141

    block                          shift and go to state 175

state 146

    (23) func -> WORD LPAREN . args RPAREN block
    (24) func -> WORD LPAREN . args RPAREN
    (42) args -> .
    (43) args -> . comms
    (44) comms -> . expr
    (45) comms -> . comms COMMA expr
    (50) expr -> . expralg
    (51) expr -> . parttree
    (52) expr -> . alg0
    (53) expr -> . print
    (54) expr -> . varvar
    (55) expr -> . variables
    (56) expr -> . python
    (57) expr -> . execfile
    (58) expr -> . break
    (59) expr -> . unless
    (60) expr -> . curfile
    (61) expr -> . exectext
    (62) expr -> . equal
    (63) expr -> . element
    (64) expr -> . less
    (65) expr -> . length
    (66) expr -> . cycle
    (67) expr -> . mlist
    (68) expr -> . evaluate
    (69) expr -> . yield
    (70) expr -> . repeat
    (71) expr -> . pass
    (72) expr -> . dict
    (73) expr -> . return
    (74) expr -> . modules
    (75) expr -> . exfiles
    (76) expr -> . input
    (77) expralg -> . term
    (78) expralg -> . abspath
    (79) expralg -> . invrelpath
    (80) expralg -> . subst
    (81) expralg -> . relpath
    (82) expralg -> . relpathbase
    (83) expralg -> . func
    (84) expralg -> . listdir
    (85) expralg -> . isdir
    (86) expralg -> . block
    (87) expralg -> . list
    (41) parttree -> . AMPERSAND metaexpr
    (123) alg0 -> . alg1
    (124) alg0 -> . alg0 PLUSMINUS alg1
    (125) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (113) varvar -> . var
    (114) varvar -> . varvar POINT var
    (111) variables -> . VARIABLES expr
    (96) python -> . PYTHON str
    (97) execfile -> . EXECFILE expr
    (40) break -> . BREAK
    (17) unless -> . UNLESS LPAREN expr RPAREN expr
    (18) unless -> . UNLESS LPAREN expr RPAREN expr ELSE expr
    (115) curfile -> . CURFILE
    (103) exectext -> . EXECTEXT expr
    (46) equal -> . expr EQUALS expr
    (109) element -> . expr LBRACKET expr RBRACKET
    (101) less -> . expr LESS expr
    (102) length -> . LENGTH LPAREN expr RPAREN
    (89) cycle -> . CYCLE
    (112) mlist -> . MLIST COLON block
    (98) evaluate -> . EVALUATE expr
    (106) yield -> . YIELD
    (108) repeat -> . REPEAT
    (120) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (88) return -> . RETURN expr
    (21) modules -> . MODULES
    (117) exfiles -> . EXFILES
    (20) input -> . INPUT
    (90) term -> . str
    (91) term -> . float
    (92) term -> . int
    (93) term -> . var
    (94) term -> . undervar
    (122) abspath -> . ABSPATH
    (121) invrelpath -> . INVRELPATH
    (99) subst -> . SUBST LPAREN expr RPAREN
    (116) relpath -> . RELPATH
    (118) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN block
    (24) func -> . WORD LPAREN args RPAREN
    (49) listdir -> . LISTDIR LPAREN expr RPAREN
    (48) isdir -> . ISDIR LPAREN expr RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (126) alg1 -> . alg2
    (127) alg1 -> . alg1 DIVMUL alg2
    (110) var -> . WORD
    (107) str -> . STRING
    (105) float -> . FLOAT
    (95) int -> . NUMBER
    (38) undervar -> . AT undervar
    (39) undervar -> . AT var
    (128) alg2 -> . alg3
    (129) alg2 -> . alg2 DPROD alg3
    (130) alg3 -> . expralg

    RPAREN          reduce using rule 42 (args -> .)
    AMPERSAND       shift and go to state 12
    PLUSMINUS       shift and go to state 69
    PRINT           shift and go to state 47
    VARIABLES       shift and go to state 55
    PYTHON          shift and go to state 57
    EXECFILE        shift and go to state 73
    BREAK           shift and go to state 82
    UNLESS          shift and go to state 74
    CURFILE         shift and go to state 88
    EXECTEXT        shift and go to state 39
    LENGTH          shift and go to state 7
    CYCLE           shift and go to state 43
    MLIST           shift and go to state 90
    EVALUATE        shift and go to state 26
    YIELD           shift and go to state 4
    REPEAT          shift and go to state 103
    PASS            shift and go to state 34
    LBRACE          shift and go to state 31
    RETURN          shift and go to state 54
    MODULES         shift and go to state 63
    EXFILES         shift and go to state 14
    INPUT           shift and go to state 95
    ABSPATH         shift and go to state 33
    INVRELPATH      shift and go to state 36
    SUBST           shift and go to state 102
    RELPATH         shift and go to state 25
    RELPATHBASE     shift and go to state 5
    WORD            shift and go to state 117
    LISTDIR         shift and go to state 30
    ISDIR           shift and go to state 51
    LBRACKET        shift and go to state 83
    STRING          shift and go to state 70
    FLOAT           shift and go to state 3
    NUMBER          shift and go to state 28
    AT              shift and go to state 56

    isdir                          shift and go to state 1
    undervar                       shift and go to state 62
    alg1                           shift and go to state 6
    expralg                        shift and go to state 64
    alg0                           shift and go to state 89
    length                         shift and go to state 66
    float                          shift and go to state 8
    execfile                       shift and go to state 68
    less                           shift and go to state 9
    parttree                       shift and go to state 10
    element                        shift and go to state 13
    comms                          shift and go to state 176
    relpath                        shift and go to state 15
    invrelpath                     shift and go to state 16
    break                          shift and go to state 17
    alg2                           shift and go to state 2
    alg3                           shift and go to state 19
    varvar                         shift and go to state 20
    return                         shift and go to state 65
    str                            shift and go to state 78
    list                           shift and go to state 23
    unless                         shift and go to state 81
    exfiles                        shift and go to state 85
    subst                          shift and go to state 86
    equal                          shift and go to state 84
    curfile                        shift and go to state 35
    pass                           shift and go to state 37
    expr                           shift and go to state 148
    evaluate                       shift and go to state 92
    exectext                       shift and go to state 41
    var                            shift and go to state 116
    modules                        shift and go to state 91
    listdir                        shift and go to state 44
    args                           shift and go to state 177
    repeat                         shift and go to state 99
    input                          shift and go to state 48
    term                           shift and go to state 45
    variables                      shift and go to state 96
    print                          shift and go to state 49
    func                           shift and go to state 50
    dict                           shift and go to state 98
    mlist                          shift and go to state 100
    block                          shift and go to state 76
    python                         shift and go to state 53
    cycle                          shift and go to state 97
    int                            shift and go to state 32
    relpathbase                    shift and go to state 94
    yield                          shift and go to state 71
    abspath                        shift and go to state 58

state 147

    (10) define -> WORD DEFOP . expr
    (50) expr -> . expralg
    (51) expr -> . parttree
    (52) expr -> . alg0
    (53) expr -> . print
    (54) expr -> . varvar
    (55) expr -> . variables
    (56) expr -> . python
    (57) expr -> . execfile
    (58) expr -> . break
    (59) expr -> . unless
    (60) expr -> . curfile
    (61) expr -> . exectext
    (62) expr -> . equal
    (63) expr -> . element
    (64) expr -> . less
    (65) expr -> . length
    (66) expr -> . cycle
    (67) expr -> . mlist
    (68) expr -> . evaluate
    (69) expr -> . yield
    (70) expr -> . repeat
    (71) expr -> . pass
    (72) expr -> . dict
    (73) expr -> . return
    (74) expr -> . modules
    (75) expr -> . exfiles
    (76) expr -> . input
    (77) expralg -> . term
    (78) expralg -> . abspath
    (79) expralg -> . invrelpath
    (80) expralg -> . subst
    (81) expralg -> . relpath
    (82) expralg -> . relpathbase
    (83) expralg -> . func
    (84) expralg -> . listdir
    (85) expralg -> . isdir
    (86) expralg -> . block
    (87) expralg -> . list
    (41) parttree -> . AMPERSAND metaexpr
    (123) alg0 -> . alg1
    (124) alg0 -> . alg0 PLUSMINUS alg1
    (125) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (113) varvar -> . var
    (114) varvar -> . varvar POINT var
    (111) variables -> . VARIABLES expr
    (96) python -> . PYTHON str
    (97) execfile -> . EXECFILE expr
    (40) break -> . BREAK
    (17) unless -> . UNLESS LPAREN expr RPAREN expr
    (18) unless -> . UNLESS LPAREN expr RPAREN expr ELSE expr
    (115) curfile -> . CURFILE
    (103) exectext -> . EXECTEXT expr
    (46) equal -> . expr EQUALS expr
    (109) element -> . expr LBRACKET expr RBRACKET
    (101) less -> . expr LESS expr
    (102) length -> . LENGTH LPAREN expr RPAREN
    (89) cycle -> . CYCLE
    (112) mlist -> . MLIST COLON block
    (98) evaluate -> . EVALUATE expr
    (106) yield -> . YIELD
    (108) repeat -> . REPEAT
    (120) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (88) return -> . RETURN expr
    (21) modules -> . MODULES
    (117) exfiles -> . EXFILES
    (20) input -> . INPUT
    (90) term -> . str
    (91) term -> . float
    (92) term -> . int
    (93) term -> . var
    (94) term -> . undervar
    (122) abspath -> . ABSPATH
    (121) invrelpath -> . INVRELPATH
    (99) subst -> . SUBST LPAREN expr RPAREN
    (116) relpath -> . RELPATH
    (118) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN block
    (24) func -> . WORD LPAREN args RPAREN
    (49) listdir -> . LISTDIR LPAREN expr RPAREN
    (48) isdir -> . ISDIR LPAREN expr RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (126) alg1 -> . alg2
    (127) alg1 -> . alg1 DIVMUL alg2
    (110) var -> . WORD
    (107) str -> . STRING
    (105) float -> . FLOAT
    (95) int -> . NUMBER
    (38) undervar -> . AT undervar
    (39) undervar -> . AT var
    (128) alg2 -> . alg3
    (129) alg2 -> . alg2 DPROD alg3
    (130) alg3 -> . expralg

    AMPERSAND       shift and go to state 12
    PLUSMINUS       shift and go to state 69
    PRINT           shift and go to state 47
    VARIABLES       shift and go to state 55
    PYTHON          shift and go to state 57
    EXECFILE        shift and go to state 73
    BREAK           shift and go to state 82
    UNLESS          shift and go to state 74
    CURFILE         shift and go to state 88
    EXECTEXT        shift and go to state 39
    LENGTH          shift and go to state 7
    CYCLE           shift and go to state 43
    MLIST           shift and go to state 90
    EVALUATE        shift and go to state 26
    YIELD           shift and go to state 4
    REPEAT          shift and go to state 103
    PASS            shift and go to state 34
    LBRACE          shift and go to state 31
    RETURN          shift and go to state 54
    MODULES         shift and go to state 63
    EXFILES         shift and go to state 14
    INPUT           shift and go to state 95
    ABSPATH         shift and go to state 33
    INVRELPATH      shift and go to state 36
    SUBST           shift and go to state 102
    RELPATH         shift and go to state 25
    RELPATHBASE     shift and go to state 5
    WORD            shift and go to state 117
    LISTDIR         shift and go to state 30
    ISDIR           shift and go to state 51
    LBRACKET        shift and go to state 83
    STRING          shift and go to state 70
    FLOAT           shift and go to state 3
    NUMBER          shift and go to state 28
    AT              shift and go to state 56

    isdir                          shift and go to state 1
    undervar                       shift and go to state 62
    alg1                           shift and go to state 6
    expralg                        shift and go to state 64
    alg0                           shift and go to state 89
    length                         shift and go to state 66
    float                          shift and go to state 8
    equal                          shift and go to state 84
    less                           shift and go to state 9
    parttree                       shift and go to state 10
    element                        shift and go to state 13
    relpath                        shift and go to state 15
    invrelpath                     shift and go to state 16
    break                          shift and go to state 17
    alg2                           shift and go to state 2
    execfile                       shift and go to state 68
    alg3                           shift and go to state 19
    varvar                         shift and go to state 20
    return                         shift and go to state 65
    str                            shift and go to state 78
    list                           shift and go to state 23
    unless                         shift and go to state 81
    exfiles                        shift and go to state 85
    evaluate                       shift and go to state 92
    int                            shift and go to state 32
    curfile                        shift and go to state 35
    pass                           shift and go to state 37
    expr                           shift and go to state 178
    subst                          shift and go to state 86
    exectext                       shift and go to state 41
    var                            shift and go to state 116
    modules                        shift and go to state 91
    listdir                        shift and go to state 44
    term                           shift and go to state 45
    relpathbase                    shift and go to state 94
    input                          shift and go to state 48
    variables                      shift and go to state 96
    print                          shift and go to state 49
    func                           shift and go to state 50
    dict                           shift and go to state 98
    mlist                          shift and go to state 100
    block                          shift and go to state 76
    python                         shift and go to state 53
    cycle                          shift and go to state 97
    repeat                         shift and go to state 99
    yield                          shift and go to state 71
    abspath                        shift and go to state 58

state 148

    (44) comms -> expr .
    (46) equal -> expr . EQUALS expr
    (109) element -> expr . LBRACKET expr RBRACKET
    (101) less -> expr . LESS expr

    COMMA           reduce using rule 44 (comms -> expr .)
    RPAREN          reduce using rule 44 (comms -> expr .)
    RBRACKET        reduce using rule 44 (comms -> expr .)
    EQUALS          shift and go to state 111
    LBRACKET        shift and go to state 112
    LESS            shift and go to state 110


state 149

    (37) list -> LBRACKET RBRACKET .

    COLON           reduce using rule 37 (list -> LBRACKET RBRACKET .)
    EQUALS          reduce using rule 37 (list -> LBRACKET RBRACKET .)
    LBRACKET        reduce using rule 37 (list -> LBRACKET RBRACKET .)
    LESS            reduce using rule 37 (list -> LBRACKET RBRACKET .)
    DIVIDER         reduce using rule 37 (list -> LBRACKET RBRACKET .)
    $end            reduce using rule 37 (list -> LBRACKET RBRACKET .)
    RBRACE          reduce using rule 37 (list -> LBRACKET RBRACKET .)
    RBRACKET        reduce using rule 37 (list -> LBRACKET RBRACKET .)
    COMMA           reduce using rule 37 (list -> LBRACKET RBRACKET .)
    RPAREN          reduce using rule 37 (list -> LBRACKET RBRACKET .)
    ELSE            reduce using rule 37 (list -> LBRACKET RBRACKET .)
    DPROD           reduce using rule 37 (list -> LBRACKET RBRACKET .)
    DIVMUL          reduce using rule 37 (list -> LBRACKET RBRACKET .)
    PLUSMINUS       reduce using rule 37 (list -> LBRACKET RBRACKET .)


state 150

    (36) list -> LBRACKET comms . RBRACKET
    (45) comms -> comms . COMMA expr

    RBRACKET        shift and go to state 179
    COMMA           shift and go to state 180


state 151

    (124) alg0 -> alg0 PLUSMINUS . alg1
    (126) alg1 -> . alg2
    (127) alg1 -> . alg1 DIVMUL alg2
    (128) alg2 -> . alg3
    (129) alg2 -> . alg2 DPROD alg3
    (130) alg3 -> . expralg
    (77) expralg -> . term
    (78) expralg -> . abspath
    (79) expralg -> . invrelpath
    (80) expralg -> . subst
    (81) expralg -> . relpath
    (82) expralg -> . relpathbase
    (83) expralg -> . func
    (84) expralg -> . listdir
    (85) expralg -> . isdir
    (86) expralg -> . block
    (87) expralg -> . list
    (90) term -> . str
    (91) term -> . float
    (92) term -> . int
    (93) term -> . var
    (94) term -> . undervar
    (122) abspath -> . ABSPATH
    (121) invrelpath -> . INVRELPATH
    (99) subst -> . SUBST LPAREN expr RPAREN
    (116) relpath -> . RELPATH
    (118) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN block
    (24) func -> . WORD LPAREN args RPAREN
    (49) listdir -> . LISTDIR LPAREN expr RPAREN
    (48) isdir -> . ISDIR LPAREN expr RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (107) str -> . STRING
    (105) float -> . FLOAT
    (95) int -> . NUMBER
    (110) var -> . WORD
    (38) undervar -> . AT undervar
    (39) undervar -> . AT var

    ABSPATH         shift and go to state 33
    INVRELPATH      shift and go to state 36
    SUBST           shift and go to state 102
    RELPATH         shift and go to state 25
    RELPATHBASE     shift and go to state 5
    WORD            shift and go to state 117
    LISTDIR         shift and go to state 30
    ISDIR           shift and go to state 51
    LBRACE          shift and go to state 141
    LBRACKET        shift and go to state 83
    STRING          shift and go to state 70
    FLOAT           shift and go to state 3
    NUMBER          shift and go to state 28
    AT              shift and go to state 56

    undervar                       shift and go to state 62
    list                           shift and go to state 23
    isdir                          shift and go to state 1
    alg1                           shift and go to state 181
    subst                          shift and go to state 86
    int                            shift and go to state 32
    float                          shift and go to state 8
    str                            shift and go to state 78
    expralg                        shift and go to state 140
    relpath                        shift and go to state 15
    var                            shift and go to state 142
    invrelpath                     shift and go to state 16
    listdir                        shift and go to state 44
    term                           shift and go to state 45
    alg2                           shift and go to state 2
    func                           shift and go to state 50
    block                          shift and go to state 76
    alg3                           shift and go to state 19
    relpathbase                    shift and go to state 94
    abspath                        shift and go to state 58

state 152

    (112) mlist -> MLIST COLON . block
    (1) block -> . LBRACE inblock RBRACE

    LBRACE          shift and go to state 141

    block                          shift and go to state 182

state 153

    (16) if -> IF LPAREN . expr RPAREN expr
    (50) expr -> . expralg
    (51) expr -> . parttree
    (52) expr -> . alg0
    (53) expr -> . print
    (54) expr -> . varvar
    (55) expr -> . variables
    (56) expr -> . python
    (57) expr -> . execfile
    (58) expr -> . break
    (59) expr -> . unless
    (60) expr -> . curfile
    (61) expr -> . exectext
    (62) expr -> . equal
    (63) expr -> . element
    (64) expr -> . less
    (65) expr -> . length
    (66) expr -> . cycle
    (67) expr -> . mlist
    (68) expr -> . evaluate
    (69) expr -> . yield
    (70) expr -> . repeat
    (71) expr -> . pass
    (72) expr -> . dict
    (73) expr -> . return
    (74) expr -> . modules
    (75) expr -> . exfiles
    (76) expr -> . input
    (77) expralg -> . term
    (78) expralg -> . abspath
    (79) expralg -> . invrelpath
    (80) expralg -> . subst
    (81) expralg -> . relpath
    (82) expralg -> . relpathbase
    (83) expralg -> . func
    (84) expralg -> . listdir
    (85) expralg -> . isdir
    (86) expralg -> . block
    (87) expralg -> . list
    (41) parttree -> . AMPERSAND metaexpr
    (123) alg0 -> . alg1
    (124) alg0 -> . alg0 PLUSMINUS alg1
    (125) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (113) varvar -> . var
    (114) varvar -> . varvar POINT var
    (111) variables -> . VARIABLES expr
    (96) python -> . PYTHON str
    (97) execfile -> . EXECFILE expr
    (40) break -> . BREAK
    (17) unless -> . UNLESS LPAREN expr RPAREN expr
    (18) unless -> . UNLESS LPAREN expr RPAREN expr ELSE expr
    (115) curfile -> . CURFILE
    (103) exectext -> . EXECTEXT expr
    (46) equal -> . expr EQUALS expr
    (109) element -> . expr LBRACKET expr RBRACKET
    (101) less -> . expr LESS expr
    (102) length -> . LENGTH LPAREN expr RPAREN
    (89) cycle -> . CYCLE
    (112) mlist -> . MLIST COLON block
    (98) evaluate -> . EVALUATE expr
    (106) yield -> . YIELD
    (108) repeat -> . REPEAT
    (120) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (88) return -> . RETURN expr
    (21) modules -> . MODULES
    (117) exfiles -> . EXFILES
    (20) input -> . INPUT
    (90) term -> . str
    (91) term -> . float
    (92) term -> . int
    (93) term -> . var
    (94) term -> . undervar
    (122) abspath -> . ABSPATH
    (121) invrelpath -> . INVRELPATH
    (99) subst -> . SUBST LPAREN expr RPAREN
    (116) relpath -> . RELPATH
    (118) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN block
    (24) func -> . WORD LPAREN args RPAREN
    (49) listdir -> . LISTDIR LPAREN expr RPAREN
    (48) isdir -> . ISDIR LPAREN expr RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (126) alg1 -> . alg2
    (127) alg1 -> . alg1 DIVMUL alg2
    (110) var -> . WORD
    (107) str -> . STRING
    (105) float -> . FLOAT
    (95) int -> . NUMBER
    (38) undervar -> . AT undervar
    (39) undervar -> . AT var
    (128) alg2 -> . alg3
    (129) alg2 -> . alg2 DPROD alg3
    (130) alg3 -> . expralg

    AMPERSAND       shift and go to state 12
    PLUSMINUS       shift and go to state 69
    PRINT           shift and go to state 47
    VARIABLES       shift and go to state 55
    PYTHON          shift and go to state 57
    EXECFILE        shift and go to state 73
    BREAK           shift and go to state 82
    UNLESS          shift and go to state 74
    CURFILE         shift and go to state 88
    EXECTEXT        shift and go to state 39
    LENGTH          shift and go to state 7
    CYCLE           shift and go to state 43
    MLIST           shift and go to state 90
    EVALUATE        shift and go to state 26
    YIELD           shift and go to state 4
    REPEAT          shift and go to state 103
    PASS            shift and go to state 34
    LBRACE          shift and go to state 31
    RETURN          shift and go to state 54
    MODULES         shift and go to state 63
    EXFILES         shift and go to state 14
    INPUT           shift and go to state 95
    ABSPATH         shift and go to state 33
    INVRELPATH      shift and go to state 36
    SUBST           shift and go to state 102
    RELPATH         shift and go to state 25
    RELPATHBASE     shift and go to state 5
    WORD            shift and go to state 117
    LISTDIR         shift and go to state 30
    ISDIR           shift and go to state 51
    LBRACKET        shift and go to state 83
    STRING          shift and go to state 70
    FLOAT           shift and go to state 3
    NUMBER          shift and go to state 28
    AT              shift and go to state 56

    isdir                          shift and go to state 1
    undervar                       shift and go to state 62
    alg1                           shift and go to state 6
    expralg                        shift and go to state 64
    alg0                           shift and go to state 89
    length                         shift and go to state 66
    float                          shift and go to state 8
    equal                          shift and go to state 84
    less                           shift and go to state 9
    parttree                       shift and go to state 10
    element                        shift and go to state 13
    relpath                        shift and go to state 15
    invrelpath                     shift and go to state 16
    break                          shift and go to state 17
    alg2                           shift and go to state 2
    execfile                       shift and go to state 68
    alg3                           shift and go to state 19
    varvar                         shift and go to state 20
    return                         shift and go to state 65
    str                            shift and go to state 78
    list                           shift and go to state 23
    unless                         shift and go to state 81
    exfiles                        shift and go to state 85
    evaluate                       shift and go to state 92
    int                            shift and go to state 32
    curfile                        shift and go to state 35
    pass                           shift and go to state 37
    expr                           shift and go to state 183
    subst                          shift and go to state 86
    exectext                       shift and go to state 41
    var                            shift and go to state 116
    modules                        shift and go to state 91
    listdir                        shift and go to state 44
    term                           shift and go to state 45
    relpathbase                    shift and go to state 94
    input                          shift and go to state 48
    variables                      shift and go to state 96
    print                          shift and go to state 49
    func                           shift and go to state 50
    dict                           shift and go to state 98
    mlist                          shift and go to state 100
    block                          shift and go to state 76
    python                         shift and go to state 53
    cycle                          shift and go to state 97
    repeat                         shift and go to state 99
    yield                          shift and go to state 71
    abspath                        shift and go to state 58

state 154

    (99) subst -> SUBST LPAREN . expr RPAREN
    (50) expr -> . expralg
    (51) expr -> . parttree
    (52) expr -> . alg0
    (53) expr -> . print
    (54) expr -> . varvar
    (55) expr -> . variables
    (56) expr -> . python
    (57) expr -> . execfile
    (58) expr -> . break
    (59) expr -> . unless
    (60) expr -> . curfile
    (61) expr -> . exectext
    (62) expr -> . equal
    (63) expr -> . element
    (64) expr -> . less
    (65) expr -> . length
    (66) expr -> . cycle
    (67) expr -> . mlist
    (68) expr -> . evaluate
    (69) expr -> . yield
    (70) expr -> . repeat
    (71) expr -> . pass
    (72) expr -> . dict
    (73) expr -> . return
    (74) expr -> . modules
    (75) expr -> . exfiles
    (76) expr -> . input
    (77) expralg -> . term
    (78) expralg -> . abspath
    (79) expralg -> . invrelpath
    (80) expralg -> . subst
    (81) expralg -> . relpath
    (82) expralg -> . relpathbase
    (83) expralg -> . func
    (84) expralg -> . listdir
    (85) expralg -> . isdir
    (86) expralg -> . block
    (87) expralg -> . list
    (41) parttree -> . AMPERSAND metaexpr
    (123) alg0 -> . alg1
    (124) alg0 -> . alg0 PLUSMINUS alg1
    (125) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (113) varvar -> . var
    (114) varvar -> . varvar POINT var
    (111) variables -> . VARIABLES expr
    (96) python -> . PYTHON str
    (97) execfile -> . EXECFILE expr
    (40) break -> . BREAK
    (17) unless -> . UNLESS LPAREN expr RPAREN expr
    (18) unless -> . UNLESS LPAREN expr RPAREN expr ELSE expr
    (115) curfile -> . CURFILE
    (103) exectext -> . EXECTEXT expr
    (46) equal -> . expr EQUALS expr
    (109) element -> . expr LBRACKET expr RBRACKET
    (101) less -> . expr LESS expr
    (102) length -> . LENGTH LPAREN expr RPAREN
    (89) cycle -> . CYCLE
    (112) mlist -> . MLIST COLON block
    (98) evaluate -> . EVALUATE expr
    (106) yield -> . YIELD
    (108) repeat -> . REPEAT
    (120) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (88) return -> . RETURN expr
    (21) modules -> . MODULES
    (117) exfiles -> . EXFILES
    (20) input -> . INPUT
    (90) term -> . str
    (91) term -> . float
    (92) term -> . int
    (93) term -> . var
    (94) term -> . undervar
    (122) abspath -> . ABSPATH
    (121) invrelpath -> . INVRELPATH
    (99) subst -> . SUBST LPAREN expr RPAREN
    (116) relpath -> . RELPATH
    (118) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN block
    (24) func -> . WORD LPAREN args RPAREN
    (49) listdir -> . LISTDIR LPAREN expr RPAREN
    (48) isdir -> . ISDIR LPAREN expr RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (126) alg1 -> . alg2
    (127) alg1 -> . alg1 DIVMUL alg2
    (110) var -> . WORD
    (107) str -> . STRING
    (105) float -> . FLOAT
    (95) int -> . NUMBER
    (38) undervar -> . AT undervar
    (39) undervar -> . AT var
    (128) alg2 -> . alg3
    (129) alg2 -> . alg2 DPROD alg3
    (130) alg3 -> . expralg

    AMPERSAND       shift and go to state 12
    PLUSMINUS       shift and go to state 69
    PRINT           shift and go to state 47
    VARIABLES       shift and go to state 55
    PYTHON          shift and go to state 57
    EXECFILE        shift and go to state 73
    BREAK           shift and go to state 82
    UNLESS          shift and go to state 74
    CURFILE         shift and go to state 88
    EXECTEXT        shift and go to state 39
    LENGTH          shift and go to state 7
    CYCLE           shift and go to state 43
    MLIST           shift and go to state 90
    EVALUATE        shift and go to state 26
    YIELD           shift and go to state 4
    REPEAT          shift and go to state 103
    PASS            shift and go to state 34
    LBRACE          shift and go to state 31
    RETURN          shift and go to state 54
    MODULES         shift and go to state 63
    EXFILES         shift and go to state 14
    INPUT           shift and go to state 95
    ABSPATH         shift and go to state 33
    INVRELPATH      shift and go to state 36
    SUBST           shift and go to state 102
    RELPATH         shift and go to state 25
    RELPATHBASE     shift and go to state 5
    WORD            shift and go to state 117
    LISTDIR         shift and go to state 30
    ISDIR           shift and go to state 51
    LBRACKET        shift and go to state 83
    STRING          shift and go to state 70
    FLOAT           shift and go to state 3
    NUMBER          shift and go to state 28
    AT              shift and go to state 56

    isdir                          shift and go to state 1
    undervar                       shift and go to state 62
    alg1                           shift and go to state 6
    expralg                        shift and go to state 64
    alg0                           shift and go to state 89
    length                         shift and go to state 66
    float                          shift and go to state 8
    equal                          shift and go to state 84
    less                           shift and go to state 9
    parttree                       shift and go to state 10
    element                        shift and go to state 13
    relpath                        shift and go to state 15
    invrelpath                     shift and go to state 16
    break                          shift and go to state 17
    alg2                           shift and go to state 2
    execfile                       shift and go to state 68
    alg3                           shift and go to state 19
    varvar                         shift and go to state 20
    return                         shift and go to state 65
    str                            shift and go to state 78
    list                           shift and go to state 23
    unless                         shift and go to state 81
    exfiles                        shift and go to state 85
    evaluate                       shift and go to state 92
    int                            shift and go to state 32
    curfile                        shift and go to state 35
    pass                           shift and go to state 37
    expr                           shift and go to state 184
    subst                          shift and go to state 86
    exectext                       shift and go to state 41
    var                            shift and go to state 116
    modules                        shift and go to state 91
    listdir                        shift and go to state 44
    term                           shift and go to state 45
    relpathbase                    shift and go to state 94
    input                          shift and go to state 48
    variables                      shift and go to state 96
    print                          shift and go to state 49
    func                           shift and go to state 50
    dict                           shift and go to state 98
    mlist                          shift and go to state 100
    block                          shift and go to state 76
    python                         shift and go to state 53
    cycle                          shift and go to state 97
    repeat                         shift and go to state 99
    yield                          shift and go to state 71
    abspath                        shift and go to state 58

state 155

    (4) inblock -> divider inblock .
    (3) inblock -> inblock . divider metaexpr
    (5) inblock -> inblock . divider
    (19) divider -> . DIVIDER

  ! shift/reduce conflict for DIVIDER resolved as shift
    $end            reduce using rule 4 (inblock -> divider inblock .)
    RBRACE          reduce using rule 4 (inblock -> divider inblock .)
    DIVIDER         shift and go to state 38

  ! DIVIDER         [ reduce using rule 4 (inblock -> divider inblock .) ]

    divider                        shift and go to state 114

state 156

    (129) alg2 -> alg2 DPROD alg3 .

    DPROD           reduce using rule 129 (alg2 -> alg2 DPROD alg3 .)
    DIVMUL          reduce using rule 129 (alg2 -> alg2 DPROD alg3 .)
    PLUSMINUS       reduce using rule 129 (alg2 -> alg2 DPROD alg3 .)
    COLON           reduce using rule 129 (alg2 -> alg2 DPROD alg3 .)
    EQUALS          reduce using rule 129 (alg2 -> alg2 DPROD alg3 .)
    LBRACKET        reduce using rule 129 (alg2 -> alg2 DPROD alg3 .)
    LESS            reduce using rule 129 (alg2 -> alg2 DPROD alg3 .)
    DIVIDER         reduce using rule 129 (alg2 -> alg2 DPROD alg3 .)
    $end            reduce using rule 129 (alg2 -> alg2 DPROD alg3 .)
    RBRACE          reduce using rule 129 (alg2 -> alg2 DPROD alg3 .)
    RBRACKET        reduce using rule 129 (alg2 -> alg2 DPROD alg3 .)
    COMMA           reduce using rule 129 (alg2 -> alg2 DPROD alg3 .)
    RPAREN          reduce using rule 129 (alg2 -> alg2 DPROD alg3 .)
    ELSE            reduce using rule 129 (alg2 -> alg2 DPROD alg3 .)


state 157

    (127) alg1 -> alg1 DIVMUL alg2 .
    (129) alg2 -> alg2 . DPROD alg3

    DIVMUL          reduce using rule 127 (alg1 -> alg1 DIVMUL alg2 .)
    PLUSMINUS       reduce using rule 127 (alg1 -> alg1 DIVMUL alg2 .)
    RPAREN          reduce using rule 127 (alg1 -> alg1 DIVMUL alg2 .)
    EQUALS          reduce using rule 127 (alg1 -> alg1 DIVMUL alg2 .)
    LBRACKET        reduce using rule 127 (alg1 -> alg1 DIVMUL alg2 .)
    LESS            reduce using rule 127 (alg1 -> alg1 DIVMUL alg2 .)
    COLON           reduce using rule 127 (alg1 -> alg1 DIVMUL alg2 .)
    DIVIDER         reduce using rule 127 (alg1 -> alg1 DIVMUL alg2 .)
    $end            reduce using rule 127 (alg1 -> alg1 DIVMUL alg2 .)
    RBRACE          reduce using rule 127 (alg1 -> alg1 DIVMUL alg2 .)
    RBRACKET        reduce using rule 127 (alg1 -> alg1 DIVMUL alg2 .)
    COMMA           reduce using rule 127 (alg1 -> alg1 DIVMUL alg2 .)
    ELSE            reduce using rule 127 (alg1 -> alg1 DIVMUL alg2 .)
    DPROD           shift and go to state 105


state 158

    (102) length -> LENGTH LPAREN expr . RPAREN
    (46) equal -> expr . EQUALS expr
    (109) element -> expr . LBRACKET expr RBRACKET
    (101) less -> expr . LESS expr

    RPAREN          shift and go to state 185
    EQUALS          shift and go to state 111
    LBRACKET        shift and go to state 112
    LESS            shift and go to state 110


state 159

    (114) varvar -> varvar POINT var .

    POINT           reduce using rule 114 (varvar -> varvar POINT var .)
    COLON           reduce using rule 114 (varvar -> varvar POINT var .)
    EQUALS          reduce using rule 114 (varvar -> varvar POINT var .)
    LBRACKET        reduce using rule 114 (varvar -> varvar POINT var .)
    LESS            reduce using rule 114 (varvar -> varvar POINT var .)
    DIVIDER         reduce using rule 114 (varvar -> varvar POINT var .)
    $end            reduce using rule 114 (varvar -> varvar POINT var .)
    RBRACE          reduce using rule 114 (varvar -> varvar POINT var .)
    RBRACKET        reduce using rule 114 (varvar -> varvar POINT var .)
    COMMA           reduce using rule 114 (varvar -> varvar POINT var .)
    RPAREN          reduce using rule 114 (varvar -> varvar POINT var .)
    ELSE            reduce using rule 114 (varvar -> varvar POINT var .)


state 160

    (101) less -> expr LESS expr .
    (46) equal -> expr . EQUALS expr
    (109) element -> expr . LBRACKET expr RBRACKET
    (101) less -> expr . LESS expr

  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
    COLON           reduce using rule 101 (less -> expr LESS expr .)
    DIVIDER         reduce using rule 101 (less -> expr LESS expr .)
    $end            reduce using rule 101 (less -> expr LESS expr .)
    RBRACE          reduce using rule 101 (less -> expr LESS expr .)
    RBRACKET        reduce using rule 101 (less -> expr LESS expr .)
    COMMA           reduce using rule 101 (less -> expr LESS expr .)
    RPAREN          reduce using rule 101 (less -> expr LESS expr .)
    ELSE            reduce using rule 101 (less -> expr LESS expr .)
    EQUALS          shift and go to state 111
    LBRACKET        shift and go to state 112
    LESS            shift and go to state 110

  ! EQUALS          [ reduce using rule 101 (less -> expr LESS expr .) ]
  ! LBRACKET        [ reduce using rule 101 (less -> expr LESS expr .) ]
  ! LESS            [ reduce using rule 101 (less -> expr LESS expr .) ]


state 161

    (46) equal -> expr EQUALS expr .
    (46) equal -> expr . EQUALS expr
    (109) element -> expr . LBRACKET expr RBRACKET
    (101) less -> expr . LESS expr

  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
    COMMA           reduce using rule 46 (equal -> expr EQUALS expr .)
    RPAREN          reduce using rule 46 (equal -> expr EQUALS expr .)
    COLON           reduce using rule 46 (equal -> expr EQUALS expr .)
    DIVIDER         reduce using rule 46 (equal -> expr EQUALS expr .)
    $end            reduce using rule 46 (equal -> expr EQUALS expr .)
    RBRACE          reduce using rule 46 (equal -> expr EQUALS expr .)
    RBRACKET        reduce using rule 46 (equal -> expr EQUALS expr .)
    ELSE            reduce using rule 46 (equal -> expr EQUALS expr .)
    EQUALS          shift and go to state 111
    LBRACKET        shift and go to state 112
    LESS            shift and go to state 110

  ! EQUALS          [ reduce using rule 46 (equal -> expr EQUALS expr .) ]
  ! LBRACKET        [ reduce using rule 46 (equal -> expr EQUALS expr .) ]
  ! LESS            [ reduce using rule 46 (equal -> expr EQUALS expr .) ]


state 162

    (109) element -> expr LBRACKET expr . RBRACKET
    (46) equal -> expr . EQUALS expr
    (109) element -> expr . LBRACKET expr RBRACKET
    (101) less -> expr . LESS expr

    RBRACKET        shift and go to state 186
    EQUALS          shift and go to state 111
    LBRACKET        shift and go to state 112
    LESS            shift and go to state 110


state 163

    (15) declare -> expr COLON expr .
    (46) equal -> expr . EQUALS expr
    (109) element -> expr . LBRACKET expr RBRACKET
    (101) less -> expr . LESS expr

  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
    DIVIDER         reduce using rule 15 (declare -> expr COLON expr .)
    $end            reduce using rule 15 (declare -> expr COLON expr .)
    RBRACE          reduce using rule 15 (declare -> expr COLON expr .)
    COMMA           reduce using rule 15 (declare -> expr COLON expr .)
    COLON           reduce using rule 15 (declare -> expr COLON expr .)
    RBRACKET        reduce using rule 15 (declare -> expr COLON expr .)
    RPAREN          reduce using rule 15 (declare -> expr COLON expr .)
    ELSE            reduce using rule 15 (declare -> expr COLON expr .)
    EQUALS          shift and go to state 111
    LBRACKET        shift and go to state 112
    LESS            shift and go to state 110

  ! EQUALS          [ reduce using rule 15 (declare -> expr COLON expr .) ]
  ! LBRACKET        [ reduce using rule 15 (declare -> expr COLON expr .) ]
  ! LESS            [ reduce using rule 15 (declare -> expr COLON expr .) ]


state 164

    (3) inblock -> inblock divider metaexpr .

    DIVIDER         reduce using rule 3 (inblock -> inblock divider metaexpr .)
    $end            reduce using rule 3 (inblock -> inblock divider metaexpr .)
    RBRACE          reduce using rule 3 (inblock -> inblock divider metaexpr .)


state 165

    (49) listdir -> LISTDIR LPAREN expr . RPAREN
    (46) equal -> expr . EQUALS expr
    (109) element -> expr . LBRACKET expr RBRACKET
    (101) less -> expr . LESS expr

    RPAREN          shift and go to state 187
    EQUALS          shift and go to state 111
    LBRACKET        shift and go to state 112
    LESS            shift and go to state 110


state 166

    (1) block -> LBRACE inblock RBRACE .

    COLON           reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    EQUALS          reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    LBRACKET        reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    LESS            reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    DIVIDER         reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    $end            reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    RBRACE          reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    RBRACKET        reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    COMMA           reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    RPAREN          reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    ELSE            reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    DPROD           reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    DIVMUL          reduce using rule 1 (block -> LBRACE inblock RBRACE .)
    PLUSMINUS       reduce using rule 1 (block -> LBRACE inblock RBRACE .)


state 167

    (11) dict -> LBRACE declares RBRACE .

    COLON           reduce using rule 11 (dict -> LBRACE declares RBRACE .)
    EQUALS          reduce using rule 11 (dict -> LBRACE declares RBRACE .)
    LBRACKET        reduce using rule 11 (dict -> LBRACE declares RBRACE .)
    LESS            reduce using rule 11 (dict -> LBRACE declares RBRACE .)
    DIVIDER         reduce using rule 11 (dict -> LBRACE declares RBRACE .)
    $end            reduce using rule 11 (dict -> LBRACE declares RBRACE .)
    RBRACE          reduce using rule 11 (dict -> LBRACE declares RBRACE .)
    RBRACKET        reduce using rule 11 (dict -> LBRACE declares RBRACE .)
    COMMA           reduce using rule 11 (dict -> LBRACE declares RBRACE .)
    RPAREN          reduce using rule 11 (dict -> LBRACE declares RBRACE .)
    ELSE            reduce using rule 11 (dict -> LBRACE declares RBRACE .)


state 168

    (14) declares -> declares COMMA . declare
    (15) declare -> . expr COLON expr
    (50) expr -> . expralg
    (51) expr -> . parttree
    (52) expr -> . alg0
    (53) expr -> . print
    (54) expr -> . varvar
    (55) expr -> . variables
    (56) expr -> . python
    (57) expr -> . execfile
    (58) expr -> . break
    (59) expr -> . unless
    (60) expr -> . curfile
    (61) expr -> . exectext
    (62) expr -> . equal
    (63) expr -> . element
    (64) expr -> . less
    (65) expr -> . length
    (66) expr -> . cycle
    (67) expr -> . mlist
    (68) expr -> . evaluate
    (69) expr -> . yield
    (70) expr -> . repeat
    (71) expr -> . pass
    (72) expr -> . dict
    (73) expr -> . return
    (74) expr -> . modules
    (75) expr -> . exfiles
    (76) expr -> . input
    (77) expralg -> . term
    (78) expralg -> . abspath
    (79) expralg -> . invrelpath
    (80) expralg -> . subst
    (81) expralg -> . relpath
    (82) expralg -> . relpathbase
    (83) expralg -> . func
    (84) expralg -> . listdir
    (85) expralg -> . isdir
    (86) expralg -> . block
    (87) expralg -> . list
    (41) parttree -> . AMPERSAND metaexpr
    (123) alg0 -> . alg1
    (124) alg0 -> . alg0 PLUSMINUS alg1
    (125) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (113) varvar -> . var
    (114) varvar -> . varvar POINT var
    (111) variables -> . VARIABLES expr
    (96) python -> . PYTHON str
    (97) execfile -> . EXECFILE expr
    (40) break -> . BREAK
    (17) unless -> . UNLESS LPAREN expr RPAREN expr
    (18) unless -> . UNLESS LPAREN expr RPAREN expr ELSE expr
    (115) curfile -> . CURFILE
    (103) exectext -> . EXECTEXT expr
    (46) equal -> . expr EQUALS expr
    (109) element -> . expr LBRACKET expr RBRACKET
    (101) less -> . expr LESS expr
    (102) length -> . LENGTH LPAREN expr RPAREN
    (89) cycle -> . CYCLE
    (112) mlist -> . MLIST COLON block
    (98) evaluate -> . EVALUATE expr
    (106) yield -> . YIELD
    (108) repeat -> . REPEAT
    (120) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (88) return -> . RETURN expr
    (21) modules -> . MODULES
    (117) exfiles -> . EXFILES
    (20) input -> . INPUT
    (90) term -> . str
    (91) term -> . float
    (92) term -> . int
    (93) term -> . var
    (94) term -> . undervar
    (122) abspath -> . ABSPATH
    (121) invrelpath -> . INVRELPATH
    (99) subst -> . SUBST LPAREN expr RPAREN
    (116) relpath -> . RELPATH
    (118) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN block
    (24) func -> . WORD LPAREN args RPAREN
    (49) listdir -> . LISTDIR LPAREN expr RPAREN
    (48) isdir -> . ISDIR LPAREN expr RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (126) alg1 -> . alg2
    (127) alg1 -> . alg1 DIVMUL alg2
    (110) var -> . WORD
    (107) str -> . STRING
    (105) float -> . FLOAT
    (95) int -> . NUMBER
    (38) undervar -> . AT undervar
    (39) undervar -> . AT var
    (128) alg2 -> . alg3
    (129) alg2 -> . alg2 DPROD alg3
    (130) alg3 -> . expralg

    AMPERSAND       shift and go to state 12
    PLUSMINUS       shift and go to state 69
    PRINT           shift and go to state 47
    VARIABLES       shift and go to state 55
    PYTHON          shift and go to state 57
    EXECFILE        shift and go to state 73
    BREAK           shift and go to state 82
    UNLESS          shift and go to state 74
    CURFILE         shift and go to state 88
    EXECTEXT        shift and go to state 39
    LENGTH          shift and go to state 7
    CYCLE           shift and go to state 43
    MLIST           shift and go to state 90
    EVALUATE        shift and go to state 26
    YIELD           shift and go to state 4
    REPEAT          shift and go to state 103
    PASS            shift and go to state 34
    LBRACE          shift and go to state 31
    RETURN          shift and go to state 54
    MODULES         shift and go to state 63
    EXFILES         shift and go to state 14
    INPUT           shift and go to state 95
    ABSPATH         shift and go to state 33
    INVRELPATH      shift and go to state 36
    SUBST           shift and go to state 102
    RELPATH         shift and go to state 25
    RELPATHBASE     shift and go to state 5
    WORD            shift and go to state 117
    LISTDIR         shift and go to state 30
    ISDIR           shift and go to state 51
    LBRACKET        shift and go to state 83
    STRING          shift and go to state 70
    FLOAT           shift and go to state 3
    NUMBER          shift and go to state 28
    AT              shift and go to state 56

    isdir                          shift and go to state 1
    undervar                       shift and go to state 62
    alg1                           shift and go to state 6
    expralg                        shift and go to state 64
    alg0                           shift and go to state 89
    length                         shift and go to state 66
    float                          shift and go to state 8
    equal                          shift and go to state 84
    less                           shift and go to state 9
    parttree                       shift and go to state 10
    pass                           shift and go to state 37
    element                        shift and go to state 13
    relpath                        shift and go to state 15
    invrelpath                     shift and go to state 16
    break                          shift and go to state 17
    alg2                           shift and go to state 2
    execfile                       shift and go to state 68
    relpathbase                    shift and go to state 94
    alg3                           shift and go to state 19
    varvar                         shift and go to state 20
    return                         shift and go to state 65
    str                            shift and go to state 78
    list                           shift and go to state 23
    unless                         shift and go to state 81
    exfiles                        shift and go to state 85
    subst                          shift and go to state 86
    int                            shift and go to state 32
    curfile                        shift and go to state 35
    declare                        shift and go to state 189
    expr                           shift and go to state 188
    evaluate                       shift and go to state 92
    exectext                       shift and go to state 41
    var                            shift and go to state 116
    modules                        shift and go to state 91
    listdir                        shift and go to state 44
    term                           shift and go to state 45
    repeat                         shift and go to state 99
    input                          shift and go to state 48
    variables                      shift and go to state 96
    print                          shift and go to state 49
    func                           shift and go to state 50
    dict                           shift and go to state 98
    mlist                          shift and go to state 100
    block                          shift and go to state 76
    python                         shift and go to state 53
    cycle                          shift and go to state 97
    yield                          shift and go to state 71
    abspath                        shift and go to state 58

state 169

    (22) append -> var APPEND expr .
    (46) equal -> expr . EQUALS expr
    (109) element -> expr . LBRACKET expr RBRACKET
    (101) less -> expr . LESS expr

  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
    DIVIDER         reduce using rule 22 (append -> var APPEND expr .)
    $end            reduce using rule 22 (append -> var APPEND expr .)
    RBRACE          reduce using rule 22 (append -> var APPEND expr .)
    COLON           reduce using rule 22 (append -> var APPEND expr .)
    RBRACKET        reduce using rule 22 (append -> var APPEND expr .)
    COMMA           reduce using rule 22 (append -> var APPEND expr .)
    RPAREN          reduce using rule 22 (append -> var APPEND expr .)
    ELSE            reduce using rule 22 (append -> var APPEND expr .)
    EQUALS          shift and go to state 111
    LBRACKET        shift and go to state 112
    LESS            shift and go to state 110

  ! EQUALS          [ reduce using rule 22 (append -> var APPEND expr .) ]
  ! LBRACKET        [ reduce using rule 22 (append -> var APPEND expr .) ]
  ! LESS            [ reduce using rule 22 (append -> var APPEND expr .) ]


state 170

    (48) isdir -> ISDIR LPAREN expr . RPAREN
    (46) equal -> expr . EQUALS expr
    (109) element -> expr . LBRACKET expr RBRACKET
    (101) less -> expr . LESS expr

    RPAREN          shift and go to state 190
    EQUALS          shift and go to state 111
    LBRACKET        shift and go to state 112
    LESS            shift and go to state 110


state 171

    (7) module -> MODULE WORD block .

    DIVIDER         reduce using rule 7 (module -> MODULE WORD block .)
    $end            reduce using rule 7 (module -> MODULE WORD block .)
    RBRACE          reduce using rule 7 (module -> MODULE WORD block .)
    COLON           reduce using rule 7 (module -> MODULE WORD block .)
    EQUALS          reduce using rule 7 (module -> MODULE WORD block .)
    LBRACKET        reduce using rule 7 (module -> MODULE WORD block .)
    LESS            reduce using rule 7 (module -> MODULE WORD block .)
    RBRACKET        reduce using rule 7 (module -> MODULE WORD block .)
    COMMA           reduce using rule 7 (module -> MODULE WORD block .)
    RPAREN          reduce using rule 7 (module -> MODULE WORD block .)
    ELSE            reduce using rule 7 (module -> MODULE WORD block .)


state 172

    (8) deffunc -> DEFFUNC WORD LPAREN . args RPAREN block
    (42) args -> .
    (43) args -> . comms
    (44) comms -> . expr
    (45) comms -> . comms COMMA expr
    (50) expr -> . expralg
    (51) expr -> . parttree
    (52) expr -> . alg0
    (53) expr -> . print
    (54) expr -> . varvar
    (55) expr -> . variables
    (56) expr -> . python
    (57) expr -> . execfile
    (58) expr -> . break
    (59) expr -> . unless
    (60) expr -> . curfile
    (61) expr -> . exectext
    (62) expr -> . equal
    (63) expr -> . element
    (64) expr -> . less
    (65) expr -> . length
    (66) expr -> . cycle
    (67) expr -> . mlist
    (68) expr -> . evaluate
    (69) expr -> . yield
    (70) expr -> . repeat
    (71) expr -> . pass
    (72) expr -> . dict
    (73) expr -> . return
    (74) expr -> . modules
    (75) expr -> . exfiles
    (76) expr -> . input
    (77) expralg -> . term
    (78) expralg -> . abspath
    (79) expralg -> . invrelpath
    (80) expralg -> . subst
    (81) expralg -> . relpath
    (82) expralg -> . relpathbase
    (83) expralg -> . func
    (84) expralg -> . listdir
    (85) expralg -> . isdir
    (86) expralg -> . block
    (87) expralg -> . list
    (41) parttree -> . AMPERSAND metaexpr
    (123) alg0 -> . alg1
    (124) alg0 -> . alg0 PLUSMINUS alg1
    (125) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (113) varvar -> . var
    (114) varvar -> . varvar POINT var
    (111) variables -> . VARIABLES expr
    (96) python -> . PYTHON str
    (97) execfile -> . EXECFILE expr
    (40) break -> . BREAK
    (17) unless -> . UNLESS LPAREN expr RPAREN expr
    (18) unless -> . UNLESS LPAREN expr RPAREN expr ELSE expr
    (115) curfile -> . CURFILE
    (103) exectext -> . EXECTEXT expr
    (46) equal -> . expr EQUALS expr
    (109) element -> . expr LBRACKET expr RBRACKET
    (101) less -> . expr LESS expr
    (102) length -> . LENGTH LPAREN expr RPAREN
    (89) cycle -> . CYCLE
    (112) mlist -> . MLIST COLON block
    (98) evaluate -> . EVALUATE expr
    (106) yield -> . YIELD
    (108) repeat -> . REPEAT
    (120) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (88) return -> . RETURN expr
    (21) modules -> . MODULES
    (117) exfiles -> . EXFILES
    (20) input -> . INPUT
    (90) term -> . str
    (91) term -> . float
    (92) term -> . int
    (93) term -> . var
    (94) term -> . undervar
    (122) abspath -> . ABSPATH
    (121) invrelpath -> . INVRELPATH
    (99) subst -> . SUBST LPAREN expr RPAREN
    (116) relpath -> . RELPATH
    (118) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN block
    (24) func -> . WORD LPAREN args RPAREN
    (49) listdir -> . LISTDIR LPAREN expr RPAREN
    (48) isdir -> . ISDIR LPAREN expr RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (126) alg1 -> . alg2
    (127) alg1 -> . alg1 DIVMUL alg2
    (110) var -> . WORD
    (107) str -> . STRING
    (105) float -> . FLOAT
    (95) int -> . NUMBER
    (38) undervar -> . AT undervar
    (39) undervar -> . AT var
    (128) alg2 -> . alg3
    (129) alg2 -> . alg2 DPROD alg3
    (130) alg3 -> . expralg

    RPAREN          reduce using rule 42 (args -> .)
    AMPERSAND       shift and go to state 12
    PLUSMINUS       shift and go to state 69
    PRINT           shift and go to state 47
    VARIABLES       shift and go to state 55
    PYTHON          shift and go to state 57
    EXECFILE        shift and go to state 73
    BREAK           shift and go to state 82
    UNLESS          shift and go to state 74
    CURFILE         shift and go to state 88
    EXECTEXT        shift and go to state 39
    LENGTH          shift and go to state 7
    CYCLE           shift and go to state 43
    MLIST           shift and go to state 90
    EVALUATE        shift and go to state 26
    YIELD           shift and go to state 4
    REPEAT          shift and go to state 103
    PASS            shift and go to state 34
    LBRACE          shift and go to state 31
    RETURN          shift and go to state 54
    MODULES         shift and go to state 63
    EXFILES         shift and go to state 14
    INPUT           shift and go to state 95
    ABSPATH         shift and go to state 33
    INVRELPATH      shift and go to state 36
    SUBST           shift and go to state 102
    RELPATH         shift and go to state 25
    RELPATHBASE     shift and go to state 5
    WORD            shift and go to state 117
    LISTDIR         shift and go to state 30
    ISDIR           shift and go to state 51
    LBRACKET        shift and go to state 83
    STRING          shift and go to state 70
    FLOAT           shift and go to state 3
    NUMBER          shift and go to state 28
    AT              shift and go to state 56

    isdir                          shift and go to state 1
    undervar                       shift and go to state 62
    alg1                           shift and go to state 6
    expralg                        shift and go to state 64
    alg0                           shift and go to state 89
    length                         shift and go to state 66
    float                          shift and go to state 8
    execfile                       shift and go to state 68
    less                           shift and go to state 9
    parttree                       shift and go to state 10
    element                        shift and go to state 13
    comms                          shift and go to state 176
    relpath                        shift and go to state 15
    invrelpath                     shift and go to state 16
    break                          shift and go to state 17
    alg2                           shift and go to state 2
    alg3                           shift and go to state 19
    varvar                         shift and go to state 20
    return                         shift and go to state 65
    str                            shift and go to state 78
    list                           shift and go to state 23
    unless                         shift and go to state 81
    exfiles                        shift and go to state 85
    subst                          shift and go to state 86
    equal                          shift and go to state 84
    curfile                        shift and go to state 35
    pass                           shift and go to state 37
    expr                           shift and go to state 148
    evaluate                       shift and go to state 92
    exectext                       shift and go to state 41
    var                            shift and go to state 116
    modules                        shift and go to state 91
    listdir                        shift and go to state 44
    args                           shift and go to state 191
    repeat                         shift and go to state 99
    input                          shift and go to state 48
    term                           shift and go to state 45
    variables                      shift and go to state 96
    print                          shift and go to state 49
    func                           shift and go to state 50
    dict                           shift and go to state 98
    mlist                          shift and go to state 100
    block                          shift and go to state 76
    python                         shift and go to state 53
    cycle                          shift and go to state 97
    int                            shift and go to state 32
    relpathbase                    shift and go to state 94
    yield                          shift and go to state 71
    abspath                        shift and go to state 58

state 173

    (9) define -> DEFINE WORD expr .
    (46) equal -> expr . EQUALS expr
    (109) element -> expr . LBRACKET expr RBRACKET
    (101) less -> expr . LESS expr

  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
    DIVIDER         reduce using rule 9 (define -> DEFINE WORD expr .)
    $end            reduce using rule 9 (define -> DEFINE WORD expr .)
    RBRACE          reduce using rule 9 (define -> DEFINE WORD expr .)
    COLON           reduce using rule 9 (define -> DEFINE WORD expr .)
    RBRACKET        reduce using rule 9 (define -> DEFINE WORD expr .)
    COMMA           reduce using rule 9 (define -> DEFINE WORD expr .)
    RPAREN          reduce using rule 9 (define -> DEFINE WORD expr .)
    ELSE            reduce using rule 9 (define -> DEFINE WORD expr .)
    EQUALS          shift and go to state 111
    LBRACKET        shift and go to state 112
    LESS            shift and go to state 110

  ! EQUALS          [ reduce using rule 9 (define -> DEFINE WORD expr .) ]
  ! LBRACKET        [ reduce using rule 9 (define -> DEFINE WORD expr .) ]
  ! LESS            [ reduce using rule 9 (define -> DEFINE WORD expr .) ]


state 174

    (17) unless -> UNLESS LPAREN expr . RPAREN expr
    (18) unless -> UNLESS LPAREN expr . RPAREN expr ELSE expr
    (46) equal -> expr . EQUALS expr
    (109) element -> expr . LBRACKET expr RBRACKET
    (101) less -> expr . LESS expr

    RPAREN          shift and go to state 192
    EQUALS          shift and go to state 111
    LBRACKET        shift and go to state 112
    LESS            shift and go to state 110


state 175

    (47) application -> APPLICATION WORD block .

    RBRACE          reduce using rule 47 (application -> APPLICATION WORD block .)
    DIVIDER         reduce using rule 47 (application -> APPLICATION WORD block .)
    $end            reduce using rule 47 (application -> APPLICATION WORD block .)
    COLON           reduce using rule 47 (application -> APPLICATION WORD block .)
    EQUALS          reduce using rule 47 (application -> APPLICATION WORD block .)
    LBRACKET        reduce using rule 47 (application -> APPLICATION WORD block .)
    LESS            reduce using rule 47 (application -> APPLICATION WORD block .)
    RBRACKET        reduce using rule 47 (application -> APPLICATION WORD block .)
    COMMA           reduce using rule 47 (application -> APPLICATION WORD block .)
    RPAREN          reduce using rule 47 (application -> APPLICATION WORD block .)
    ELSE            reduce using rule 47 (application -> APPLICATION WORD block .)


state 176

    (43) args -> comms .
    (45) comms -> comms . COMMA expr

    RPAREN          reduce using rule 43 (args -> comms .)
    COMMA           shift and go to state 180


state 177

    (23) func -> WORD LPAREN args . RPAREN block
    (24) func -> WORD LPAREN args . RPAREN

    RPAREN          shift and go to state 193


state 178

    (10) define -> WORD DEFOP expr .
    (46) equal -> expr . EQUALS expr
    (109) element -> expr . LBRACKET expr RBRACKET
    (101) less -> expr . LESS expr

  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
    DIVIDER         reduce using rule 10 (define -> WORD DEFOP expr .)
    $end            reduce using rule 10 (define -> WORD DEFOP expr .)
    RBRACE          reduce using rule 10 (define -> WORD DEFOP expr .)
    COLON           reduce using rule 10 (define -> WORD DEFOP expr .)
    RBRACKET        reduce using rule 10 (define -> WORD DEFOP expr .)
    COMMA           reduce using rule 10 (define -> WORD DEFOP expr .)
    RPAREN          reduce using rule 10 (define -> WORD DEFOP expr .)
    ELSE            reduce using rule 10 (define -> WORD DEFOP expr .)
    EQUALS          shift and go to state 111
    LBRACKET        shift and go to state 112
    LESS            shift and go to state 110

  ! EQUALS          [ reduce using rule 10 (define -> WORD DEFOP expr .) ]
  ! LBRACKET        [ reduce using rule 10 (define -> WORD DEFOP expr .) ]
  ! LESS            [ reduce using rule 10 (define -> WORD DEFOP expr .) ]


state 179

    (36) list -> LBRACKET comms RBRACKET .

    COLON           reduce using rule 36 (list -> LBRACKET comms RBRACKET .)
    EQUALS          reduce using rule 36 (list -> LBRACKET comms RBRACKET .)
    LBRACKET        reduce using rule 36 (list -> LBRACKET comms RBRACKET .)
    LESS            reduce using rule 36 (list -> LBRACKET comms RBRACKET .)
    DIVIDER         reduce using rule 36 (list -> LBRACKET comms RBRACKET .)
    $end            reduce using rule 36 (list -> LBRACKET comms RBRACKET .)
    RBRACE          reduce using rule 36 (list -> LBRACKET comms RBRACKET .)
    RBRACKET        reduce using rule 36 (list -> LBRACKET comms RBRACKET .)
    COMMA           reduce using rule 36 (list -> LBRACKET comms RBRACKET .)
    RPAREN          reduce using rule 36 (list -> LBRACKET comms RBRACKET .)
    ELSE            reduce using rule 36 (list -> LBRACKET comms RBRACKET .)
    DPROD           reduce using rule 36 (list -> LBRACKET comms RBRACKET .)
    DIVMUL          reduce using rule 36 (list -> LBRACKET comms RBRACKET .)
    PLUSMINUS       reduce using rule 36 (list -> LBRACKET comms RBRACKET .)


state 180

    (45) comms -> comms COMMA . expr
    (50) expr -> . expralg
    (51) expr -> . parttree
    (52) expr -> . alg0
    (53) expr -> . print
    (54) expr -> . varvar
    (55) expr -> . variables
    (56) expr -> . python
    (57) expr -> . execfile
    (58) expr -> . break
    (59) expr -> . unless
    (60) expr -> . curfile
    (61) expr -> . exectext
    (62) expr -> . equal
    (63) expr -> . element
    (64) expr -> . less
    (65) expr -> . length
    (66) expr -> . cycle
    (67) expr -> . mlist
    (68) expr -> . evaluate
    (69) expr -> . yield
    (70) expr -> . repeat
    (71) expr -> . pass
    (72) expr -> . dict
    (73) expr -> . return
    (74) expr -> . modules
    (75) expr -> . exfiles
    (76) expr -> . input
    (77) expralg -> . term
    (78) expralg -> . abspath
    (79) expralg -> . invrelpath
    (80) expralg -> . subst
    (81) expralg -> . relpath
    (82) expralg -> . relpathbase
    (83) expralg -> . func
    (84) expralg -> . listdir
    (85) expralg -> . isdir
    (86) expralg -> . block
    (87) expralg -> . list
    (41) parttree -> . AMPERSAND metaexpr
    (123) alg0 -> . alg1
    (124) alg0 -> . alg0 PLUSMINUS alg1
    (125) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (113) varvar -> . var
    (114) varvar -> . varvar POINT var
    (111) variables -> . VARIABLES expr
    (96) python -> . PYTHON str
    (97) execfile -> . EXECFILE expr
    (40) break -> . BREAK
    (17) unless -> . UNLESS LPAREN expr RPAREN expr
    (18) unless -> . UNLESS LPAREN expr RPAREN expr ELSE expr
    (115) curfile -> . CURFILE
    (103) exectext -> . EXECTEXT expr
    (46) equal -> . expr EQUALS expr
    (109) element -> . expr LBRACKET expr RBRACKET
    (101) less -> . expr LESS expr
    (102) length -> . LENGTH LPAREN expr RPAREN
    (89) cycle -> . CYCLE
    (112) mlist -> . MLIST COLON block
    (98) evaluate -> . EVALUATE expr
    (106) yield -> . YIELD
    (108) repeat -> . REPEAT
    (120) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (88) return -> . RETURN expr
    (21) modules -> . MODULES
    (117) exfiles -> . EXFILES
    (20) input -> . INPUT
    (90) term -> . str
    (91) term -> . float
    (92) term -> . int
    (93) term -> . var
    (94) term -> . undervar
    (122) abspath -> . ABSPATH
    (121) invrelpath -> . INVRELPATH
    (99) subst -> . SUBST LPAREN expr RPAREN
    (116) relpath -> . RELPATH
    (118) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN block
    (24) func -> . WORD LPAREN args RPAREN
    (49) listdir -> . LISTDIR LPAREN expr RPAREN
    (48) isdir -> . ISDIR LPAREN expr RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (126) alg1 -> . alg2
    (127) alg1 -> . alg1 DIVMUL alg2
    (110) var -> . WORD
    (107) str -> . STRING
    (105) float -> . FLOAT
    (95) int -> . NUMBER
    (38) undervar -> . AT undervar
    (39) undervar -> . AT var
    (128) alg2 -> . alg3
    (129) alg2 -> . alg2 DPROD alg3
    (130) alg3 -> . expralg

    AMPERSAND       shift and go to state 12
    PLUSMINUS       shift and go to state 69
    PRINT           shift and go to state 47
    VARIABLES       shift and go to state 55
    PYTHON          shift and go to state 57
    EXECFILE        shift and go to state 73
    BREAK           shift and go to state 82
    UNLESS          shift and go to state 74
    CURFILE         shift and go to state 88
    EXECTEXT        shift and go to state 39
    LENGTH          shift and go to state 7
    CYCLE           shift and go to state 43
    MLIST           shift and go to state 90
    EVALUATE        shift and go to state 26
    YIELD           shift and go to state 4
    REPEAT          shift and go to state 103
    PASS            shift and go to state 34
    LBRACE          shift and go to state 31
    RETURN          shift and go to state 54
    MODULES         shift and go to state 63
    EXFILES         shift and go to state 14
    INPUT           shift and go to state 95
    ABSPATH         shift and go to state 33
    INVRELPATH      shift and go to state 36
    SUBST           shift and go to state 102
    RELPATH         shift and go to state 25
    RELPATHBASE     shift and go to state 5
    WORD            shift and go to state 117
    LISTDIR         shift and go to state 30
    ISDIR           shift and go to state 51
    LBRACKET        shift and go to state 83
    STRING          shift and go to state 70
    FLOAT           shift and go to state 3
    NUMBER          shift and go to state 28
    AT              shift and go to state 56

    isdir                          shift and go to state 1
    undervar                       shift and go to state 62
    alg1                           shift and go to state 6
    expralg                        shift and go to state 64
    alg0                           shift and go to state 89
    length                         shift and go to state 66
    float                          shift and go to state 8
    equal                          shift and go to state 84
    less                           shift and go to state 9
    parttree                       shift and go to state 10
    element                        shift and go to state 13
    relpath                        shift and go to state 15
    invrelpath                     shift and go to state 16
    break                          shift and go to state 17
    alg2                           shift and go to state 2
    execfile                       shift and go to state 68
    alg3                           shift and go to state 19
    varvar                         shift and go to state 20
    return                         shift and go to state 65
    str                            shift and go to state 78
    list                           shift and go to state 23
    unless                         shift and go to state 81
    exfiles                        shift and go to state 85
    evaluate                       shift and go to state 92
    int                            shift and go to state 32
    curfile                        shift and go to state 35
    pass                           shift and go to state 37
    expr                           shift and go to state 194
    subst                          shift and go to state 86
    exectext                       shift and go to state 41
    var                            shift and go to state 116
    modules                        shift and go to state 91
    listdir                        shift and go to state 44
    term                           shift and go to state 45
    relpathbase                    shift and go to state 94
    input                          shift and go to state 48
    variables                      shift and go to state 96
    print                          shift and go to state 49
    func                           shift and go to state 50
    dict                           shift and go to state 98
    mlist                          shift and go to state 100
    block                          shift and go to state 76
    python                         shift and go to state 53
    cycle                          shift and go to state 97
    repeat                         shift and go to state 99
    yield                          shift and go to state 71
    abspath                        shift and go to state 58

state 181

    (124) alg0 -> alg0 PLUSMINUS alg1 .
    (127) alg1 -> alg1 . DIVMUL alg2

    PLUSMINUS       reduce using rule 124 (alg0 -> alg0 PLUSMINUS alg1 .)
    RPAREN          reduce using rule 124 (alg0 -> alg0 PLUSMINUS alg1 .)
    EQUALS          reduce using rule 124 (alg0 -> alg0 PLUSMINUS alg1 .)
    LBRACKET        reduce using rule 124 (alg0 -> alg0 PLUSMINUS alg1 .)
    LESS            reduce using rule 124 (alg0 -> alg0 PLUSMINUS alg1 .)
    COLON           reduce using rule 124 (alg0 -> alg0 PLUSMINUS alg1 .)
    DIVIDER         reduce using rule 124 (alg0 -> alg0 PLUSMINUS alg1 .)
    $end            reduce using rule 124 (alg0 -> alg0 PLUSMINUS alg1 .)
    RBRACE          reduce using rule 124 (alg0 -> alg0 PLUSMINUS alg1 .)
    RBRACKET        reduce using rule 124 (alg0 -> alg0 PLUSMINUS alg1 .)
    COMMA           reduce using rule 124 (alg0 -> alg0 PLUSMINUS alg1 .)
    ELSE            reduce using rule 124 (alg0 -> alg0 PLUSMINUS alg1 .)
    DIVMUL          shift and go to state 106


state 182

    (112) mlist -> MLIST COLON block .

    RPAREN          reduce using rule 112 (mlist -> MLIST COLON block .)
    EQUALS          reduce using rule 112 (mlist -> MLIST COLON block .)
    LBRACKET        reduce using rule 112 (mlist -> MLIST COLON block .)
    LESS            reduce using rule 112 (mlist -> MLIST COLON block .)
    RBRACKET        reduce using rule 112 (mlist -> MLIST COLON block .)
    COLON           reduce using rule 112 (mlist -> MLIST COLON block .)
    DIVIDER         reduce using rule 112 (mlist -> MLIST COLON block .)
    $end            reduce using rule 112 (mlist -> MLIST COLON block .)
    RBRACE          reduce using rule 112 (mlist -> MLIST COLON block .)
    COMMA           reduce using rule 112 (mlist -> MLIST COLON block .)
    ELSE            reduce using rule 112 (mlist -> MLIST COLON block .)


state 183

    (16) if -> IF LPAREN expr . RPAREN expr
    (46) equal -> expr . EQUALS expr
    (109) element -> expr . LBRACKET expr RBRACKET
    (101) less -> expr . LESS expr

    RPAREN          shift and go to state 195
    EQUALS          shift and go to state 111
    LBRACKET        shift and go to state 112
    LESS            shift and go to state 110


state 184

    (99) subst -> SUBST LPAREN expr . RPAREN
    (46) equal -> expr . EQUALS expr
    (109) element -> expr . LBRACKET expr RBRACKET
    (101) less -> expr . LESS expr

    RPAREN          shift and go to state 196
    EQUALS          shift and go to state 111
    LBRACKET        shift and go to state 112
    LESS            shift and go to state 110


state 185

    (102) length -> LENGTH LPAREN expr RPAREN .

    COLON           reduce using rule 102 (length -> LENGTH LPAREN expr RPAREN .)
    EQUALS          reduce using rule 102 (length -> LENGTH LPAREN expr RPAREN .)
    LBRACKET        reduce using rule 102 (length -> LENGTH LPAREN expr RPAREN .)
    LESS            reduce using rule 102 (length -> LENGTH LPAREN expr RPAREN .)
    DIVIDER         reduce using rule 102 (length -> LENGTH LPAREN expr RPAREN .)
    $end            reduce using rule 102 (length -> LENGTH LPAREN expr RPAREN .)
    RBRACE          reduce using rule 102 (length -> LENGTH LPAREN expr RPAREN .)
    RBRACKET        reduce using rule 102 (length -> LENGTH LPAREN expr RPAREN .)
    COMMA           reduce using rule 102 (length -> LENGTH LPAREN expr RPAREN .)
    RPAREN          reduce using rule 102 (length -> LENGTH LPAREN expr RPAREN .)
    ELSE            reduce using rule 102 (length -> LENGTH LPAREN expr RPAREN .)


state 186

    (109) element -> expr LBRACKET expr RBRACKET .

    EQUALS          reduce using rule 109 (element -> expr LBRACKET expr RBRACKET .)
    LBRACKET        reduce using rule 109 (element -> expr LBRACKET expr RBRACKET .)
    LESS            reduce using rule 109 (element -> expr LBRACKET expr RBRACKET .)
    RBRACKET        reduce using rule 109 (element -> expr LBRACKET expr RBRACKET .)
    COMMA           reduce using rule 109 (element -> expr LBRACKET expr RBRACKET .)
    RPAREN          reduce using rule 109 (element -> expr LBRACKET expr RBRACKET .)
    COLON           reduce using rule 109 (element -> expr LBRACKET expr RBRACKET .)
    DIVIDER         reduce using rule 109 (element -> expr LBRACKET expr RBRACKET .)
    $end            reduce using rule 109 (element -> expr LBRACKET expr RBRACKET .)
    RBRACE          reduce using rule 109 (element -> expr LBRACKET expr RBRACKET .)
    ELSE            reduce using rule 109 (element -> expr LBRACKET expr RBRACKET .)


state 187

    (49) listdir -> LISTDIR LPAREN expr RPAREN .

    COLON           reduce using rule 49 (listdir -> LISTDIR LPAREN expr RPAREN .)
    EQUALS          reduce using rule 49 (listdir -> LISTDIR LPAREN expr RPAREN .)
    LBRACKET        reduce using rule 49 (listdir -> LISTDIR LPAREN expr RPAREN .)
    LESS            reduce using rule 49 (listdir -> LISTDIR LPAREN expr RPAREN .)
    DIVIDER         reduce using rule 49 (listdir -> LISTDIR LPAREN expr RPAREN .)
    $end            reduce using rule 49 (listdir -> LISTDIR LPAREN expr RPAREN .)
    RBRACE          reduce using rule 49 (listdir -> LISTDIR LPAREN expr RPAREN .)
    RBRACKET        reduce using rule 49 (listdir -> LISTDIR LPAREN expr RPAREN .)
    COMMA           reduce using rule 49 (listdir -> LISTDIR LPAREN expr RPAREN .)
    RPAREN          reduce using rule 49 (listdir -> LISTDIR LPAREN expr RPAREN .)
    ELSE            reduce using rule 49 (listdir -> LISTDIR LPAREN expr RPAREN .)
    DPROD           reduce using rule 49 (listdir -> LISTDIR LPAREN expr RPAREN .)
    DIVMUL          reduce using rule 49 (listdir -> LISTDIR LPAREN expr RPAREN .)
    PLUSMINUS       reduce using rule 49 (listdir -> LISTDIR LPAREN expr RPAREN .)


state 188

    (15) declare -> expr . COLON expr
    (46) equal -> expr . EQUALS expr
    (109) element -> expr . LBRACKET expr RBRACKET
    (101) less -> expr . LESS expr

    COLON           shift and go to state 113
    EQUALS          shift and go to state 111
    LBRACKET        shift and go to state 112
    LESS            shift and go to state 110


state 189

    (14) declares -> declares COMMA declare .

    RBRACE          reduce using rule 14 (declares -> declares COMMA declare .)
    COMMA           reduce using rule 14 (declares -> declares COMMA declare .)


state 190

    (48) isdir -> ISDIR LPAREN expr RPAREN .

    COLON           reduce using rule 48 (isdir -> ISDIR LPAREN expr RPAREN .)
    EQUALS          reduce using rule 48 (isdir -> ISDIR LPAREN expr RPAREN .)
    LBRACKET        reduce using rule 48 (isdir -> ISDIR LPAREN expr RPAREN .)
    LESS            reduce using rule 48 (isdir -> ISDIR LPAREN expr RPAREN .)
    DIVIDER         reduce using rule 48 (isdir -> ISDIR LPAREN expr RPAREN .)
    $end            reduce using rule 48 (isdir -> ISDIR LPAREN expr RPAREN .)
    RBRACE          reduce using rule 48 (isdir -> ISDIR LPAREN expr RPAREN .)
    RBRACKET        reduce using rule 48 (isdir -> ISDIR LPAREN expr RPAREN .)
    COMMA           reduce using rule 48 (isdir -> ISDIR LPAREN expr RPAREN .)
    RPAREN          reduce using rule 48 (isdir -> ISDIR LPAREN expr RPAREN .)
    ELSE            reduce using rule 48 (isdir -> ISDIR LPAREN expr RPAREN .)
    DPROD           reduce using rule 48 (isdir -> ISDIR LPAREN expr RPAREN .)
    DIVMUL          reduce using rule 48 (isdir -> ISDIR LPAREN expr RPAREN .)
    PLUSMINUS       reduce using rule 48 (isdir -> ISDIR LPAREN expr RPAREN .)


state 191

    (8) deffunc -> DEFFUNC WORD LPAREN args . RPAREN block

    RPAREN          shift and go to state 197


state 192

    (17) unless -> UNLESS LPAREN expr RPAREN . expr
    (18) unless -> UNLESS LPAREN expr RPAREN . expr ELSE expr
    (50) expr -> . expralg
    (51) expr -> . parttree
    (52) expr -> . alg0
    (53) expr -> . print
    (54) expr -> . varvar
    (55) expr -> . variables
    (56) expr -> . python
    (57) expr -> . execfile
    (58) expr -> . break
    (59) expr -> . unless
    (60) expr -> . curfile
    (61) expr -> . exectext
    (62) expr -> . equal
    (63) expr -> . element
    (64) expr -> . less
    (65) expr -> . length
    (66) expr -> . cycle
    (67) expr -> . mlist
    (68) expr -> . evaluate
    (69) expr -> . yield
    (70) expr -> . repeat
    (71) expr -> . pass
    (72) expr -> . dict
    (73) expr -> . return
    (74) expr -> . modules
    (75) expr -> . exfiles
    (76) expr -> . input
    (77) expralg -> . term
    (78) expralg -> . abspath
    (79) expralg -> . invrelpath
    (80) expralg -> . subst
    (81) expralg -> . relpath
    (82) expralg -> . relpathbase
    (83) expralg -> . func
    (84) expralg -> . listdir
    (85) expralg -> . isdir
    (86) expralg -> . block
    (87) expralg -> . list
    (41) parttree -> . AMPERSAND metaexpr
    (123) alg0 -> . alg1
    (124) alg0 -> . alg0 PLUSMINUS alg1
    (125) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (113) varvar -> . var
    (114) varvar -> . varvar POINT var
    (111) variables -> . VARIABLES expr
    (96) python -> . PYTHON str
    (97) execfile -> . EXECFILE expr
    (40) break -> . BREAK
    (17) unless -> . UNLESS LPAREN expr RPAREN expr
    (18) unless -> . UNLESS LPAREN expr RPAREN expr ELSE expr
    (115) curfile -> . CURFILE
    (103) exectext -> . EXECTEXT expr
    (46) equal -> . expr EQUALS expr
    (109) element -> . expr LBRACKET expr RBRACKET
    (101) less -> . expr LESS expr
    (102) length -> . LENGTH LPAREN expr RPAREN
    (89) cycle -> . CYCLE
    (112) mlist -> . MLIST COLON block
    (98) evaluate -> . EVALUATE expr
    (106) yield -> . YIELD
    (108) repeat -> . REPEAT
    (120) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (88) return -> . RETURN expr
    (21) modules -> . MODULES
    (117) exfiles -> . EXFILES
    (20) input -> . INPUT
    (90) term -> . str
    (91) term -> . float
    (92) term -> . int
    (93) term -> . var
    (94) term -> . undervar
    (122) abspath -> . ABSPATH
    (121) invrelpath -> . INVRELPATH
    (99) subst -> . SUBST LPAREN expr RPAREN
    (116) relpath -> . RELPATH
    (118) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN block
    (24) func -> . WORD LPAREN args RPAREN
    (49) listdir -> . LISTDIR LPAREN expr RPAREN
    (48) isdir -> . ISDIR LPAREN expr RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (126) alg1 -> . alg2
    (127) alg1 -> . alg1 DIVMUL alg2
    (110) var -> . WORD
    (107) str -> . STRING
    (105) float -> . FLOAT
    (95) int -> . NUMBER
    (38) undervar -> . AT undervar
    (39) undervar -> . AT var
    (128) alg2 -> . alg3
    (129) alg2 -> . alg2 DPROD alg3
    (130) alg3 -> . expralg

    AMPERSAND       shift and go to state 12
    PLUSMINUS       shift and go to state 69
    PRINT           shift and go to state 47
    VARIABLES       shift and go to state 55
    PYTHON          shift and go to state 57
    EXECFILE        shift and go to state 73
    BREAK           shift and go to state 82
    UNLESS          shift and go to state 74
    CURFILE         shift and go to state 88
    EXECTEXT        shift and go to state 39
    LENGTH          shift and go to state 7
    CYCLE           shift and go to state 43
    MLIST           shift and go to state 90
    EVALUATE        shift and go to state 26
    YIELD           shift and go to state 4
    REPEAT          shift and go to state 103
    PASS            shift and go to state 34
    LBRACE          shift and go to state 31
    RETURN          shift and go to state 54
    MODULES         shift and go to state 63
    EXFILES         shift and go to state 14
    INPUT           shift and go to state 95
    ABSPATH         shift and go to state 33
    INVRELPATH      shift and go to state 36
    SUBST           shift and go to state 102
    RELPATH         shift and go to state 25
    RELPATHBASE     shift and go to state 5
    WORD            shift and go to state 117
    LISTDIR         shift and go to state 30
    ISDIR           shift and go to state 51
    LBRACKET        shift and go to state 83
    STRING          shift and go to state 70
    FLOAT           shift and go to state 3
    NUMBER          shift and go to state 28
    AT              shift and go to state 56

    isdir                          shift and go to state 1
    undervar                       shift and go to state 62
    alg1                           shift and go to state 6
    expralg                        shift and go to state 64
    alg0                           shift and go to state 89
    length                         shift and go to state 66
    float                          shift and go to state 8
    equal                          shift and go to state 84
    less                           shift and go to state 9
    parttree                       shift and go to state 10
    element                        shift and go to state 13
    relpath                        shift and go to state 15
    invrelpath                     shift and go to state 16
    break                          shift and go to state 17
    alg2                           shift and go to state 2
    execfile                       shift and go to state 68
    alg3                           shift and go to state 19
    varvar                         shift and go to state 20
    return                         shift and go to state 65
    str                            shift and go to state 78
    list                           shift and go to state 23
    unless                         shift and go to state 81
    exfiles                        shift and go to state 85
    evaluate                       shift and go to state 92
    int                            shift and go to state 32
    curfile                        shift and go to state 35
    pass                           shift and go to state 37
    expr                           shift and go to state 198
    subst                          shift and go to state 86
    exectext                       shift and go to state 41
    var                            shift and go to state 116
    modules                        shift and go to state 91
    listdir                        shift and go to state 44
    term                           shift and go to state 45
    relpathbase                    shift and go to state 94
    input                          shift and go to state 48
    variables                      shift and go to state 96
    print                          shift and go to state 49
    func                           shift and go to state 50
    dict                           shift and go to state 98
    mlist                          shift and go to state 100
    block                          shift and go to state 76
    python                         shift and go to state 53
    cycle                          shift and go to state 97
    repeat                         shift and go to state 99
    yield                          shift and go to state 71
    abspath                        shift and go to state 58

state 193

    (23) func -> WORD LPAREN args RPAREN . block
    (24) func -> WORD LPAREN args RPAREN .
    (1) block -> . LBRACE inblock RBRACE

    RPAREN          reduce using rule 24 (func -> WORD LPAREN args RPAREN .)
    EQUALS          reduce using rule 24 (func -> WORD LPAREN args RPAREN .)
    LBRACKET        reduce using rule 24 (func -> WORD LPAREN args RPAREN .)
    LESS            reduce using rule 24 (func -> WORD LPAREN args RPAREN .)
    DPROD           reduce using rule 24 (func -> WORD LPAREN args RPAREN .)
    DIVMUL          reduce using rule 24 (func -> WORD LPAREN args RPAREN .)
    PLUSMINUS       reduce using rule 24 (func -> WORD LPAREN args RPAREN .)
    COLON           reduce using rule 24 (func -> WORD LPAREN args RPAREN .)
    RBRACE          reduce using rule 24 (func -> WORD LPAREN args RPAREN .)
    DIVIDER         reduce using rule 24 (func -> WORD LPAREN args RPAREN .)
    $end            reduce using rule 24 (func -> WORD LPAREN args RPAREN .)
    RBRACKET        reduce using rule 24 (func -> WORD LPAREN args RPAREN .)
    COMMA           reduce using rule 24 (func -> WORD LPAREN args RPAREN .)
    ELSE            reduce using rule 24 (func -> WORD LPAREN args RPAREN .)
    LBRACE          shift and go to state 141

    block                          shift and go to state 199

state 194

    (45) comms -> comms COMMA expr .
    (46) equal -> expr . EQUALS expr
    (109) element -> expr . LBRACKET expr RBRACKET
    (101) less -> expr . LESS expr

    COMMA           reduce using rule 45 (comms -> comms COMMA expr .)
    RPAREN          reduce using rule 45 (comms -> comms COMMA expr .)
    RBRACKET        reduce using rule 45 (comms -> comms COMMA expr .)
    EQUALS          shift and go to state 111
    LBRACKET        shift and go to state 112
    LESS            shift and go to state 110


state 195

    (16) if -> IF LPAREN expr RPAREN . expr
    (50) expr -> . expralg
    (51) expr -> . parttree
    (52) expr -> . alg0
    (53) expr -> . print
    (54) expr -> . varvar
    (55) expr -> . variables
    (56) expr -> . python
    (57) expr -> . execfile
    (58) expr -> . break
    (59) expr -> . unless
    (60) expr -> . curfile
    (61) expr -> . exectext
    (62) expr -> . equal
    (63) expr -> . element
    (64) expr -> . less
    (65) expr -> . length
    (66) expr -> . cycle
    (67) expr -> . mlist
    (68) expr -> . evaluate
    (69) expr -> . yield
    (70) expr -> . repeat
    (71) expr -> . pass
    (72) expr -> . dict
    (73) expr -> . return
    (74) expr -> . modules
    (75) expr -> . exfiles
    (76) expr -> . input
    (77) expralg -> . term
    (78) expralg -> . abspath
    (79) expralg -> . invrelpath
    (80) expralg -> . subst
    (81) expralg -> . relpath
    (82) expralg -> . relpathbase
    (83) expralg -> . func
    (84) expralg -> . listdir
    (85) expralg -> . isdir
    (86) expralg -> . block
    (87) expralg -> . list
    (41) parttree -> . AMPERSAND metaexpr
    (123) alg0 -> . alg1
    (124) alg0 -> . alg0 PLUSMINUS alg1
    (125) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (113) varvar -> . var
    (114) varvar -> . varvar POINT var
    (111) variables -> . VARIABLES expr
    (96) python -> . PYTHON str
    (97) execfile -> . EXECFILE expr
    (40) break -> . BREAK
    (17) unless -> . UNLESS LPAREN expr RPAREN expr
    (18) unless -> . UNLESS LPAREN expr RPAREN expr ELSE expr
    (115) curfile -> . CURFILE
    (103) exectext -> . EXECTEXT expr
    (46) equal -> . expr EQUALS expr
    (109) element -> . expr LBRACKET expr RBRACKET
    (101) less -> . expr LESS expr
    (102) length -> . LENGTH LPAREN expr RPAREN
    (89) cycle -> . CYCLE
    (112) mlist -> . MLIST COLON block
    (98) evaluate -> . EVALUATE expr
    (106) yield -> . YIELD
    (108) repeat -> . REPEAT
    (120) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (88) return -> . RETURN expr
    (21) modules -> . MODULES
    (117) exfiles -> . EXFILES
    (20) input -> . INPUT
    (90) term -> . str
    (91) term -> . float
    (92) term -> . int
    (93) term -> . var
    (94) term -> . undervar
    (122) abspath -> . ABSPATH
    (121) invrelpath -> . INVRELPATH
    (99) subst -> . SUBST LPAREN expr RPAREN
    (116) relpath -> . RELPATH
    (118) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN block
    (24) func -> . WORD LPAREN args RPAREN
    (49) listdir -> . LISTDIR LPAREN expr RPAREN
    (48) isdir -> . ISDIR LPAREN expr RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (126) alg1 -> . alg2
    (127) alg1 -> . alg1 DIVMUL alg2
    (110) var -> . WORD
    (107) str -> . STRING
    (105) float -> . FLOAT
    (95) int -> . NUMBER
    (38) undervar -> . AT undervar
    (39) undervar -> . AT var
    (128) alg2 -> . alg3
    (129) alg2 -> . alg2 DPROD alg3
    (130) alg3 -> . expralg

    AMPERSAND       shift and go to state 12
    PLUSMINUS       shift and go to state 69
    PRINT           shift and go to state 47
    VARIABLES       shift and go to state 55
    PYTHON          shift and go to state 57
    EXECFILE        shift and go to state 73
    BREAK           shift and go to state 82
    UNLESS          shift and go to state 74
    CURFILE         shift and go to state 88
    EXECTEXT        shift and go to state 39
    LENGTH          shift and go to state 7
    CYCLE           shift and go to state 43
    MLIST           shift and go to state 90
    EVALUATE        shift and go to state 26
    YIELD           shift and go to state 4
    REPEAT          shift and go to state 103
    PASS            shift and go to state 34
    LBRACE          shift and go to state 31
    RETURN          shift and go to state 54
    MODULES         shift and go to state 63
    EXFILES         shift and go to state 14
    INPUT           shift and go to state 95
    ABSPATH         shift and go to state 33
    INVRELPATH      shift and go to state 36
    SUBST           shift and go to state 102
    RELPATH         shift and go to state 25
    RELPATHBASE     shift and go to state 5
    WORD            shift and go to state 117
    LISTDIR         shift and go to state 30
    ISDIR           shift and go to state 51
    LBRACKET        shift and go to state 83
    STRING          shift and go to state 70
    FLOAT           shift and go to state 3
    NUMBER          shift and go to state 28
    AT              shift and go to state 56

    isdir                          shift and go to state 1
    undervar                       shift and go to state 62
    alg1                           shift and go to state 6
    expralg                        shift and go to state 64
    alg0                           shift and go to state 89
    length                         shift and go to state 66
    float                          shift and go to state 8
    equal                          shift and go to state 84
    less                           shift and go to state 9
    parttree                       shift and go to state 10
    element                        shift and go to state 13
    relpath                        shift and go to state 15
    invrelpath                     shift and go to state 16
    break                          shift and go to state 17
    alg2                           shift and go to state 2
    execfile                       shift and go to state 68
    alg3                           shift and go to state 19
    varvar                         shift and go to state 20
    return                         shift and go to state 65
    str                            shift and go to state 78
    list                           shift and go to state 23
    unless                         shift and go to state 81
    exfiles                        shift and go to state 85
    evaluate                       shift and go to state 92
    int                            shift and go to state 32
    curfile                        shift and go to state 35
    pass                           shift and go to state 37
    expr                           shift and go to state 200
    subst                          shift and go to state 86
    exectext                       shift and go to state 41
    var                            shift and go to state 116
    modules                        shift and go to state 91
    listdir                        shift and go to state 44
    term                           shift and go to state 45
    relpathbase                    shift and go to state 94
    input                          shift and go to state 48
    variables                      shift and go to state 96
    print                          shift and go to state 49
    func                           shift and go to state 50
    dict                           shift and go to state 98
    mlist                          shift and go to state 100
    block                          shift and go to state 76
    python                         shift and go to state 53
    cycle                          shift and go to state 97
    repeat                         shift and go to state 99
    yield                          shift and go to state 71
    abspath                        shift and go to state 58

state 196

    (99) subst -> SUBST LPAREN expr RPAREN .

    RPAREN          reduce using rule 99 (subst -> SUBST LPAREN expr RPAREN .)
    EQUALS          reduce using rule 99 (subst -> SUBST LPAREN expr RPAREN .)
    LBRACKET        reduce using rule 99 (subst -> SUBST LPAREN expr RPAREN .)
    LESS            reduce using rule 99 (subst -> SUBST LPAREN expr RPAREN .)
    DPROD           reduce using rule 99 (subst -> SUBST LPAREN expr RPAREN .)
    DIVMUL          reduce using rule 99 (subst -> SUBST LPAREN expr RPAREN .)
    PLUSMINUS       reduce using rule 99 (subst -> SUBST LPAREN expr RPAREN .)
    RBRACKET        reduce using rule 99 (subst -> SUBST LPAREN expr RPAREN .)
    COMMA           reduce using rule 99 (subst -> SUBST LPAREN expr RPAREN .)
    COLON           reduce using rule 99 (subst -> SUBST LPAREN expr RPAREN .)
    DIVIDER         reduce using rule 99 (subst -> SUBST LPAREN expr RPAREN .)
    $end            reduce using rule 99 (subst -> SUBST LPAREN expr RPAREN .)
    RBRACE          reduce using rule 99 (subst -> SUBST LPAREN expr RPAREN .)
    ELSE            reduce using rule 99 (subst -> SUBST LPAREN expr RPAREN .)


state 197

    (8) deffunc -> DEFFUNC WORD LPAREN args RPAREN . block
    (1) block -> . LBRACE inblock RBRACE

    LBRACE          shift and go to state 141

    block                          shift and go to state 201

state 198

    (17) unless -> UNLESS LPAREN expr RPAREN expr .
    (18) unless -> UNLESS LPAREN expr RPAREN expr . ELSE expr
    (46) equal -> expr . EQUALS expr
    (109) element -> expr . LBRACKET expr RBRACKET
    (101) less -> expr . LESS expr

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
    COLON           reduce using rule 17 (unless -> UNLESS LPAREN expr RPAREN expr .)
    DIVIDER         reduce using rule 17 (unless -> UNLESS LPAREN expr RPAREN expr .)
    $end            reduce using rule 17 (unless -> UNLESS LPAREN expr RPAREN expr .)
    RBRACE          reduce using rule 17 (unless -> UNLESS LPAREN expr RPAREN expr .)
    RBRACKET        reduce using rule 17 (unless -> UNLESS LPAREN expr RPAREN expr .)
    COMMA           reduce using rule 17 (unless -> UNLESS LPAREN expr RPAREN expr .)
    RPAREN          reduce using rule 17 (unless -> UNLESS LPAREN expr RPAREN expr .)
    ELSE            shift and go to state 202
    EQUALS          shift and go to state 111
    LBRACKET        shift and go to state 112
    LESS            shift and go to state 110

  ! EQUALS          [ reduce using rule 17 (unless -> UNLESS LPAREN expr RPAREN expr .) ]
  ! LBRACKET        [ reduce using rule 17 (unless -> UNLESS LPAREN expr RPAREN expr .) ]
  ! LESS            [ reduce using rule 17 (unless -> UNLESS LPAREN expr RPAREN expr .) ]
  ! ELSE            [ reduce using rule 17 (unless -> UNLESS LPAREN expr RPAREN expr .) ]


state 199

    (23) func -> WORD LPAREN args RPAREN block .

    RPAREN          reduce using rule 23 (func -> WORD LPAREN args RPAREN block .)
    EQUALS          reduce using rule 23 (func -> WORD LPAREN args RPAREN block .)
    LBRACKET        reduce using rule 23 (func -> WORD LPAREN args RPAREN block .)
    LESS            reduce using rule 23 (func -> WORD LPAREN args RPAREN block .)
    DPROD           reduce using rule 23 (func -> WORD LPAREN args RPAREN block .)
    DIVMUL          reduce using rule 23 (func -> WORD LPAREN args RPAREN block .)
    PLUSMINUS       reduce using rule 23 (func -> WORD LPAREN args RPAREN block .)
    COLON           reduce using rule 23 (func -> WORD LPAREN args RPAREN block .)
    RBRACE          reduce using rule 23 (func -> WORD LPAREN args RPAREN block .)
    DIVIDER         reduce using rule 23 (func -> WORD LPAREN args RPAREN block .)
    $end            reduce using rule 23 (func -> WORD LPAREN args RPAREN block .)
    RBRACKET        reduce using rule 23 (func -> WORD LPAREN args RPAREN block .)
    COMMA           reduce using rule 23 (func -> WORD LPAREN args RPAREN block .)
    ELSE            reduce using rule 23 (func -> WORD LPAREN args RPAREN block .)


state 200

    (16) if -> IF LPAREN expr RPAREN expr .
    (46) equal -> expr . EQUALS expr
    (109) element -> expr . LBRACKET expr RBRACKET
    (101) less -> expr . LESS expr

  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
    RBRACE          reduce using rule 16 (if -> IF LPAREN expr RPAREN expr .)
    DIVIDER         reduce using rule 16 (if -> IF LPAREN expr RPAREN expr .)
    COLON           reduce using rule 16 (if -> IF LPAREN expr RPAREN expr .)
    $end            reduce using rule 16 (if -> IF LPAREN expr RPAREN expr .)
    RBRACKET        reduce using rule 16 (if -> IF LPAREN expr RPAREN expr .)
    COMMA           reduce using rule 16 (if -> IF LPAREN expr RPAREN expr .)
    RPAREN          reduce using rule 16 (if -> IF LPAREN expr RPAREN expr .)
    ELSE            reduce using rule 16 (if -> IF LPAREN expr RPAREN expr .)
    EQUALS          shift and go to state 111
    LBRACKET        shift and go to state 112
    LESS            shift and go to state 110

  ! EQUALS          [ reduce using rule 16 (if -> IF LPAREN expr RPAREN expr .) ]
  ! LBRACKET        [ reduce using rule 16 (if -> IF LPAREN expr RPAREN expr .) ]
  ! LESS            [ reduce using rule 16 (if -> IF LPAREN expr RPAREN expr .) ]


state 201

    (8) deffunc -> DEFFUNC WORD LPAREN args RPAREN block .

    DIVIDER         reduce using rule 8 (deffunc -> DEFFUNC WORD LPAREN args RPAREN block .)
    $end            reduce using rule 8 (deffunc -> DEFFUNC WORD LPAREN args RPAREN block .)
    RBRACE          reduce using rule 8 (deffunc -> DEFFUNC WORD LPAREN args RPAREN block .)
    COLON           reduce using rule 8 (deffunc -> DEFFUNC WORD LPAREN args RPAREN block .)
    EQUALS          reduce using rule 8 (deffunc -> DEFFUNC WORD LPAREN args RPAREN block .)
    LBRACKET        reduce using rule 8 (deffunc -> DEFFUNC WORD LPAREN args RPAREN block .)
    LESS            reduce using rule 8 (deffunc -> DEFFUNC WORD LPAREN args RPAREN block .)
    RBRACKET        reduce using rule 8 (deffunc -> DEFFUNC WORD LPAREN args RPAREN block .)
    COMMA           reduce using rule 8 (deffunc -> DEFFUNC WORD LPAREN args RPAREN block .)
    RPAREN          reduce using rule 8 (deffunc -> DEFFUNC WORD LPAREN args RPAREN block .)
    ELSE            reduce using rule 8 (deffunc -> DEFFUNC WORD LPAREN args RPAREN block .)


state 202

    (18) unless -> UNLESS LPAREN expr RPAREN expr ELSE . expr
    (50) expr -> . expralg
    (51) expr -> . parttree
    (52) expr -> . alg0
    (53) expr -> . print
    (54) expr -> . varvar
    (55) expr -> . variables
    (56) expr -> . python
    (57) expr -> . execfile
    (58) expr -> . break
    (59) expr -> . unless
    (60) expr -> . curfile
    (61) expr -> . exectext
    (62) expr -> . equal
    (63) expr -> . element
    (64) expr -> . less
    (65) expr -> . length
    (66) expr -> . cycle
    (67) expr -> . mlist
    (68) expr -> . evaluate
    (69) expr -> . yield
    (70) expr -> . repeat
    (71) expr -> . pass
    (72) expr -> . dict
    (73) expr -> . return
    (74) expr -> . modules
    (75) expr -> . exfiles
    (76) expr -> . input
    (77) expralg -> . term
    (78) expralg -> . abspath
    (79) expralg -> . invrelpath
    (80) expralg -> . subst
    (81) expralg -> . relpath
    (82) expralg -> . relpathbase
    (83) expralg -> . func
    (84) expralg -> . listdir
    (85) expralg -> . isdir
    (86) expralg -> . block
    (87) expralg -> . list
    (41) parttree -> . AMPERSAND metaexpr
    (123) alg0 -> . alg1
    (124) alg0 -> . alg0 PLUSMINUS alg1
    (125) alg0 -> . PLUSMINUS alg1
    (6) print -> . PRINT expr
    (113) varvar -> . var
    (114) varvar -> . varvar POINT var
    (111) variables -> . VARIABLES expr
    (96) python -> . PYTHON str
    (97) execfile -> . EXECFILE expr
    (40) break -> . BREAK
    (17) unless -> . UNLESS LPAREN expr RPAREN expr
    (18) unless -> . UNLESS LPAREN expr RPAREN expr ELSE expr
    (115) curfile -> . CURFILE
    (103) exectext -> . EXECTEXT expr
    (46) equal -> . expr EQUALS expr
    (109) element -> . expr LBRACKET expr RBRACKET
    (101) less -> . expr LESS expr
    (102) length -> . LENGTH LPAREN expr RPAREN
    (89) cycle -> . CYCLE
    (112) mlist -> . MLIST COLON block
    (98) evaluate -> . EVALUATE expr
    (106) yield -> . YIELD
    (108) repeat -> . REPEAT
    (120) pass -> . PASS
    (11) dict -> . LBRACE declares RBRACE
    (12) dict -> . LBRACE RBRACE
    (88) return -> . RETURN expr
    (21) modules -> . MODULES
    (117) exfiles -> . EXFILES
    (20) input -> . INPUT
    (90) term -> . str
    (91) term -> . float
    (92) term -> . int
    (93) term -> . var
    (94) term -> . undervar
    (122) abspath -> . ABSPATH
    (121) invrelpath -> . INVRELPATH
    (99) subst -> . SUBST LPAREN expr RPAREN
    (116) relpath -> . RELPATH
    (118) relpathbase -> . RELPATHBASE
    (23) func -> . WORD LPAREN args RPAREN block
    (24) func -> . WORD LPAREN args RPAREN
    (49) listdir -> . LISTDIR LPAREN expr RPAREN
    (48) isdir -> . ISDIR LPAREN expr RPAREN
    (1) block -> . LBRACE inblock RBRACE
    (36) list -> . LBRACKET comms RBRACKET
    (37) list -> . LBRACKET RBRACKET
    (126) alg1 -> . alg2
    (127) alg1 -> . alg1 DIVMUL alg2
    (110) var -> . WORD
    (107) str -> . STRING
    (105) float -> . FLOAT
    (95) int -> . NUMBER
    (38) undervar -> . AT undervar
    (39) undervar -> . AT var
    (128) alg2 -> . alg3
    (129) alg2 -> . alg2 DPROD alg3
    (130) alg3 -> . expralg

    AMPERSAND       shift and go to state 12
    PLUSMINUS       shift and go to state 69
    PRINT           shift and go to state 47
    VARIABLES       shift and go to state 55
    PYTHON          shift and go to state 57
    EXECFILE        shift and go to state 73
    BREAK           shift and go to state 82
    UNLESS          shift and go to state 74
    CURFILE         shift and go to state 88
    EXECTEXT        shift and go to state 39
    LENGTH          shift and go to state 7
    CYCLE           shift and go to state 43
    MLIST           shift and go to state 90
    EVALUATE        shift and go to state 26
    YIELD           shift and go to state 4
    REPEAT          shift and go to state 103
    PASS            shift and go to state 34
    LBRACE          shift and go to state 31
    RETURN          shift and go to state 54
    MODULES         shift and go to state 63
    EXFILES         shift and go to state 14
    INPUT           shift and go to state 95
    ABSPATH         shift and go to state 33
    INVRELPATH      shift and go to state 36
    SUBST           shift and go to state 102
    RELPATH         shift and go to state 25
    RELPATHBASE     shift and go to state 5
    WORD            shift and go to state 117
    LISTDIR         shift and go to state 30
    ISDIR           shift and go to state 51
    LBRACKET        shift and go to state 83
    STRING          shift and go to state 70
    FLOAT           shift and go to state 3
    NUMBER          shift and go to state 28
    AT              shift and go to state 56

    isdir                          shift and go to state 1
    undervar                       shift and go to state 62
    alg1                           shift and go to state 6
    expralg                        shift and go to state 64
    alg0                           shift and go to state 89
    length                         shift and go to state 66
    float                          shift and go to state 8
    equal                          shift and go to state 84
    less                           shift and go to state 9
    parttree                       shift and go to state 10
    element                        shift and go to state 13
    relpath                        shift and go to state 15
    invrelpath                     shift and go to state 16
    break                          shift and go to state 17
    alg2                           shift and go to state 2
    execfile                       shift and go to state 68
    alg3                           shift and go to state 19
    varvar                         shift and go to state 20
    return                         shift and go to state 65
    str                            shift and go to state 78
    list                           shift and go to state 23
    unless                         shift and go to state 81
    exfiles                        shift and go to state 85
    evaluate                       shift and go to state 92
    int                            shift and go to state 32
    curfile                        shift and go to state 35
    pass                           shift and go to state 37
    expr                           shift and go to state 203
    subst                          shift and go to state 86
    exectext                       shift and go to state 41
    var                            shift and go to state 116
    modules                        shift and go to state 91
    listdir                        shift and go to state 44
    term                           shift and go to state 45
    relpathbase                    shift and go to state 94
    input                          shift and go to state 48
    variables                      shift and go to state 96
    print                          shift and go to state 49
    func                           shift and go to state 50
    dict                           shift and go to state 98
    mlist                          shift and go to state 100
    block                          shift and go to state 76
    python                         shift and go to state 53
    cycle                          shift and go to state 97
    repeat                         shift and go to state 99
    yield                          shift and go to state 71
    abspath                        shift and go to state 58

state 203

    (18) unless -> UNLESS LPAREN expr RPAREN expr ELSE expr .
    (46) equal -> expr . EQUALS expr
    (109) element -> expr . LBRACKET expr RBRACKET
    (101) less -> expr . LESS expr

  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
    COLON           reduce using rule 18 (unless -> UNLESS LPAREN expr RPAREN expr ELSE expr .)
    DIVIDER         reduce using rule 18 (unless -> UNLESS LPAREN expr RPAREN expr ELSE expr .)
    $end            reduce using rule 18 (unless -> UNLESS LPAREN expr RPAREN expr ELSE expr .)
    RBRACE          reduce using rule 18 (unless -> UNLESS LPAREN expr RPAREN expr ELSE expr .)
    RBRACKET        reduce using rule 18 (unless -> UNLESS LPAREN expr RPAREN expr ELSE expr .)
    COMMA           reduce using rule 18 (unless -> UNLESS LPAREN expr RPAREN expr ELSE expr .)
    RPAREN          reduce using rule 18 (unless -> UNLESS LPAREN expr RPAREN expr ELSE expr .)
    ELSE            reduce using rule 18 (unless -> UNLESS LPAREN expr RPAREN expr ELSE expr .)
    EQUALS          shift and go to state 111
    LBRACKET        shift and go to state 112
    LESS            shift and go to state 110

  ! EQUALS          [ reduce using rule 18 (unless -> UNLESS LPAREN expr RPAREN expr ELSE expr .) ]
  ! LBRACKET        [ reduce using rule 18 (unless -> UNLESS LPAREN expr RPAREN expr ELSE expr .) ]
  ! LESS            [ reduce using rule 18 (unless -> UNLESS LPAREN expr RPAREN expr ELSE expr .) ]

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COLON in state 21 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 21 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 21 resolved as shift
WARNING: shift/reduce conflict for LESS in state 21 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 115 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 115 resolved as shift
WARNING: shift/reduce conflict for LESS in state 115 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 118 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 118 resolved as shift
WARNING: shift/reduce conflict for LESS in state 118 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 125 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 125 resolved as shift
WARNING: shift/reduce conflict for LESS in state 125 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 127 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 127 resolved as shift
WARNING: shift/reduce conflict for LESS in state 127 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 128 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 128 resolved as shift
WARNING: shift/reduce conflict for LESS in state 128 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 131 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 131 resolved as shift
WARNING: shift/reduce conflict for LESS in state 131 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 132 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 132 resolved as shift
WARNING: shift/reduce conflict for LESS in state 132 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 143 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 143 resolved as shift
WARNING: shift/reduce conflict for LESS in state 143 resolved as shift
WARNING: shift/reduce conflict for DIVIDER in state 155 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 160 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 160 resolved as shift
WARNING: shift/reduce conflict for LESS in state 160 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 161 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 161 resolved as shift
WARNING: shift/reduce conflict for LESS in state 161 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 163 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 163 resolved as shift
WARNING: shift/reduce conflict for LESS in state 163 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 169 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 169 resolved as shift
WARNING: shift/reduce conflict for LESS in state 169 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 173 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 173 resolved as shift
WARNING: shift/reduce conflict for LESS in state 173 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 178 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 178 resolved as shift
WARNING: shift/reduce conflict for LESS in state 178 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 198 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 198 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 198 resolved as shift
WARNING: shift/reduce conflict for LESS in state 198 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 200 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 200 resolved as shift
WARNING: shift/reduce conflict for LESS in state 200 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 203 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 203 resolved as shift
WARNING: shift/reduce conflict for LESS in state 203 resolved as shift
WARNING: reduce/reduce conflict in state 42 resolved using rule (term -> var)
WARNING: rejected rule (varvar -> var) in state 42
WARNING: reduce/reduce conflict in state 64 resolved using rule (expr -> expralg)
WARNING: rejected rule (alg3 -> expralg) in state 64
WARNING: reduce/reduce conflict in state 116 resolved using rule (term -> var)
WARNING: rejected rule (varvar -> var) in state 116
WARNING: reduce/reduce conflict in state 121 resolved using rule (declares -> declare)
WARNING: rejected rule (metaexpr -> declare) in state 121
